{"version":3,"file":"main.js","mappings":"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","sources":["webpack://whalegaming/./src/scripts/api.js","webpack://whalegaming/./src/scripts/components/chart/filteredChart.js","webpack://whalegaming/./src/scripts/components/chart/lineChart.js","webpack://whalegaming/./src/scripts/components/navbar.js","webpack://whalegaming/./src/scripts/components/mainPage.js","webpack://whalegaming/./src/scripts/components/subNavbar.js","webpack://whalegaming/./src/index.js","webpack://whalegaming/./src/scripts/components/modal.js","webpack://whalegaming/./src/scripts/components/search.js"],"sourcesContent":["const games = `https://mmo-games.p.rapidapi.com/games`;\n\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\",\n  },\n};\n\nlet allData = null;\nlet gamesByGenre = null;\nlet gamesByReleaseDate = null;\n\n\nexport async function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n\n    gamesByGenre = {};\n\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n\n    return { allData, gamesByReleaseDate, gamesByGenre };\n  } catch (err) {\n  }\n}\n\nexport async function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenre) {\n    await getAllData(games, options);\n  }\n\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre,\n  };\n  return data;\n}\n","import { useData } from \"../../api\";\nimport { scrollToTop } from \"../navbar\";\n\n\nexport function filteredChart(title,data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data\n    .filter((d) => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n    .map((d) => {\n      const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n        ? new Date(d.release_date).getFullYear()\n        : null;\n      return { release_year: year };\n    });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n    //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n    // needs to convert this because d3 only takes cvs data which is same as text/json\n    Object.entries(totals).map(([year, count, title]) => ({\n      year: new Date(year, 0),\n      count,\n      title,\n    })),\n    {\n      x: (d) => d.year,\n      y: (d) => d.count,\n      z: (d) => d.title,\n      yLabel: \"Number of games\",\n      xLabel: \"Released Year\",\n      width: 700,\n      height: 400,\n       color: \"#007fff\",\n      // color: \"red\", seems like this line can overwrites the colors\n      // specify the tick format for the x-axis\n      xAxisFormat: d3.timeFormat(\"%Y\"),\n    }\n  );\n\n  // Append the chart to the DOM\nlet prev = document.getElementById(\"chart_all\")\nprev.innerHTML=\"\"\nlet h1 = document.createElement(\"h1\");\n\nif(title === \"Card Game\"){\n  h1.innerHTML = `<h1>Number of The Live <span>Card</span> Games Released per Year</h1>`;\n}else{\n\n  h1.innerHTML = `<h1>Number of The Live <span>${title}</span> Games Released per Year</h1>`;\n}\n\n\n  let p = document.createElement(\"div\");\n  p.innerHTML = ` <p>This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.</p>`;\n\nprev.appendChild(h1)\nprev.appendChild(p)\nprev.appendChild(chart)\n\nuseData().then((allData)=>{\n  handleFilter(allData.gamesByGenre);\n\n  //adding class for main\n  const main = document.getElementById(\"main\")\n  main.classList.add(\"data\")\n})\n\n\n\nconst about = {\n  Shooter:\n    \"Shooter video games or shooters are a subgenre of action video games where the focus is almost entirely on the defeat of the character's enemies using the weapons given to the player.\",\n  MMORPG:\n    \"(Massively Multiplayer Online Role-Playing Game) is a genre of online game that focuses more on traditional RPG elements, such as character development, questing, and story progression. Players typically create and control their own character in a persistent virtual world and interact with other players to complete quests, explore the world, and engage in player versus player combat. Examples of MMORPGs include World of Warcraft, Final Fantasy XIV, and Guild Wars 2.\",\n  MMOARPG:\n    \"(Massively Multiplayer Online Action Role-Playing Game) is a genre of online game that blends action-oriented gameplay with role-playing elements. Players typically control a single character in a virtual world and engage in real-time combat against enemies, completing quests, and gaining experience points to level up their characters. Examples of MMOARPGs include Diablo, Path of Exile, and Torchlight.\",\n  ARPG: \"(Action Role-Playing Game): A video game genre that combines elements of traditional role-playing games with real-time action combat. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Diablo series, Path of Exile.\",\n  BattleRoyale:\n    \"A genre of online multiplayer video games in which a large number of players (typically 100) fight to be the last person or team standing. Players start with minimal equipment and must scavenge for weapons and items while avoiding a constantly shrinking play area. Example: Fortnite, PUBG.\",\n  Strategy:\n    \"A video game genre that emphasizes tactical and strategic decision-making, resource management, and long-term planning. Players control armies or civilizations, build and manage infrastructure, and engage in combat against opponents. Example: Civilization series, Age of Empires.\",\n  Fighting:\n    \"A genre of video games in which players compete against each other in hand-to-hand combat using a variety of martial arts moves and special attacks. Example: Street Fighter, Mortal Kombat.\",\n  CardGame:\n    \"A genre of video games that involve collectible cards as the primary gameplay element. Players build decks of cards with different abilities and strengths, and then use them to battle against opponents. Example: Hearthstone, Magic: The Gathering Arena.\",\n  ActionRPG:\n    \"A genre of role-playing games that emphasizes real-time combat and fast-paced action. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Dark Souls, Kingdoms of Amalur.\",\n  Racing:\n    \"A video game genre that simulates racing vehicles, either on land, sea, or air. Players compete against each other or against the clock to complete courses or races, trying to get the fastest time or cross the finish line first. Example: Forza Horizon, Need for Speed.\",\n  MOBA: \"(Multiplayer Online Battle Arena): A genre of online multiplayer video games in which players control a single character in a team-based battle against opponents. The goal is to destroy the opposing team's base while protecting their own. Example: League of Legends, Dota 2.\",\n  Sports:\n    \"A video game genre that simulates real-world sports, such as soccer, football, basketball, or tennis. Players control individual athletes or teams, competing against each other to win matches or championships. Example: FIFA, NBA 2K.\",\n  MMOFPS:\n    \"(Massively Multiplayer Online First-Person Shooter): A genre of online multiplayer video games that involve shooting and combat from a first-person perspective in a persistent virtual world. Players engage in battles against other players or non-player characters to gain experience points and advance their characters. Example: Destiny, Warframe.\",\n  MMO: \"(Massively Multiplayer Online): A genre of online multiplayer video games that support a large number of players in a shared virtual world. Players can interact with each other and engage in various activities such as completing quests, exploring the world, or battling enemies. Example: World of Warcraft, Guild Wars 2.\",\n  Social:\n    \"A video game genre that emphasizes social interaction between players. Players can create and customize their avatars, chat with other players, participate in activities, and build relationships. Example: Second Life, The Sims.\",\n  Fantasy:\n    \"sA video game genre that features elements of mythology, magic, and fictional creatures. Players can explore and interact with a virtual world filled with fantastical locations and characters. Example: The Elder Scrolls series, Final Fantasy series.\",\n};\nconst sideInfo = document.querySelector(\".chart_sideInfo\");\n\nconsole.log(title)\nsideInfo.innerHTML=\"\"\nsideInfo.innerHTML = `\n<div >\n  <h1>what is <span>${title}</span> game?</h1>\n  <p>${about[title.split(\" \").join(\"\")]}</p>\n</div>`;\n\nconsole.log(data);\n\n\n\nconst about_ul = document.createElement(\"ul\");\nabout_ul.classList.add(\"about_ul\")\nconst description_li = document.createElement(\"h4\");\ndescription_li.innerHTML = `${title} Game Data Information List`;\n\nabout_ul.appendChild(description_li);\n\ndata.forEach((obj,i) => {\n  let about_li = document.createElement(\"li\");\n  about_li.innerHTML = `<span class =\"order\">${i+1}</span> - ${obj.title} (${obj.release_date})\n  `;\n\n  about_ul.appendChild(about_li);\n});\n\nsideInfo.appendChild(about_ul);\nscrollToTop()\n\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(\n    data,\n    {\n      x = ([x]) => x, // given d in data, returns the (temporal) x-value\n      y = ([, y]) => y, // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title, // given d in data, returns the title text\n      defined, // for gaps in data\n      curve = d3.curveLinear, // method of interpolation between points\n      marginTop = 20, // top margin, in pixels\n      marginRight = 30, // right margin, in pixels\n      marginBottom = 30, // bottom margin, in pixels\n      marginLeft = 40, // left margin, in pixels\n      width = 640, // outer width, in pixels\n      height = 400, // outer height, in pixels\n      xType = d3.scaleUtc, // type of x-scale\n      xDomain, // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight], // [left, right]\n      yType = d3.scaleLinear, // type of y-scale\n      yDomain, // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop], // [bottom, top]\n      color = \"currentColor\", // stroke color of line\n      strokeWidth = 1.5, // stroke width of line, in pixels\n      strokeLinejoin = \"round\", // stroke line join of line\n      strokeLinecap = \"round\", // stroke line cap of line\n      yFormat, // a format specifier string for the y-axis\n      yLabel, // a label for the y-axis\n    } = {}\n  ) {\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, (d) => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3\n      .axisBottom(xScale)\n      .ticks(width / 80)\n      .tickFormat(d3.timeFormat(\"%Y\"))\n      .tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = (i) => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, (d) => d);\n      const T = title;\n      title = (i) => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3\n      .line()\n      .defined((i) => D[i])\n      .curve(curve)\n      .x((i) => xScale(X[i]))\n      .y((i) => yScale(Y[i]));\n\n    const svg = d3\n      .create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height])\n      .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"overflow\", \"visible\")\n      .on(\"pointerenter pointermove\", pointermoved)\n      .on(\"pointerleave\", pointerleft)\n      .on(\"touchstart\", (event) => event.preventDefault());\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${height - marginBottom})`)\n      .call(xAxis);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"x2\", width - marginLeft - marginRight)\n          .attr(\"stroke-opacity\", 0.1)\n      )\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"x\", -marginLeft)\n          .attr(\"y\", 10)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(yLabel)\n      );\n\n    svg\n      .append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", color)\n      .attr(\"stroke-width\", strokeWidth)\n      .attr(\"stroke-linejoin\", strokeLinejoin)\n      .attr(\"stroke-linecap\", strokeLinecap)\n      .attr(\"d\", line(I));\n\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n\n      const path = tooltip\n        .selectAll(\"path\")\n        .data([,])\n        .join(\"path\")\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"black\");\n\n      const text = tooltip\n        .selectAll(\"text\")\n        .data([,])\n        .join(\"text\")\n        .call((text) =>\n          text\n            .selectAll(\"tspan\")\n            .data(`${title(i)}`.split(/\\n/))\n            .join(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"y\", (_, i) => `${i * 1.1}em`)\n            .attr(\"font-weight\", (_, i) => (i ? null : \"bold\"))\n            .text((d) => d)\n        );\n\n      const { x, y, width: w, height: h } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\n        \"d\",\n        `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`\n      );\n      svg.property(\"value\", O[i]).dispatch(\"input\", { bubbles: true });\n    }\n\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", { bubbles: true });\n    }\n\n    return Object.assign(svg.node(), { value: null });\n  }\n}\n\n\n\n\n\n const handleFilter = (genres) => {\n   const main = document.querySelector(\"#main\");\n   const genreSelect = document.createElement(\"select\");\n   genreSelect.classList.add(\"genre_select\");\n\n   const sideInfo = document.querySelector(\".chart_sideInfo\");\n   sideInfo.appendChild(genreSelect);\n\n   const selectOption = document.createElement(\"option\");\n   selectOption.setAttribute(\"label\", \"Select Category\");\n   selectOption.setAttribute(\"value\", \"nocap\");\n   selectOption.selected = true;\n   selectOption.disabled = true;\n   genreSelect.appendChild(selectOption);\n\n   (\"coming from linearChart\");\n   //getting name of genres for filtering\n   const genreForFilter = [];\n\n   Object.keys(genres).forEach((keys) => {\n     if (keys !== \" MMORPG\") {\n       genreForFilter.push(keys);\n     }\n   });\n\n   //get the percentage of each genre\n   const genresFilter = genreForFilter.map((key) => {\n     return [key, genres[key].length];\n   });\n\n   // (genresFilter);\n\n   //assigning keys to ul\n   genresFilter.forEach((key, i) => {\n     const genreList = document.createElement(\"option\");\n     genreList.setAttribute(\"value\", `${key[0]}`);\n     genreList.setAttribute(\"id\", `${key[0]}`);\n     (key[1]);\n\n     genreList.innerHTML = `${key[0]}`;\n\n     genreSelect.appendChild(genreList);\n   });\n\n\n   // (filtered)\n   let selectedOption = \"nocap\";\n\n   genreSelect.addEventListener(\"change\", (event) => {\n     event.preventDefault();\n     if (event.target.value !== selectedOption) {\n       (event.target.value);\n       selectedOption = event.target.value;\n       //creatingChart\n       filteredChart(selectedOption, genres[selectedOption]);\n     }\n\n     //omg finally got it\n     (genres[selectedOption]);\n   });\n\n   // return genres[selectedOption]\n };\n","\nimport { scrollToTop } from \"../navbar\";\nimport { filteredChart } from \"./filteredChart\";\n\n\n\nexport function createChart(data,genre) {\n  // Extract the release year from each game and create an array of objects\n  const games = data\n    .filter((d) => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n    .map((d) => {\n      const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n        ? new Date(d.release_date).getFullYear()\n        : null;\n      return { release_year: year };\n    });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n    //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n    // needs to convert this because d3 only takes cvs data which is same as text/json\n    Object.entries(totals).map(([year, count, title]) => ({\n      year: new Date(year, 0),\n      count,\n    })),\n    {\n      x: (d) => d.year,\n      y: (d) => d.count,\n      yLabel: \"Number of games\",\n      xLabel: \"Released Year\",\n      width: 700,\n      height: 400,\n      color: \"#007fff\", //seems like this line can overwrites the colors\n      // specify the tick format for the x-axis\n      xAxisFormat: d3.timeFormat(\"%Y\"),\n    }\n  );\n\n  // Append the chart to the DOM\n\nconst MAIN = document.getElementById('main')\nMAIN.style.backgroundColor = \"#e2edf8\";\nconst main =document.createElement('div')\nmain.setAttribute('id','white_bg')\nMAIN.append(main)\n\n main.classList.add(\"data\");\n  let h1 = document.createElement(\"h1\");\n  let mainChart = document.createElement(\"div\");\n  h1.innerHTML = `Number of <span>All</span> The Live Games Released per Year`;\n\n  let p = document.createElement(\"div\");\n  p.innerHTML = `<p> This graph displays the number of games released per year, with the\n  y-axis representing the total number of games and the x-axis\n  representing the year of release. The graph provides a visual\n  representation of the trend of game releases over time and can be used\n  to identify any patterns or changes in the industry.</p>`;\n\n  mainChart.setAttribute(\"id\", \"chart_all\");\n\n  document.getElementById(\"main\").appendChild(mainChart);\n  mainChart.appendChild(h1);\n  mainChart.appendChild(p);\n  // description.appendChild(chartDiv);\n  mainChart.appendChild(chart);\n\n  //aside dom\n  let sideInfo = document.createElement(\"div\")\n  sideInfo.classList.add(\"chart_sideInfo\")\n\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n  <div >\n  <h1>What is the <span>future</span> of the <span>gaming industry</span>??</h1>\n  <p>Gaming is now a bigger industry than movies and sports combined. Revenue for gaming reached $184 billion in 2022, and the number of gamers is expected to grow to 3.6 billion by 2025. It's not just kids either: 38 percent of gamers are between the ages of 18 and 34 years, and 16 percent are older than 55.</p>\n  </div>`;\n\n\n  main.appendChild(mainChart)\n  main.appendChild(sideInfo)\nscrollToTop();\n\n  const genreForFilter = [];\n\n\nObject.keys(genre).forEach((keys) => {\n  if (keys !== \" MMORPG\") {\n    genreForFilter.push(keys);\n  }\n});\n\n//get the percentage of each genre\nconst genresFilter = genreForFilter.map((key) => {\n  return [key, genre[key].length];\n});\n\nconsole.log(genresFilter)\n\nconst about_ul = document.createElement(\"ul\")\nabout_ul.classList.add(\"about_ul\")\nconst description_li = document.createElement(\"h4\")\ndescription_li.innerHTML=`Category - Total Amount of Games`\n\nabout_ul.appendChild(description_li)\n\n\ngenresFilter.forEach((arr,i)=>{\n  let about_li = document.createElement(\"li\")\n  about_li.innerHTML=`<span class=\"order\">${i+1}</span> - ${arr[0]} : ${arr[1]}`\n\n  about_ul.appendChild(about_li)\n})\n\nsideInfo.appendChild(about_ul)\n\nhandleFilter(genre)\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(\n    data,\n    {\n      x = ([x]) => x, // given d in data, returns the (temporal) x-value\n      y = ([, y]) => y, // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title, // given d in data, returns the title text\n      defined, // for gaps in data\n      curve = d3.curveLinear, // method of interpolation between points\n      marginTop = 20, // top margin, in pixels\n      marginRight = 30, // right margin, in pixels\n      marginBottom = 30, // bottom margin, in pixels\n      marginLeft = 40, // left margin, in pixels\n      width = 640, // outer width, in pixels\n      height = 400, // outer height, in pixels\n      xType = d3.scaleUtc, // type of x-scale\n      xDomain, // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight], // [left, right]\n      yType = d3.scaleLinear, // type of y-scale\n      yDomain, // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop], // [bottom, top]\n      color = \"currentColor\", // stroke color of line\n      strokeWidth = 1.5, // stroke width of line, in pixels\n      strokeLinejoin = \"round\", // stroke line join of line\n      strokeLinecap = \"round\", // stroke line cap of line\n      yFormat, // a format specifier string for the y-axis\n      yLabel, // a label for the y-axis\n    } = {}\n  ) {\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, (d) => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3\n      .axisBottom(xScale)\n      .ticks(width / 80)\n      .tickFormat(d3.timeFormat(\"%Y\"))\n      .tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = (i) => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, (d) => d);\n      const T = title;\n      title = (i) => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3\n      .line()\n      .defined((i) => D[i])\n      .curve(curve)\n      .x((i) => xScale(X[i]))\n      .y((i) => yScale(Y[i]));\n\n    const svg = d3\n      .create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height])\n      .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .style(\"-webkit-tap-highlight-color\", \"transparent\")\n      .style(\"overflow\", \"visible\")\n      .on(\"pointerenter pointermove\", pointermoved)\n      .on(\"pointerleave\", pointerleft)\n      .on(\"touchstart\", (event) => event.preventDefault());\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${height - marginBottom})`)\n      .call(xAxis);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(yAxis)\n      .call((g) => g.select(\".domain\").remove())\n      .call((g) =>\n        g\n          .selectAll(\".tick line\")\n          .clone()\n          .attr(\"x2\", width - marginLeft - marginRight)\n          .attr(\"stroke-opacity\", 0.1)\n      )\n      .call((g) =>\n        g\n          .append(\"text\")\n          .attr(\"x\", -marginLeft)\n          .attr(\"y\", 10)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(yLabel)\n      );\n\n    svg\n      .append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", color)\n      .attr(\"stroke-width\", strokeWidth)\n      .attr(\"stroke-linejoin\", strokeLinejoin)\n      .attr(\"stroke-linecap\", strokeLinecap)\n      .attr(\"d\", line(I));\n\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n\n      const path = tooltip\n        .selectAll(\"path\")\n        .data([,])\n        .join(\"path\")\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"black\");\n\n      const text = tooltip\n        .selectAll(\"text\")\n        .data([,])\n        .join(\"text\")\n        .call((text) =>\n          text\n            .selectAll(\"tspan\")\n            .data(`${title(i)}`.split(/\\n/))\n            .join(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"y\", (_, i) => `${i * 1.1}em`)\n            .attr(\"font-weight\", (_, i) => (i ? null : \"bold\"))\n            .text((d) => d)\n        );\n\n      const { x, y, width: w, height: h } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\n        \"d\",\n        `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`\n      );\n      svg.property(\"value\", O[i]).dispatch(\"input\", { bubbles: true });\n    }\n\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", { bubbles: true });\n    }\n\n    return Object.assign(svg.node(), { value: null });\n  }\n}\n\n\n\n\n const handleFilter = (genres) => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Category\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n\n  (\"coming from linearChart\");\n  //getting name of genres for filtering\n  const genreForFilter = [];\n\n  Object.keys(genres).forEach((keys) => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map((key) => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    (key[1]);\n\n    genreList.innerHTML = `${key[0]}`;\n\n    genreSelect.appendChild(genreList);\n  });\n\n  const filtered = document.getElementById(\"Shooter\");\n  // (filtered)\n  let selectedOption = \"nocap\";\n\n  genreSelect.addEventListener(\"change\", (event) => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      (event.target.value);\n      selectedOption = event.target.value;\n      //creatingChart\n      filteredChart(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    (genres[selectedOption]);\n  });\n\n  // return genres[selectedOption]\n};\n\n","import { createChart } from \"./chart/lineChart\";\nexport function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: \"smooth\" });\n}\nexport const renderNavbar = () => {\n\n    const navBar = document.getElementById('menu')\n    navBar.innerHTML = `\n    <li id=\"home\"><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\">Home</a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"stat_menu\">Statistics</li>\n\n    `;\n\n\n};\n\nexport function handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\")\n  statMenu.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n\n    main.innerHTML = \"\";\n    // handleFilter(data);\n    createChart(allData,data);\n\n    // createMultiChart(dispatchGenre(data));\n  });\n\n  gameMenu.addEventListener(\"click\",event=>{\n    event.preventDefault()\n        main.style.backgroundColor = \"#0a1929\";\n    main.innerHTML=\"\"\n       main.classList.add(\"cards\");\n allData.forEach((game) => {\n   const card = document.createElement(\"div\");\n   main.classList.add('card_page')\n   //rendering cards\n  card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n  main.appendChild(card);\nscrollToTop();\n      const button = document.getElementById(game.id);\n      button.addEventListener(\"click\", (event) => {\n\n        console.log(event.target.id);\n        /// now it needs to fetch the data based on the id\n        fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\":\n              \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n            \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\",\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {console.log(data)\n            main.innerHTML=\"\"\n            const detail_section = document.createElement(\"div\")\n             detail_section.classList.add(\"d_main\");\n               main.style.backgroundColor = \"#132f4c\";\n               const image = data.screenshots.length !==0 ?[\n                 data.screenshots[0].image,\n                 data.screenshots[1].image,\n                 data.screenshots[2].image,\n               ] : \"Screenshot Unavailable \";\n   detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n     <img src=\"${image[1]}\" alt=\"${data.title} screenshot\">\n      <img src=\"${image[2]}\" alt=\"${data.title} screenshot\">\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n            main.appendChild(detail_section)\n            scrollToTop()\n\n          })\n          .catch((err) => console.error(\"error:\" + err));\n      });\n\n })\n  })\n}\n","import { createChart } from \"./chart/lineChart\";\nfunction scrollToTop() {\n  window.scrollTo({ top: 0, behavior: \"smooth\" });\n}\nexport const renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Level Up Your</h1>\n        <h1> <span>Gaming</span> Knowledge</h1>\n        <h1>Search, Discover and <span>Play</span></h1>\n\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Get the <span>Edge</span></h1>\n        <h1>with Our Comprehensive</h1>\n        <h1> Gaming<span> Data</span> Analysis</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n  scrollToTop();\n};\n\nexport function handlePage(allData) {\n  (\"handlepage\");\n\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    (\"button\");\n    main.innerHTML = \"\";\n    main.style.backgroundColor = \"#0a1929\";\n    main.classList.add(\"card_page\");\n    allData.forEach((game) => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n      scrollToTop();\n      const button = document.getElementById(game.id);\n      button.addEventListener(\"click\", (event) => {\n        console.log(event.target.id);\n        /// now it needs to fetch the data based on the id\n        fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\":\n              \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n            \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\",\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            console.log(data);\n            main.innerHTML = \"\";\n            const detail_section = document.createElement(\"div\");\n            detail_section.classList.add(\"d_main\");\n            main.style.backgroundColor = \"#132f4c\";\n\n            const image =\n              data.screenshots.length !== 0\n                ? [\n                    data.screenshots[0].image,\n                    data.screenshots[1].image,\n                    data.screenshots[2].image,\n                  ]\n                : \"Screenshot Unavailable \";\n            detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n     <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n     <img src=\"${image[1]}\" alt=\"${data.title} screenshot\">\n      <img src=\"${image[2]}\" alt=\"${data.title} screenshot\">\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n            main.appendChild(detail_section);\n            scrollToTop();\n          })\n          .catch((err) => console.error(\"error:\" + err));\n      });\n    });\n  });\n}\n\nexport function handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  const main = document.getElementById(\"main\");\n  main.classList.remove(\"card_page\");\n  dataButton.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    (\"databutton\");\n    // handleFilter(data)\n    createChart(allData, data);\n    main.classList.add(\"card_page\");\n    // createMultiChart(dispatchGenre(data));\n  });\n}\n","import { scrollToTop } from \"./navbar\";\n\n\n\nexport const handleSubNavbar = (genres) => {\n  const genreForFilter = [];\n\n  Object.keys(genres).forEach((keys) => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  console.log(\"coming from subNav\");\n  console.log(genreForFilter);\n\n  const submenu = document.querySelector(\"#submenu\");\n  genreForFilter.forEach((genre) => {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `${genre}`;\n    li.setAttribute(\"id\", genre);\n    submenu.appendChild(li);\n\n    li.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      main.style.backgroundColor = \"#0a1929\";\n      main.innerHTML = \"\";\n      main.classList.add(\"cards\");\n      console.log(genres[event.target.id]);\n      let games = genres[event.target.id];\n      games.forEach((game) => {\n        const card = document.createElement(\"div\");\n        main.classList.add(\"card_page\");\n        //rendering cards\n        card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n        main.appendChild(card);\n        scrollToTop();\n        //buttons\n        const button = document.getElementById(game.id);\n        button.addEventListener(\"click\", (event) => {\n          console.log(event.target.id);\n          /// now it needs to fetch the data based on the id\n          fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n            method: \"GET\",\n            headers: {\n              \"X-RapidAPI-Key\":\n                \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n              \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\",\n            },\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              console.log(data);\n              main.innerHTML = \"\";\n              const detail_section = document.createElement(\"div\");\n              detail_section.classList.add(\"d_main\");\n              main.style.backgroundColor = \"#132f4c\";\n              const image =\n                data.screenshots.length !== 0\n                  ? [\n                      data.screenshots[0].image,\n                      data.screenshots[1].image,\n                      data.screenshots[2].image,\n                    ]\n                  : \"Screenshot Unavailable \";\n              detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n     <img src=\"${image[1]}\" alt=\"${data.title} screenshot\">\n      <img src=\"${image[2]}\" alt=\"${data.title} screenshot\">\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n              main.appendChild(detail_section);\n              scrollToTop();\n            })\n            .catch((err) => console.error(\"error:\" + err));\n        });\n      });\n    });\n  });\n};\n","import { useData } from \"./scripts/api\";\nimport { renderNavbar, handleNavbarClick } from \"./scripts/components/navbar\";\nimport { renderSearchBar, handleSearch } from \"./scripts/components/search\";\nimport {\n  renderMainPage,\n  handlePage,\n  handleDataPage,\n} from \"./scripts/components/mainPage\";\nimport { handleSubNavbar } from \"./scripts/components/subNavbar\";\nimport { renderPopup } from \"./scripts/components/modal\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  renderPopup();\n  renderNavbar();\n  renderSearchBar();\n  renderMainPage();\n\n  useData().then((allData) => {\n    handleSearch(allData.allData, main);\n    handlePage(allData.allData, allData.gamesByGenre);\n    handleDataPage(allData.allData, allData.gamesByGenre);\n    handleNavbarClick(allData.allData, allData.gamesByGenre);\n    handleSubNavbar(allData.gamesByGenre);\n  });\n});\n","import { scrollToTop } from \"./navbar\";\n\nexport function renderPopup() {\n  const popup = document.getElementById(\"popup\");\nscrollToTop()\n  popup.classList.add(\"p_show\");\n\n  popup.innerHTML = `\n    <div class=\"introduction\">\n      <button ><i id=\"b_close\" class=\"fa-solid fa-square-xmark\"></i></button>\n  <div>\n<h1 class=\"welcome\">Welcome to Whale Gaming 🐳</h1>\n\n <p>Our website offers information and data visualization based on the MMOBomb API.</p>\n</div>\n\n<div>\n<h2>Navigation</h2>\n<p>To navigate to different pages, you can use the <span>navbar</span> at the top of the page.</p>\n</div>\n\n<div>\n<h2>Search</h2>\n<p>To search for a specific game, use the <span>search bar</span> at the top of the main page.</p>\n</div>\n\n<div>\n<h2>Game Details</h2>\n<p>To view the details of a specific game, <span>click</span> on its <span>card</span>. This will take you to the game's detail page, where you can read about its description and more.</p>\n</div>\n\n<div>\n<h2>Data Visualization</h2>\n<p>To view the data visualization, navigate to the \"Data Visualization\" page using the <span>navbar (statistics) </span> or from main page by <span>clicking</span> <span>explore</span> button.</p>\n</div>\n\n<div>\n<h2></h2>\n<p>That's it! Now you should be able to explore new games and data on Whale Gaming. Happy gaming!</p>\n</div>\n\n\n</div>\n\n\n    `;\n\nconst closeButton = document.getElementById(\"b_close\");\n      closeButton.addEventListener(\"click\", (event) => {\n        console.log(event.target)\n        if (event.target == closeButton) {\n          popup.style.display = \"none\";\n        }\n      });\n}\n\n","import { scrollToTop } from \"./navbar\";\n\nscrollToTop;\nexport const renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement(\"li\");\n  // search.classList.add('search')\n  search.setAttribute(\"id\", \"search\");\n  menu.appendChild(search);\n  search.innerHTML = `\n\n\n <input id=\"searchInput\" type=\"text\" placeholder='🔍Search...'>\n\n\n\n\n    `;\n};\n\nexport function handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", (event) => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else if (searchTerm === \"\") {\n      main.innerHTML = \"\";\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = `<h1 style=\"color:white;\">Please Type Something to Search!</h1>`;\n    } else if (searchTerm.length < 3) {\n      main.innerHTML = \"\";\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = `<h1 style=\"color:white;\">Search Keywords Need To Be Longer Than 3 Characters</h1>`;\n    } else {\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = \"\";\n      main.innerHTML = `<img src=\"https://cdn.discordapp.com/attachments/952591530626023464/1085403940591501342/404.png\" width=\"600px\">`;\n    }\n  });\n}\n\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach((game) => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    // if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      let id = game.id;\n      console.log(game.id);\n      // (game);\n\n      //       const card = document.createElement(\"div\");\n      //       card.innerHTML = `\n      // <div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      //       <ul class=\"card_info\">\n      //       <li><h1 id =\"game_title\">${game.title}</h1></li>\n      //       <li class=\"genre\">${game.genre}</li>\n      //       <li class=\"description\">${game.short_description}</li>\n      //       </ul>\n      //       </div>\n      //       `;\n      fetch(`https://mmo-games.p.rapidapi.com/game?id=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\":\n            \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n          \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\",\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          main.innerHTML = \"\";\n          const detail_section = document.createElement(\"div\");\n          detail_section.classList.add(\"d_main\");\n          detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${data.screenshots[0].image}\" alt=\"${data.title} screenshot\">\n     <img src=\"${data.screenshots[1].image}\" alt=\"${data.title} screenshot\">\n      <img src=\"${data.screenshots[2].image}\" alt=\"${data.title} screenshot\">\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n          main.appendChild(detail_section);\n          main.style.backgroundColor = \"#132f4c\";\n          scrollToTop();\n        });\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}\n"],"names":["games","options","method","headers","Accept","allData","gamesByGenre","gamesByReleaseDate","async","useData","url","response","fetch","json","game","release_date","push","genre","err","getAllData","filteredChart","title","data","totals","filter","d","map","release_year","Date","parse","getFullYear","reduce","acc","chart","x","_ref2","y","_ref3","defined","curve","d3","curveLinear","marginTop","marginRight","marginBottom","marginLeft","width","height","xType","scaleUtc","xDomain","xRange","yType","scaleLinear","yDomain","yRange","color","strokeWidth","strokeLinejoin","strokeLinecap","yFormat","yLabel","arguments","length","undefined","X","Y","O","I","_","i","isNaN","D","extent","max","xScale","yScale","xAxis","axisBottom","ticks","tickFormat","timeFormat","tickSizeOuter","yAxis","axisLeft","formatDate","formatValue","T","line","svg","create","attr","style","on","event","bisectCenter","invert","pointer","tooltip","path","selectAll","join","text","call","split","w","h","node","getBBox","property","dispatch","bubbles","value","preventDefault","append","g","select","remove","clone","Object","assign","LineChart","entries","_ref","year","count","z","xLabel","xAxisFormat","prev","document","getElementById","innerHTML","h1","createElement","p","appendChild","then","handleFilter","classList","add","sideInfo","querySelector","console","log","Shooter","MMORPG","MMOARPG","ARPG","BattleRoyale","Strategy","Fighting","CardGame","ActionRPG","Racing","MOBA","Sports","MMOFPS","MMO","Social","Fantasy","about_ul","description_li","forEach","obj","about_li","scrollToTop","genres","genreSelect","selectOption","setAttribute","selected","disabled","genreForFilter","keys","key","genreList","selectedOption","addEventListener","target","createChart","MAIN","backgroundColor","main","mainChart","genresFilter","arr","window","scrollTo","top","behavior","handleNavbarClick","gameMenu","card","thumbnail","id","res","detail_section","image","screenshots","developer","publisher","platform","description","game_url","catch","error","handleSubNavbar","submenu","li","popup","closeButton","display","renderPopup","renderSearchBar","menu","search","searchTerm","gameTitle","toLowerCase","searchInput","includes","getSearchResult","handleSearch","handlePage","dataButton","handleDataPage"],"sourceRoot":""}