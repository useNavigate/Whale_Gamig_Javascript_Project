/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/api */ \"./src/scripts/api.js\");\n/* harmony import */ var _scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/components/navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _scripts_components_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/components/search */ \"./src/scripts/components/search.js\");\n/* harmony import */ var _scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/components/mainPage */ \"./src/scripts/components/mainPage.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  \"Hello world!\";\n  (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.renderNavbar)();\n  (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.renderSearchBar)();\n  (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.renderMainPage)();\n  (0,_scripts_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    // handleFilter(allData.gamesByGenre)\n    console.log(allData.allData);\n    (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.handleSearch)(allData.allData, main);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handlePage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handleDataPage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.handleNavbarClick)(allData.allData, allData.gamesByGenre);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDc0M7QUFDRjtBQUNiO0FBQ0o7QUFDSTtBQUkvRFEsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBQ2xELE1BQU1DLElBQUksR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzNDLGNBQWM7RUFDZlYsd0VBQVksRUFBRTtFQUNkRSwyRUFBZSxFQUFFO0VBQ2pCRSw0RUFBYyxFQUFFO0VBR2hCTCxxREFBTyxFQUFFLENBQUNZLElBQUksQ0FBRUMsT0FBTyxJQUFLO0lBQzFCO0lBQ0FDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixPQUFPLENBQUNBLE9BQU8sQ0FBQztJQUM1QlQsd0VBQVksQ0FBQ1MsT0FBTyxDQUFDQSxPQUFPLEVBQUVILElBQUksQ0FBQztJQUNuQ0osd0VBQVUsQ0FBQ08sT0FBTyxDQUFDQSxPQUFPLEVBQUNBLE9BQU8sQ0FBQ0csWUFBWSxDQUFDO0lBQ2hEVCw0RUFBYyxDQUFDTSxPQUFPLENBQUNBLE9BQU8sRUFBQ0EsT0FBTyxDQUFDRyxZQUFZLENBQUM7SUFDcERkLDZFQUFpQixDQUFDVyxPQUFPLENBQUNBLE9BQU8sRUFBQ0EsT0FBTyxDQUFDRyxZQUFZLENBQUM7RUFJekQsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VEYXRhIH0gZnJvbSBcIi4vc2NyaXB0cy9hcGlcIjtcbmltcG9ydCB7IHJlbmRlck5hdmJhciwgaGFuZGxlTmF2YmFyQ2xpY2sgfSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbmF2YmFyXCI7XG5pbXBvcnQgeyByZW5kZXJTZWFyY2hCYXIsIGhhbmRsZVNlYXJjaCB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9zZWFyY2hcIjtcbmltcG9ydCB7IHJlbmRlck1haW5QYWdlIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlXCI7XG5pbXBvcnQgeyBoYW5kbGVQYWdlIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlXCI7XG5pbXBvcnQgeyBoYW5kbGVEYXRhUGFnZSB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9tYWluUGFnZVwiO1xuXG5cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluXCIpO1xuICAoXCJIZWxsbyB3b3JsZCFcIik7XG4gIHJlbmRlck5hdmJhcigpO1xuICByZW5kZXJTZWFyY2hCYXIoKTtcbiAgcmVuZGVyTWFpblBhZ2UoKVxuXG5cbiAgdXNlRGF0YSgpLnRoZW4oKGFsbERhdGEpID0+IHtcbiAgICAvLyBoYW5kbGVGaWx0ZXIoYWxsRGF0YS5nYW1lc0J5R2VucmUpXG4gICAgY29uc29sZS5sb2coYWxsRGF0YS5hbGxEYXRhKVxuICAgIGhhbmRsZVNlYXJjaChhbGxEYXRhLmFsbERhdGEsIG1haW4pO1xuICAgIGhhbmRsZVBhZ2UoYWxsRGF0YS5hbGxEYXRhLGFsbERhdGEuZ2FtZXNCeUdlbnJlKVxuICAgIGhhbmRsZURhdGFQYWdlKGFsbERhdGEuYWxsRGF0YSxhbGxEYXRhLmdhbWVzQnlHZW5yZSlcbiAgICBoYW5kbGVOYXZiYXJDbGljayhhbGxEYXRhLmFsbERhdGEsYWxsRGF0YS5nYW1lc0J5R2VucmUpXG5cblxuXG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOlsidXNlRGF0YSIsInJlbmRlck5hdmJhciIsImhhbmRsZU5hdmJhckNsaWNrIiwicmVuZGVyU2VhcmNoQmFyIiwiaGFuZGxlU2VhcmNoIiwicmVuZGVyTWFpblBhZ2UiLCJoYW5kbGVQYWdlIiwiaGFuZGxlRGF0YVBhZ2UiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtYWluIiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJhbGxEYXRhIiwiY29uc29sZSIsImxvZyIsImdhbWVzQnlHZW5yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllData\": function() { return /* binding */ getAllData; },\n/* harmony export */   \"useData\": function() { return /* binding */ useData; }\n/* harmony export */ });\nconst games = `https://mmo-games.p.rapidapi.com/games`;\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n  }\n};\nlet allData = null;\nlet gamesByGenre = null;\n// let gamesByPlatform = null;\n// let gamesByPublisher = null;\nlet gamesByReleaseDate = null;\nasync function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n    gamesByGenre = {};\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n    return {\n      allData,\n      gamesByReleaseDate,\n      gamesByGenre\n    }; // it actually needs to return the promise value that has these data i want\n  } catch (err) {\n    console.error(\"error:\" + err);\n  }\n}\n\n/*\n  this function returns data so i don't have to fetch every single time\n  this will only fetch if data is not there also it helps me to get out from call back\n  & chain hell that i was stuck for long time... 😭\n\n  and exporting this because exporting allData and gamesByGenre are useless... it still going to be undefined and its 'promise value'\n  so its better to export this function that actually returns the data i need\n*/\nasync function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenre) {\n    /* this is way to get out from call back hell and also we do not need to fetch EVERY SINGLE TIME*/\n    await getAllData(games, options);\n  }\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre\n  };\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUksd0NBQXVDO0FBQ3RELE1BQU1DLE9BQU8sR0FBRztFQUNkQyxNQUFNLEVBQUUsS0FBSztFQUNiQyxPQUFPLEVBQUU7SUFDUCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDQyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCLGdCQUFnQixFQUFFLG9EQUFvRDtJQUN0RSxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUM7QUFFRCxJQUFJQyxPQUFPLEdBQUcsSUFBSTtBQUNsQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtBQUN2QjtBQUNBO0FBQ0EsSUFBSUMsa0JBQWtCLEdBQUcsSUFBSTtBQUd0QixlQUFlQyxVQUFVQSxDQUFDQyxHQUFHLEVBQUVSLE9BQU8sRUFBRTtFQUM3QyxJQUFJO0lBQ0YsTUFBTVMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsR0FBRyxFQUFFUixPQUFPLENBQUM7SUFDMUMsTUFBTUQsS0FBSyxHQUFHLE1BQU1VLFFBQVEsQ0FBQ0UsSUFBSSxFQUFFO0lBQ25DUCxPQUFPLEdBQUdMLEtBQUs7SUFDZk8sa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLEtBQUssTUFBTU0sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVMsWUFBWSxHQUFHRCxJQUFJLENBQUNDLFlBQVk7TUFDdEMsSUFBSSxDQUFDUCxrQkFBa0IsQ0FBQ08sWUFBWSxDQUFDLEVBQUU7UUFDckNQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsR0FBRyxFQUFFO01BQ3ZDO01BQ0FQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDN0M7SUFFQVAsWUFBWSxHQUFDLENBQUMsQ0FBQztJQUVmLEtBQUssTUFBTU8sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVcsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7TUFDeEIsSUFBSSxDQUFDVixZQUFZLENBQUNVLEtBQUssQ0FBQyxFQUFFO1FBQ3hCVixZQUFZLENBQUNVLEtBQUssQ0FBQyxHQUFHLEVBQUU7TUFDMUI7TUFDQVYsWUFBWSxDQUFDVSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDaEM7SUFFQSxPQUFPO01BQUVSLE9BQU87TUFBRUUsa0JBQWtCO01BQUVEO0lBQWEsQ0FBQyxDQUFDLENBQUM7RUFDeEQsQ0FBQyxDQUFDLE9BQU9XLEdBQUcsRUFBRTtJQUNaQyxPQUFPLENBQUNDLEtBQUssQ0FBQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQztFQUMvQjtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxlQUFlRyxPQUFPQSxDQUFBLEVBQUc7RUFFOUIsSUFBSSxDQUFDZixPQUFPLElBQUksQ0FBQ0Usa0JBQWtCLElBQUksQ0FBQ0QsWUFBWSxFQUFFO0lBQ3BEO0lBQ0EsTUFBTUUsVUFBVSxDQUFDUixLQUFLLEVBQUVDLE9BQU8sQ0FBQztFQUNsQztFQUVBLE1BQU1vQixJQUFJLEdBQUc7SUFDWGhCLE9BQU87SUFDUEUsa0JBQWtCO0lBQ3RCRDtFQUNFLENBQUM7RUFDRCxPQUFPZSxJQUFJO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2FwaS5qcz9hMzk3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdhbWVzID0gYGh0dHBzOi8vbW1vLWdhbWVzLnAucmFwaWRhcGkuY29tL2dhbWVzYDtcbmNvbnN0IG9wdGlvbnMgPSB7XG4gIG1ldGhvZDogXCJHRVRcIixcbiAgaGVhZGVyczoge1xuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgXCJYLVJhcGlkQVBJLUtleVwiOiBcIjViYWFlNmRhN2Ftc2g2ZDU2M2NiZjExYWMyYTBwMWQ2ZDU2anNuNDg4NTNhYjUwZDY3XCIsXG4gICAgXCJYLVJhcGlkQVBJLUhvc3RcIjogXCJtbW8tZ2FtZXMucC5yYXBpZGFwaS5jb21cIixcbiAgfSxcbn07XG5cbmxldCBhbGxEYXRhID0gbnVsbDtcbmxldCBnYW1lc0J5R2VucmUgPSBudWxsO1xuLy8gbGV0IGdhbWVzQnlQbGF0Zm9ybSA9IG51bGw7XG4vLyBsZXQgZ2FtZXNCeVB1Ymxpc2hlciA9IG51bGw7XG5sZXQgZ2FtZXNCeVJlbGVhc2VEYXRlID0gbnVsbDtcblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsRGF0YSh1cmwsIG9wdGlvbnMpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgb3B0aW9ucyk7XG4gICAgY29uc3QgZ2FtZXMgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgYWxsRGF0YSA9IGdhbWVzO1xuICAgIGdhbWVzQnlSZWxlYXNlRGF0ZSA9IHt9O1xuICAgIGZvciAoY29uc3QgZ2FtZSBvZiBhbGxEYXRhKSB7XG4gICAgICBjb25zdCByZWxlYXNlX2RhdGUgPSBnYW1lLnJlbGVhc2VfZGF0ZTtcbiAgICAgIGlmICghZ2FtZXNCeVJlbGVhc2VEYXRlW3JlbGVhc2VfZGF0ZV0pIHtcbiAgICAgICAgZ2FtZXNCeVJlbGVhc2VEYXRlW3JlbGVhc2VfZGF0ZV0gPSBbXTtcbiAgICAgIH1cbiAgICAgIGdhbWVzQnlSZWxlYXNlRGF0ZVtyZWxlYXNlX2RhdGVdLnB1c2goZ2FtZSk7XG4gICAgfVxuXG4gICAgZ2FtZXNCeUdlbnJlPXt9XG5cbiAgICBmb3IgKGNvbnN0IGdhbWUgb2YgYWxsRGF0YSkge1xuICAgICAgY29uc3QgZ2VucmUgPSBnYW1lLmdlbnJlO1xuICAgICAgaWYgKCFnYW1lc0J5R2VucmVbZ2VucmVdKSB7XG4gICAgICAgIGdhbWVzQnlHZW5yZVtnZW5yZV0gPSBbXTtcbiAgICAgIH1cbiAgICAgIGdhbWVzQnlHZW5yZVtnZW5yZV0ucHVzaChnYW1lKTtcbiAgICB9XG5cbiAgICByZXR1cm4geyBhbGxEYXRhLCBnYW1lc0J5UmVsZWFzZURhdGUsIGdhbWVzQnlHZW5yZSB9OyAvLyBpdCBhY3R1YWxseSBuZWVkcyB0byByZXR1cm4gdGhlIHByb21pc2UgdmFsdWUgdGhhdCBoYXMgdGhlc2UgZGF0YSBpIHdhbnRcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihcImVycm9yOlwiICsgZXJyKTtcbiAgfVxufVxuXG4vKlxuICB0aGlzIGZ1bmN0aW9uIHJldHVybnMgZGF0YSBzbyBpIGRvbid0IGhhdmUgdG8gZmV0Y2ggZXZlcnkgc2luZ2xlIHRpbWVcbiAgdGhpcyB3aWxsIG9ubHkgZmV0Y2ggaWYgZGF0YSBpcyBub3QgdGhlcmUgYWxzbyBpdCBoZWxwcyBtZSB0byBnZXQgb3V0IGZyb20gY2FsbCBiYWNrXG4gICYgY2hhaW4gaGVsbCB0aGF0IGkgd2FzIHN0dWNrIGZvciBsb25nIHRpbWUuLi4g8J+YrVxuXG4gIGFuZCBleHBvcnRpbmcgdGhpcyBiZWNhdXNlIGV4cG9ydGluZyBhbGxEYXRhIGFuZCBnYW1lc0J5R2VucmUgYXJlIHVzZWxlc3MuLi4gaXQgc3RpbGwgZ29pbmcgdG8gYmUgdW5kZWZpbmVkIGFuZCBpdHMgJ3Byb21pc2UgdmFsdWUnXG4gIHNvIGl0cyBiZXR0ZXIgdG8gZXhwb3J0IHRoaXMgZnVuY3Rpb24gdGhhdCBhY3R1YWxseSByZXR1cm5zIHRoZSBkYXRhIGkgbmVlZFxuKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1c2VEYXRhKCkge1xuXG4gIGlmICghYWxsRGF0YSB8fCAhZ2FtZXNCeVJlbGVhc2VEYXRlIHx8ICFnYW1lc0J5R2VucmUpIHtcbiAgICAvKiB0aGlzIGlzIHdheSB0byBnZXQgb3V0IGZyb20gY2FsbCBiYWNrIGhlbGwgYW5kIGFsc28gd2UgZG8gbm90IG5lZWQgdG8gZmV0Y2ggRVZFUlkgU0lOR0xFIFRJTUUqL1xuICAgIGF3YWl0IGdldEFsbERhdGEoZ2FtZXMsIG9wdGlvbnMpO1xuICB9XG5cbiAgY29uc3QgZGF0YSA9IHtcbiAgICBhbGxEYXRhLFxuICAgIGdhbWVzQnlSZWxlYXNlRGF0ZSxcbmdhbWVzQnlHZW5yZVxuICB9O1xuICByZXR1cm4gZGF0YTtcbn1cblxuXG5cbiJdLCJuYW1lcyI6WyJnYW1lcyIsIm9wdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0IiwiYWxsRGF0YSIsImdhbWVzQnlHZW5yZSIsImdhbWVzQnlSZWxlYXNlRGF0ZSIsImdldEFsbERhdGEiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwianNvbiIsImdhbWUiLCJyZWxlYXNlX2RhdGUiLCJwdXNoIiwiZ2VucmUiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJ1c2VEYXRhIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/api.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/filteredChart.js":
/*!*******************************************************!*\
  !*** ./src/scripts/components/chart/filteredChart.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filteredChart\": function() { return /* binding */ filteredChart; }\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api */ \"./src/scripts/api.js\");\n\nfunction filteredChart(title, data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count,\n      title\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 700,\n    height: 400,\n    color: \"#007fff\",\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  let prev = document.getElementById(\"chart_all\");\n  prev.innerHTML = \"\";\n  let h1 = document.createElement(\"h1\");\n  if (title === \"Card Game\") {\n    h1.innerHTML = `<h1>Number of The Live <span>Card</span> Games Released per Year</h1>`;\n  } else {\n    h1.innerHTML = `<h1>Number of The Live <span>${title}</span> Games Released per Year</h1>`;\n  }\n  let p = document.createElement(\"div\");\n  p.innerHTML = ` <p>This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.</p>`;\n  prev.appendChild(h1);\n  prev.appendChild(p);\n  prev.appendChild(chart);\n  (0,_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    handleFilter(allData.gamesByGenre);\n\n    //adding class for main\n    const main = document.getElementById(\"main\");\n    main.classList.add(\"data\");\n  });\n  const about = {\n    Shooter: \"Shooter video games or shooters are a subgenre of action video games where the focus is almost entirely on the defeat of the character's enemies using the weapons given to the player.\",\n    MMORPG: \"(Massively Multiplayer Online Role-Playing Game) is a genre of online game that focuses more on traditional RPG elements, such as character development, questing, and story progression. Players typically create and control their own character in a persistent virtual world and interact with other players to complete quests, explore the world, and engage in player versus player combat. Examples of MMORPGs include World of Warcraft, Final Fantasy XIV, and Guild Wars 2.\",\n    MMOARPG: \"(Massively Multiplayer Online Action Role-Playing Game) is a genre of online game that blends action-oriented gameplay with role-playing elements. Players typically control a single character in a virtual world and engage in real-time combat against enemies, completing quests, and gaining experience points to level up their characters. Examples of MMOARPGs include Diablo, Path of Exile, and Torchlight.\",\n    ARPG: \"(Action Role-Playing Game): A video game genre that combines elements of traditional role-playing games with real-time action combat. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Diablo series, Path of Exile.\",\n    BattleRoyale: \"A genre of online multiplayer video games in which a large number of players (typically 100) fight to be the last person or team standing. Players start with minimal equipment and must scavenge for weapons and items while avoiding a constantly shrinking play area. Example: Fortnite, PUBG.\",\n    Strategy: \"A video game genre that emphasizes tactical and strategic decision-making, resource management, and long-term planning. Players control armies or civilizations, build and manage infrastructure, and engage in combat against opponents. Example: Civilization series, Age of Empires.\",\n    Fighting: \"A genre of video games in which players compete against each other in hand-to-hand combat using a variety of martial arts moves and special attacks. Example: Street Fighter, Mortal Kombat.\",\n    CardGame: \"A genre of video games that involve collectible cards as the primary gameplay element. Players build decks of cards with different abilities and strengths, and then use them to battle against opponents. Example: Hearthstone, Magic: The Gathering Arena.\",\n    ActionRPG: \"A genre of role-playing games that emphasizes real-time combat and fast-paced action. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Dark Souls, Kingdoms of Amalur.\",\n    Racing: \"A video game genre that simulates racing vehicles, either on land, sea, or air. Players compete against each other or against the clock to complete courses or races, trying to get the fastest time or cross the finish line first. Example: Forza Horizon, Need for Speed.\",\n    MOBA: \"(Multiplayer Online Battle Arena): A genre of online multiplayer video games in which players control a single character in a team-based battle against opponents. The goal is to destroy the opposing team's base while protecting their own. Example: League of Legends, Dota 2.\",\n    Sports: \"A video game genre that simulates real-world sports, such as soccer, football, basketball, or tennis. Players control individual athletes or teams, competing against each other to win matches or championships. Example: FIFA, NBA 2K.\",\n    MMOFPS: \"(Massively Multiplayer Online First-Person Shooter): A genre of online multiplayer video games that involve shooting and combat from a first-person perspective in a persistent virtual world. Players engage in battles against other players or non-player characters to gain experience points and advance their characters. Example: Destiny, Warframe.\",\n    MMO: \"(Massively Multiplayer Online): A genre of online multiplayer video games that support a large number of players in a shared virtual world. Players can interact with each other and engage in various activities such as completing quests, exploring the world, or battling enemies. Example: World of Warcraft, Guild Wars 2.\",\n    Social: \"A video game genre that emphasizes social interaction between players. Players can create and customize their avatars, chat with other players, participate in activities, and build relationships. Example: Second Life, The Sims.\",\n    Fantasy: \"sA video game genre that features elements of mythology, magic, and fictional creatures. Players can explore and interact with a virtual world filled with fantastical locations and characters. Example: The Elder Scrolls series, Final Fantasy series.\"\n  };\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  console.log(title);\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n<div >\n  <h1>what is <span>${title}</span> game?</h1>\n  <p>${about[title.split(\" \").join(\"\")]}</p>\n</div>`;\n  console.log(data);\n  const about_ul = document.createElement(\"ul\");\n  about_ul.classList.add(\"about_ul\");\n  const description_li = document.createElement(\"h4\");\n  description_li.innerHTML = `${title} Game Data Information List`;\n  about_ul.appendChild(description_li);\n  data.forEach((obj, i) => {\n    let about_li = document.createElement(\"li\");\n    about_li.innerHTML = `${i + 1} - ${obj.title} <br> Release Data - ${obj.release_date}\n  `;\n    about_ul.appendChild(about_li);\n  });\n  sideInfo.appendChild(about_ul);\n\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Options\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      filteredChart(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/filteredChart.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/lineChart.js":
/*!***************************************************!*\
  !*** ./src/scripts/components/chart/lineChart.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChart\": function() { return /* binding */ createChart; }\n/* harmony export */ });\n/* harmony import */ var _filteredChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filteredChart */ \"./src/scripts/components/chart/filteredChart.js\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../api */ \"./src/scripts/api.js\");\n\n\nfunction createChart(data, genre) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 700,\n    height: 400,\n    color: \"#007fff\",\n    //seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  const main = document.getElementById('main');\n  main.classList.add(\"data\");\n  let h1 = document.createElement(\"h1\");\n  let mainChart = document.createElement(\"div\");\n  h1.innerHTML = `Number of <span>All</span> The Live Games Released per Year`;\n  let p = document.createElement(\"div\");\n  p.innerHTML = `<p> This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.</p>`;\n  mainChart.setAttribute(\"id\", \"chart_all\");\n  document.getElementById(\"main\").appendChild(mainChart);\n  mainChart.appendChild(h1);\n  mainChart.appendChild(p);\n  // description.appendChild(chartDiv);\n  mainChart.appendChild(chart);\n\n  //aside dom\n  let sideInfo = document.createElement(\"div\");\n  sideInfo.classList.add(\"chart_sideInfo\");\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n<div >\n  <h1>What is the <span>future</span> of the <span>gaming industry</span>??</h1>\n  <p>Gaming is now a bigger industry than movies and sports combined. Revenue for gaming reached $184 billion in 2022, and the number of gamers is expected to grow to 3.6 billion by 2025. It's not just kids either: 38 percent of gamers are between the ages of 18 and 34 years, and 16 percent are older than 55.</p>\n</div>`;\n  main.appendChild(sideInfo);\n  const genreForFilter = [];\n  Object.keys(genre).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genre[key].length];\n  });\n  console.log(genresFilter);\n  const about_ul = document.createElement(\"ul\");\n  const description_li = document.createElement(\"h4\");\n  description_li.innerHTML = `Category - Total Amount of Games`;\n  about_ul.appendChild(description_li);\n  genresFilter.forEach((arr, i) => {\n    let about_li = document.createElement(\"li\");\n    about_li.innerHTML = `${i + 1} - ${arr[0]} : ${arr[1]}`;\n    about_ul.appendChild(about_li);\n  });\n  sideInfo.appendChild(about_ul);\n  handleFilter(genre);\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Options\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n  const filtered = document.getElementById(\"Shooter\");\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      (0,_filteredChart__WEBPACK_IMPORTED_MODULE_0__.filteredChart)(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/lineChart.js\n");

/***/ }),

/***/ "./src/scripts/components/mainPage.js":
/*!********************************************!*\
  !*** ./src/scripts/components/mainPage.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleDataPage\": function() { return /* binding */ handleDataPage; },\n/* harmony export */   \"handlePage\": function() { return /* binding */ handlePage; },\n/* harmony export */   \"renderMainPage\": function() { return /* binding */ renderMainPage; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nconst renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Level Up Your</h1>\n        <h1> <span>Gaming</span> Knowledge</h1>\n        <h1>Search, Discover and <span>Play</span></h1>\n\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Get the <span>Edge</span></h1>\n        <h1>with Our Comprehensive</h1>\n        <h1> Gaming<span> Data</span> Analysis</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n};\nfunction handlePage(allData) {\n  'handlepage';\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    \"button\";\n    main.innerHTML = \"\";\n    main.classList.add(\"card_page\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}\nfunction handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  const main = document.getElementById('main');\n  main.classList.remove(\"card_page\");\n  dataButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    \"databutton\";\n    // handleFilter(data)\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n    main.classList.add(\"card_page\");\n    // createMultiChart(dispatchGenre(data));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0Q7QUFLekMsTUFBTUMsY0FBYyxHQUFHQSxDQUFBLEtBQU07RUFDbEMsTUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDNUNGLElBQUksQ0FBQ0csU0FBUyxHQUFJO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFFTSxTQUFTQyxVQUFVQSxDQUFDQyxPQUFPLEVBQUU7RUFDakMsWUFBWTtFQUViLE1BQU1MLElBQUksR0FBR0MsUUFBUSxDQUFDSyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzVDLE1BQU1DLFlBQVksR0FBR04sUUFBUSxDQUFDSyxhQUFhLENBQUMsY0FBYyxDQUFDO0VBQzNEQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQ2hEQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUNyQixRQUFRO0lBQ1RWLElBQUksQ0FBQ0csU0FBUyxHQUFHLEVBQUU7SUFDbkJILElBQUksQ0FBQ1csU0FBUyxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO0lBQy9CUCxPQUFPLENBQUNRLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO01BRXhCLE1BQU1DLElBQUksR0FBR2QsUUFBUSxDQUFDZSxhQUFhLENBQUMsS0FBSyxDQUFDO01BQ3ZDRCxJQUFJLENBQUNaLFNBQVMsR0FBSTtBQUMzQixrREFBa0RXLElBQUksQ0FBQ0csU0FBVTtBQUNqRTtBQUNBLGlDQUFpQ0gsSUFBSSxDQUFDSSxLQUFNO0FBQzVDLDBCQUEwQkosSUFBSSxDQUFDSyxLQUFNO0FBQ3JDLGdDQUFnQ0wsSUFBSSxDQUFDTSxpQkFBa0I7QUFDdkQ7QUFDQTtBQUNBLE9BQU87TUFDRHBCLElBQUksQ0FBQ3FCLFdBQVcsQ0FBQ04sSUFBSSxDQUFDO0lBRXhCLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKO0FBRU8sU0FBU08sY0FBY0EsQ0FBQ2pCLE9BQU8sRUFBRWtCLElBQUksRUFBRTtFQUM1QyxNQUFNQyxVQUFVLEdBQUd2QixRQUFRLENBQUNLLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDekQsTUFBTU4sSUFBSSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDM0NGLElBQUksQ0FBQ1csU0FBUyxDQUFDYyxNQUFNLENBQUMsV0FBVyxDQUFDO0VBQ25DRCxVQUFVLENBQUNoQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUdDLEtBQUssSUFBSztJQUM5Q0EsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEJWLElBQUksQ0FBQ0csU0FBUyxHQUFHLEVBQUU7SUFDbEIsWUFBWTtJQUNiO0lBQ0FMLDZEQUFXLENBQUNPLE9BQU8sRUFBQ2tCLElBQUksQ0FBQztJQUM1QnZCLElBQUksQ0FBQ1csU0FBUyxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO0lBQzVCO0VBQ0YsQ0FBQyxDQUFDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbWFpblBhZ2UuanM/MzAzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDaGFydCB9IGZyb20gXCIuL2NoYXJ0L2xpbmVDaGFydFwiO1xuXG5cblxuXG5leHBvcnQgY29uc3QgcmVuZGVyTWFpblBhZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uaW5uZXJIVE1MID0gYFxuIDxkaXYgY2xhc3M9XCJtYWluX3BhZ2Vfd3JhcHBlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJfcGFnZVwiPlxuICAgICAgICA8aDE+TGV2ZWwgVXAgWW91cjwvaDE+XG4gICAgICAgIDxoMT4gPHNwYW4+R2FtaW5nPC9zcGFuPiBLbm93bGVkZ2U8L2gxPlxuICAgICAgICA8aDE+U2VhcmNoLCBEaXNjb3ZlciBhbmQgPHNwYW4+UGxheTwvc3Bhbj48L2gxPlxuXG4gICAgICAgIDxidXR0b24gaWQ9XCJnYW1lX2J1dHRvblwiPkV4cGxvcmU8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiX3BhZ2UgZGF0YVwiPlxuICAgICAgICA8aDE+R2V0IHRoZSA8c3Bhbj5FZGdlPC9zcGFuPjwvaDE+XG4gICAgICAgIDxoMT53aXRoIE91ciBDb21wcmVoZW5zaXZlPC9oMT5cbiAgICAgICAgPGgxPiBHYW1pbmc8c3Bhbj4gRGF0YTwvc3Bhbj4gQW5hbHlzaXM8L2gxPlxuICAgICAgICA8YnV0dG9uIGlkPVwiZGF0YV9idXR0b25cIj5FeHBsb3JlPC9idXR0b24+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuICAgIGA7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlUGFnZShhbGxEYXRhKSB7XG4gICgnaGFuZGxlcGFnZScpXG5cbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpblwiKTtcbiAgY29uc3QgcmVuZGVyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNnYW1lX2J1dHRvblwiKTtcbiAgcmVuZGVyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIChcImJ1dHRvblwiKTtcbiAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgbWFpbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9wYWdlXCIpO1xuICAgIGFsbERhdGEuZm9yRWFjaCgoZ2FtZSkgPT4ge1xuXG4gICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgIGNhcmQuaW5uZXJIVE1MID0gYFxuPGRpdiBjbGFzcz1cImNhcmRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgnJHtnYW1lLnRodW1ibmFpbH0nKTsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcIj5cbiAgICAgIDx1bCBjbGFzcz1cImNhcmRfaW5mb1wiPlxuICAgICAgPGxpPjxoMSBpZCA9XCJnYW1lX3RpdGxlXCI+JHtnYW1lLnRpdGxlfTwvaDE+PC9saT5cbiAgICAgIDxsaSBjbGFzcz1cImdlbnJlXCI+JHtnYW1lLmdlbnJlfTwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJkZXNjcmlwdGlvblwiPiR7Z2FtZS5zaG9ydF9kZXNjcmlwdGlvbn08L2xpPlxuICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICAgYDtcbiAgICAgIG1haW4uYXBwZW5kQ2hpbGQoY2FyZCk7XG5cbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVEYXRhUGFnZShhbGxEYXRhLCBkYXRhKSB7XG4gIGNvbnN0IGRhdGFCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RhdGFfYnV0dG9uXCIpO1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKVxuICAgbWFpbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9wYWdlXCIpO1xuICBkYXRhQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAoXCJkYXRhYnV0dG9uXCIpO1xuICAgIC8vIGhhbmRsZUZpbHRlcihkYXRhKVxuICAgIGNyZWF0ZUNoYXJ0KGFsbERhdGEsZGF0YSk7XG4gbWFpbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9wYWdlXCIpO1xuICAgIC8vIGNyZWF0ZU11bHRpQ2hhcnQoZGlzcGF0Y2hHZW5yZShkYXRhKSk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNoYXJ0IiwicmVuZGVyTWFpblBhZ2UiLCJtYWluIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsImhhbmRsZVBhZ2UiLCJhbGxEYXRhIiwicXVlcnlTZWxlY3RvciIsInJlbmRlckJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiY2xhc3NMaXN0IiwiYWRkIiwiZm9yRWFjaCIsImdhbWUiLCJjYXJkIiwiY3JlYXRlRWxlbWVudCIsInRodW1ibmFpbCIsInRpdGxlIiwiZ2VucmUiLCJzaG9ydF9kZXNjcmlwdGlvbiIsImFwcGVuZENoaWxkIiwiaGFuZGxlRGF0YVBhZ2UiLCJkYXRhIiwiZGF0YUJ1dHRvbiIsInJlbW92ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/components/mainPage.js\n");

/***/ }),

/***/ "./src/scripts/components/navbar.js":
/*!******************************************!*\
  !*** ./src/scripts/components/navbar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleNavbarClick\": function() { return /* binding */ handleNavbarClick; },\n/* harmony export */   \"renderNavbar\": function() { return /* binding */ renderNavbar; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nconst renderNavbar = () => {\n  const navBar = document.getElementById('menu');\n  navBar.innerHTML = `\n    <li><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\"><h1>🐳🐋</h1></a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"profile_menu\">Profile</li>\n    <li id=\"stat_menu\">Statistics</li>\n    `;\n};\nfunction handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\");\n  statMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    // handleFilter(data);\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n\n    // createMultiChart(dispatchGenre(data));\n  });\n\n  gameMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    main.classList.add(\"cards\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      main.classList.add('card_page');\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL25hdmJhci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFFekMsTUFBTUMsWUFBWSxHQUFHQSxDQUFBLEtBQU07RUFFOUIsTUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDOUNGLE1BQU0sQ0FBQ0csU0FBUyxHQUFJO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUdMLENBQUM7QUFFTSxTQUFTQyxpQkFBaUJBLENBQUNDLE9BQU8sRUFBRUMsSUFBSSxFQUFFO0VBQy9DLE1BQU1DLFFBQVEsR0FBR04sUUFBUSxDQUFDTyxhQUFhLENBQUMsWUFBWSxDQUFDO0VBQ3JELE1BQU1DLFFBQVEsR0FBR1IsUUFBUSxDQUFDTyxhQUFhLENBQUMsWUFBWSxDQUFDO0VBQ3JEQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQzVDQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUN0QkMsSUFBSSxDQUFDVixTQUFTLEdBQUcsRUFBRTtJQUNuQjtJQUNBTCw2REFBVyxDQUFDTyxPQUFPLEVBQUNDLElBQUksQ0FBQzs7SUFFekI7RUFDRixDQUFDLENBQUM7O0VBRUZDLFFBQVEsQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFDQyxLQUFLLElBQUU7SUFDdkNBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCQyxJQUFJLENBQUNWLFNBQVMsR0FBQyxFQUFFO0lBQ2RVLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUMsT0FBTyxDQUFDO0lBQ2pDVixPQUFPLENBQUNXLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO01BQ3hCLE1BQU1DLElBQUksR0FBR2pCLFFBQVEsQ0FBQ2tCLGFBQWEsQ0FBQyxLQUFLLENBQUM7TUFDMUNOLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO01BQy9CRyxJQUFJLENBQUNmLFNBQVMsR0FBSTtBQUNyQixrREFBa0RjLElBQUksQ0FBQ0csU0FBVTtBQUNqRTtBQUNBLGlDQUFpQ0gsSUFBSSxDQUFDSSxLQUFNO0FBQzVDLDBCQUEwQkosSUFBSSxDQUFDSyxLQUFNO0FBQ3JDLGdDQUFnQ0wsSUFBSSxDQUFDTSxpQkFBa0I7QUFDdkQ7QUFDQTtBQUNBLE9BQU87TUFDSlYsSUFBSSxDQUFDVyxXQUFXLENBQUNOLElBQUksQ0FBQztJQUN4QixDQUFDLENBQUM7RUFDRCxDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9uYXZiYXIuanM/YjRjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDaGFydCB9IGZyb20gXCIuL2NoYXJ0L2xpbmVDaGFydFwiO1xuXG5leHBvcnQgY29uc3QgcmVuZGVyTmF2YmFyID0gKCkgPT4ge1xuXG4gICAgY29uc3QgbmF2QmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnUnKVxuICAgIG5hdkJhci5pbm5lckhUTUwgPSBgXG4gICAgPGxpPjxhIGhyZWY9XCJodHRwczovL3VzZW5hdmlnYXRlLmdpdGh1Yi5pby9XaGFsZV9HYW1pbmdfSmF2YXNjcmlwdF9Qcm9qZWN0L1wiPjxoMT7wn5Cz8J+QizwvaDE+PC9hPjwvbGk+XG4gICAgPGxpIGlkPVwiZ2FtZV9tZW51XCI+R2FtZXM8L2xpPlxuICAgIDxsaSBpZD1cInByb2ZpbGVfbWVudVwiPlByb2ZpbGU8L2xpPlxuICAgIDxsaSBpZD1cInN0YXRfbWVudVwiPlN0YXRpc3RpY3M8L2xpPlxuICAgIGA7XG5cblxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZU5hdmJhckNsaWNrKGFsbERhdGEsIGRhdGEpIHtcbiAgY29uc3QgZ2FtZU1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dhbWVfbWVudVwiKTtcbiAgY29uc3Qgc3RhdE1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N0YXRfbWVudVwiKVxuICBzdGF0TWVudS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgLy8gaGFuZGxlRmlsdGVyKGRhdGEpO1xuICAgIGNyZWF0ZUNoYXJ0KGFsbERhdGEsZGF0YSk7XG5cbiAgICAvLyBjcmVhdGVNdWx0aUNoYXJ0KGRpc3BhdGNoR2VucmUoZGF0YSkpO1xuICB9KTtcblxuICBnYW1lTWVudS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICBtYWluLmlubmVySFRNTD1cIlwiXG4gICAgICAgbWFpbi5jbGFzc0xpc3QuYWRkKFwiY2FyZHNcIik7XG4gYWxsRGF0YS5mb3JFYWNoKChnYW1lKSA9PiB7XG4gICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgIG1haW4uY2xhc3NMaXN0LmFkZCgnY2FyZF9wYWdlJylcbiAgIGNhcmQuaW5uZXJIVE1MID0gYFxuPGRpdiBjbGFzcz1cImNhcmRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgnJHtnYW1lLnRodW1ibmFpbH0nKTsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcIj5cbiAgICAgIDx1bCBjbGFzcz1cImNhcmRfaW5mb1wiPlxuICAgICAgPGxpPjxoMSBpZCA9XCJnYW1lX3RpdGxlXCI+JHtnYW1lLnRpdGxlfTwvaDE+PC9saT5cbiAgICAgIDxsaSBjbGFzcz1cImdlbnJlXCI+JHtnYW1lLmdlbnJlfTwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJkZXNjcmlwdGlvblwiPiR7Z2FtZS5zaG9ydF9kZXNjcmlwdGlvbn08L2xpPlxuICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICAgYDtcbiAgIG1haW4uYXBwZW5kQ2hpbGQoY2FyZCk7XG4gfSlcbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDaGFydCIsInJlbmRlck5hdmJhciIsIm5hdkJhciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJoYW5kbGVOYXZiYXJDbGljayIsImFsbERhdGEiLCJkYXRhIiwiZ2FtZU1lbnUiLCJxdWVyeVNlbGVjdG9yIiwic3RhdE1lbnUiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIm1haW4iLCJjbGFzc0xpc3QiLCJhZGQiLCJmb3JFYWNoIiwiZ2FtZSIsImNhcmQiLCJjcmVhdGVFbGVtZW50IiwidGh1bWJuYWlsIiwidGl0bGUiLCJnZW5yZSIsInNob3J0X2Rlc2NyaXB0aW9uIiwiYXBwZW5kQ2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/components/navbar.js\n");

/***/ }),

/***/ "./src/scripts/components/search.js":
/*!******************************************!*\
  !*** ./src/scripts/components/search.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSearch\": function() { return /* binding */ handleSearch; },\n/* harmony export */   \"renderSearchBar\": function() { return /* binding */ renderSearchBar; }\n/* harmony export */ });\nconst renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement(\"li\");\n  // search.classList.add('search')\n  search.setAttribute(\"id\", \"search\");\n  menu.appendChild(search);\n  search.innerHTML = `\n\n\n  <input id =\"searchInput\" type=\"text\" placeholder=\"search\">\n\n\n\n    `;\n};\nfunction handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", event => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else {\n      main.innerHTML = \"\";\n    }\n  });\n}\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach(game => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    // if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      // (game);\n      main.classList.remove(\"card_page\");\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.innerHTML = \"\";\n      main.appendChild(card);\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLGVBQWUsR0FBR0EsQ0FBQSxLQUFNO0VBQ25DLE1BQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsTUFBTSxDQUFDO0VBQzVDLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsSUFBSSxDQUFDO0VBQzNDO0VBQ0FELE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUM7RUFDbkNMLElBQUksQ0FBQ00sV0FBVyxDQUFDSCxNQUFNLENBQUM7RUFDeEJBLE1BQU0sQ0FBQ0ksU0FBUyxHQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBRU0sU0FBU0MsWUFBWUEsQ0FBQ0MsS0FBSyxFQUFFQyxJQUFJLEVBQUU7RUFDeEMsTUFBTUMsV0FBVyxHQUFHVixRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUM7RUFDMURTLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFDL0NBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCLE1BQU1DLFVBQVUsR0FBR0YsS0FBSyxDQUFDRyxNQUFNLENBQUNDLEtBQUs7SUFDckMsSUFBSUYsVUFBVSxDQUFDRyxNQUFNLEdBQUcsQ0FBQyxFQUFFO01BQ3pCQyxlQUFlLENBQUNWLEtBQUssRUFBRU0sVUFBVSxFQUFFTCxJQUFJLENBQUM7SUFDMUMsQ0FBQyxNQUFNO01BQ0xBLElBQUksQ0FBQ0gsU0FBUyxHQUFHLEVBQUU7SUFDckI7RUFDRixDQUFDLENBQUM7QUFDSjtBQUVBLFNBQVNZLGVBQWVBLENBQUNWLEtBQUssRUFBRU0sVUFBVSxFQUFFTCxJQUFJLEVBQUU7RUFDaERELEtBQUssQ0FBQ1csT0FBTyxDQUFFQyxJQUFJLElBQUs7SUFDdEIsTUFBTUMsU0FBUyxHQUFHRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsV0FBVyxFQUFFO0lBQzFDLE1BQU1iLFdBQVcsR0FBR0ksVUFBVSxDQUFDUyxXQUFXLEVBQUU7SUFDNUM7SUFDSyxJQUFJRixTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUtYLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSVcsU0FBUyxDQUFDRyxRQUFRLENBQUNkLFdBQVcsQ0FBQyxFQUFFO01BQzNFO01BQ0FELElBQUksQ0FBQ2dCLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFdBQVcsQ0FBQztNQUNsQyxNQUFNQyxJQUFJLEdBQUczQixRQUFRLENBQUNHLGFBQWEsQ0FBQyxLQUFLLENBQUM7TUFDMUN3QixJQUFJLENBQUNyQixTQUFTLEdBQUk7QUFDeEIsa0RBQWtEYyxJQUFJLENBQUNRLFNBQVU7QUFDakU7QUFDQSxpQ0FBaUNSLElBQUksQ0FBQ0UsS0FBTTtBQUM1QywwQkFBMEJGLElBQUksQ0FBQ1MsS0FBTTtBQUNyQyxnQ0FBZ0NULElBQUksQ0FBQ1UsaUJBQWtCO0FBQ3ZEO0FBQ0E7QUFDQSxPQUFPO01BQ0RyQixJQUFJLENBQUNILFNBQVMsR0FBRyxFQUFFO01BQ25CRyxJQUFJLENBQUNKLFdBQVcsQ0FBQ3NCLElBQUksQ0FBQztJQUN4QixDQUFDLENBQUM7SUFDRjtJQUNBO0lBQ0E7RUFDRixDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9zZWFyY2guanM/M2NkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVuZGVyU2VhcmNoQmFyID0gKCkgPT4ge1xuICBjb25zdCBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51XCIpO1xuICBjb25zdCBzZWFyY2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gIC8vIHNlYXJjaC5jbGFzc0xpc3QuYWRkKCdzZWFyY2gnKVxuICBzZWFyY2guc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWFyY2hcIik7XG4gIG1lbnUuYXBwZW5kQ2hpbGQoc2VhcmNoKTtcbiAgc2VhcmNoLmlubmVySFRNTCA9IGBcblxuXG4gIDxpbnB1dCBpZCA9XCJzZWFyY2hJbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJzZWFyY2hcIj5cblxuXG5cbiAgICBgO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVNlYXJjaChnYW1lcywgbWFpbikge1xuICBjb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoSW5wdXRcIik7XG4gIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHNlYXJjaFRlcm0gPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgaWYgKHNlYXJjaFRlcm0ubGVuZ3RoID4gMykge1xuICAgICAgZ2V0U2VhcmNoUmVzdWx0KGdhbWVzLCBzZWFyY2hUZXJtLCBtYWluKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFNlYXJjaFJlc3VsdChnYW1lcywgc2VhcmNoVGVybSwgbWFpbikge1xuICBnYW1lcy5mb3JFYWNoKChnYW1lKSA9PiB7XG4gICAgY29uc3QgZ2FtZVRpdGxlID0gZ2FtZS50aXRsZS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2VhcmNoVGVybS50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIGlmIChnYW1lVGl0bGVbMF0gPT09IHNlYXJjaElucHV0WzBdICYmIGdhbWVUaXRsZS5pbmNsdWRlcyhzZWFyY2hJbnB1dCkpIHtcbiAgICAgICAgIGlmIChnYW1lVGl0bGVbMF0gPT09IHNlYXJjaElucHV0WzBdICYmIGdhbWVUaXRsZS5pbmNsdWRlcyhzZWFyY2hJbnB1dCkpIHtcbiAgICAgIC8vIChnYW1lKTtcbiAgICAgIG1haW4uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfcGFnZVwiKVxuICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBjYXJkLmlubmVySFRNTCA9IGBcbjxkaXYgY2xhc3M9XCJjYXJkXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7Z2FtZS50aHVtYm5haWx9Jyk7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7XCI+XG4gICAgICA8dWwgY2xhc3M9XCJjYXJkX2luZm9cIj5cbiAgICAgIDxsaT48aDEgaWQgPVwiZ2FtZV90aXRsZVwiPiR7Z2FtZS50aXRsZX08L2gxPjwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJnZW5yZVwiPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZGVzY3JpcHRpb25cIj4ke2dhbWUuc2hvcnRfZGVzY3JpcHRpb259PC9saT5cbiAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIGA7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICBtYWluLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH0gLy9lbHNle1xuICAgIC8vICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIC8vICAgbWFpbi5pbm5lckhUTUwgPSBcImNhbid0IGZpbmQgaXQgXCI7XG4gICAgLy8gfVxuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJyZW5kZXJTZWFyY2hCYXIiLCJtZW51IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInNlYXJjaCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsImlubmVySFRNTCIsImhhbmRsZVNlYXJjaCIsImdhbWVzIiwibWFpbiIsInNlYXJjaElucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzZWFyY2hUZXJtIiwidGFyZ2V0IiwidmFsdWUiLCJsZW5ndGgiLCJnZXRTZWFyY2hSZXN1bHQiLCJmb3JFYWNoIiwiZ2FtZSIsImdhbWVUaXRsZSIsInRpdGxlIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImNsYXNzTGlzdCIsInJlbW92ZSIsImNhcmQiLCJ0aHVtYm5haWwiLCJnZW5yZSIsInNob3J0X2Rlc2NyaXB0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/search.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;