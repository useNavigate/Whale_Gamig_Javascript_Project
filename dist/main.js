/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/api */ \"./src/scripts/api.js\");\n/* harmony import */ var _scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/components/navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _scripts_components_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/components/search */ \"./src/scripts/components/search.js\");\n/* harmony import */ var _scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/components/mainPage */ \"./src/scripts/components/mainPage.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  console.log(\"Hello world!\");\n  //npm run watch to run webpack\n  (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.renderNavbar)();\n  (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.renderSearchBar)();\n  (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.renderMainPage)();\n  //render cards\n\n  (0,_scripts_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    //  renderSearchCards(allData.allData);\n    (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.handleSearch)(allData.allData, main);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handlePage)(allData.allData);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handleDataPage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.handleNavbarClick)(allData.allData, allData.gamesByGenre);\n    console.log(allData.allData[0].title);\n    // createChart(allData.allData);\n    // createMultiChart(dispatchGenre(allData.gamesByGenre));\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDc0M7QUFDRjtBQUNiO0FBQ0o7QUFDSTtBQUMvRFEsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBQ2xELE1BQU1DLElBQUksR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzVDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDM0I7RUFDQVosd0VBQVksRUFBRTtFQUNkRSwyRUFBZSxFQUFFO0VBQ2pCRSw0RUFBYyxFQUFFO0VBQ2hCOztFQUVBTCxxREFBTyxFQUFFLENBQUNjLElBQUksQ0FBRUMsT0FBTyxJQUFLO0lBQzFCO0lBQ0FYLHdFQUFZLENBQUNXLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFTCxJQUFJLENBQUM7SUFDbkNKLHdFQUFVLENBQUNTLE9BQU8sQ0FBQ0EsT0FBTyxDQUFDO0lBQzNCUiw0RUFBYyxDQUFDUSxPQUFPLENBQUNBLE9BQU8sRUFBQ0EsT0FBTyxDQUFDQyxZQUFZLENBQUM7SUFDcERkLDZFQUFpQixDQUFDYSxPQUFPLENBQUNBLE9BQU8sRUFBQ0EsT0FBTyxDQUFDQyxZQUFZLENBQUM7SUFDdkRKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsS0FBSyxDQUFDO0lBQ3JDO0lBQ0E7RUFDRixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZURhdGEgfSBmcm9tIFwiLi9zY3JpcHRzL2FwaVwiO1xuaW1wb3J0IHsgcmVuZGVyTmF2YmFyLCBoYW5kbGVOYXZiYXJDbGljayB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9uYXZiYXJcIjtcbmltcG9ydCB7IHJlbmRlclNlYXJjaEJhciwgaGFuZGxlU2VhcmNoIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaFwiO1xuaW1wb3J0IHsgcmVuZGVyTWFpblBhZ2UgfSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbWFpblBhZ2VcIjtcbmltcG9ydCB7IGhhbmRsZVBhZ2UgfSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbWFpblBhZ2VcIjtcbmltcG9ydCB7IGhhbmRsZURhdGFQYWdlIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlXCI7XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW5cIik7XG4gIGNvbnNvbGUubG9nKFwiSGVsbG8gd29ybGQhXCIpO1xuICAvL25wbSBydW4gd2F0Y2ggdG8gcnVuIHdlYnBhY2tcbiAgcmVuZGVyTmF2YmFyKCk7XG4gIHJlbmRlclNlYXJjaEJhcigpO1xuICByZW5kZXJNYWluUGFnZSgpXG4gIC8vcmVuZGVyIGNhcmRzXG5cbiAgdXNlRGF0YSgpLnRoZW4oKGFsbERhdGEpID0+IHtcbiAgICAvLyAgcmVuZGVyU2VhcmNoQ2FyZHMoYWxsRGF0YS5hbGxEYXRhKTtcbiAgICBoYW5kbGVTZWFyY2goYWxsRGF0YS5hbGxEYXRhLCBtYWluKTtcbiAgICBoYW5kbGVQYWdlKGFsbERhdGEuYWxsRGF0YSlcbiAgICBoYW5kbGVEYXRhUGFnZShhbGxEYXRhLmFsbERhdGEsYWxsRGF0YS5nYW1lc0J5R2VucmUpXG4gICAgaGFuZGxlTmF2YmFyQ2xpY2soYWxsRGF0YS5hbGxEYXRhLGFsbERhdGEuZ2FtZXNCeUdlbnJlKVxuICAgIGNvbnNvbGUubG9nKGFsbERhdGEuYWxsRGF0YVswXS50aXRsZSk7XG4gICAgLy8gY3JlYXRlQ2hhcnQoYWxsRGF0YS5hbGxEYXRhKTtcbiAgICAvLyBjcmVhdGVNdWx0aUNoYXJ0KGRpc3BhdGNoR2VucmUoYWxsRGF0YS5nYW1lc0J5R2VucmUpKTtcbiAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyJ1c2VEYXRhIiwicmVuZGVyTmF2YmFyIiwiaGFuZGxlTmF2YmFyQ2xpY2siLCJyZW5kZXJTZWFyY2hCYXIiLCJoYW5kbGVTZWFyY2giLCJyZW5kZXJNYWluUGFnZSIsImhhbmRsZVBhZ2UiLCJoYW5kbGVEYXRhUGFnZSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1haW4iLCJxdWVyeVNlbGVjdG9yIiwiY29uc29sZSIsImxvZyIsInRoZW4iLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIiwidGl0bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllData\": function() { return /* binding */ getAllData; },\n/* harmony export */   \"useData\": function() { return /* binding */ useData; }\n/* harmony export */ });\nconst games = `https://mmo-games.p.rapidapi.com/games`;\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n  }\n};\nlet allData = null;\nlet gamesByGenre = null;\n// let gamesByPlatform = null;\n// let gamesByPublisher = null;\nlet gamesByReleaseDate = null;\nasync function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n    gamesByGenre = {};\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n    return {\n      allData,\n      gamesByReleaseDate,\n      gamesByGenre\n    }; // it actually needs to return the promise value that has these data i want\n  } catch (err) {\n    console.error(\"error:\" + err);\n  }\n}\n\n/*\n  this function returns data so i don't have to fetch every single time\n  this will only fetch if data is not there also it helps me to get out from call back\n  & chain hell that i was stuck for long time... 😭\n\n  and exporting this because exporting allData and gamesByGenre are useless... it still going to be undefined and its 'promise value'\n  so its better to export this function that actually returns the data i need\n*/\nasync function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenres) {\n    /* this is way to get out from call back hell and also we do not need to fetch EVERY SINGLE TIME*/\n    await getAllData(games, options);\n  }\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre\n  };\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUksd0NBQXVDO0FBQ3RELE1BQU1DLE9BQU8sR0FBRztFQUNkQyxNQUFNLEVBQUUsS0FBSztFQUNiQyxPQUFPLEVBQUU7SUFDUCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDQyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCLGdCQUFnQixFQUFFLG9EQUFvRDtJQUN0RSxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUM7QUFFRCxJQUFJQyxPQUFPLEdBQUcsSUFBSTtBQUNsQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtBQUN2QjtBQUNBO0FBQ0EsSUFBSUMsa0JBQWtCLEdBQUcsSUFBSTtBQUd0QixlQUFlQyxVQUFVQSxDQUFDQyxHQUFHLEVBQUVSLE9BQU8sRUFBRTtFQUM3QyxJQUFJO0lBQ0YsTUFBTVMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsR0FBRyxFQUFFUixPQUFPLENBQUM7SUFDMUMsTUFBTUQsS0FBSyxHQUFHLE1BQU1VLFFBQVEsQ0FBQ0UsSUFBSSxFQUFFO0lBQ25DUCxPQUFPLEdBQUdMLEtBQUs7SUFDZk8sa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLEtBQUssTUFBTU0sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVMsWUFBWSxHQUFHRCxJQUFJLENBQUNDLFlBQVk7TUFDdEMsSUFBSSxDQUFDUCxrQkFBa0IsQ0FBQ08sWUFBWSxDQUFDLEVBQUU7UUFDckNQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsR0FBRyxFQUFFO01BQ3ZDO01BQ0FQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDN0M7SUFFQVAsWUFBWSxHQUFDLENBQUMsQ0FBQztJQUVmLEtBQUssTUFBTU8sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVcsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7TUFDeEIsSUFBSSxDQUFDVixZQUFZLENBQUNVLEtBQUssQ0FBQyxFQUFFO1FBQ3hCVixZQUFZLENBQUNVLEtBQUssQ0FBQyxHQUFHLEVBQUU7TUFDMUI7TUFDQVYsWUFBWSxDQUFDVSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDaEM7SUFFQSxPQUFPO01BQUVSLE9BQU87TUFBRUUsa0JBQWtCO01BQUVEO0lBQWEsQ0FBQyxDQUFDLENBQUM7RUFDeEQsQ0FBQyxDQUFDLE9BQU9XLEdBQUcsRUFBRTtJQUNaQyxPQUFPLENBQUNDLEtBQUssQ0FBQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQztFQUMvQjtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxlQUFlRyxPQUFPQSxDQUFBLEVBQUc7RUFFOUIsSUFBSSxDQUFDZixPQUFPLElBQUksQ0FBQ0Usa0JBQWtCLElBQUksQ0FBQ2MsYUFBYSxFQUFFO0lBQ3JEO0lBQ0EsTUFBTWIsVUFBVSxDQUFDUixLQUFLLEVBQUVDLE9BQU8sQ0FBQztFQUNsQztFQUVBLE1BQU1xQixJQUFJLEdBQUc7SUFDWGpCLE9BQU87SUFDUEUsa0JBQWtCO0lBQ3RCRDtFQUNFLENBQUM7RUFDRCxPQUFPZ0IsSUFBSTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvc2NyaXB0cy9hcGkuanM/YTM5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnYW1lcyA9IGBodHRwczovL21tby1nYW1lcy5wLnJhcGlkYXBpLmNvbS9nYW1lc2A7XG5jb25zdCBvcHRpb25zID0ge1xuICBtZXRob2Q6IFwiR0VUXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiWC1SYXBpZEFQSS1LZXlcIjogXCI1YmFhZTZkYTdhbXNoNmQ1NjNjYmYxMWFjMmEwcDFkNmQ1NmpzbjQ4ODUzYWI1MGQ2N1wiLFxuICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IFwibW1vLWdhbWVzLnAucmFwaWRhcGkuY29tXCIsXG4gIH0sXG59O1xuXG5sZXQgYWxsRGF0YSA9IG51bGw7XG5sZXQgZ2FtZXNCeUdlbnJlID0gbnVsbDtcbi8vIGxldCBnYW1lc0J5UGxhdGZvcm0gPSBudWxsO1xuLy8gbGV0IGdhbWVzQnlQdWJsaXNoZXIgPSBudWxsO1xubGV0IGdhbWVzQnlSZWxlYXNlRGF0ZSA9IG51bGw7XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbERhdGEodXJsLCBvcHRpb25zKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpO1xuICAgIGNvbnN0IGdhbWVzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGFsbERhdGEgPSBnYW1lcztcbiAgICBnYW1lc0J5UmVsZWFzZURhdGUgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGdhbWUgb2YgYWxsRGF0YSkge1xuICAgICAgY29uc3QgcmVsZWFzZV9kYXRlID0gZ2FtZS5yZWxlYXNlX2RhdGU7XG4gICAgICBpZiAoIWdhbWVzQnlSZWxlYXNlRGF0ZVtyZWxlYXNlX2RhdGVdKSB7XG4gICAgICAgIGdhbWVzQnlSZWxlYXNlRGF0ZVtyZWxlYXNlX2RhdGVdID0gW107XG4gICAgICB9XG4gICAgICBnYW1lc0J5UmVsZWFzZURhdGVbcmVsZWFzZV9kYXRlXS5wdXNoKGdhbWUpO1xuICAgIH1cblxuICAgIGdhbWVzQnlHZW5yZT17fVxuXG4gICAgZm9yIChjb25zdCBnYW1lIG9mIGFsbERhdGEpIHtcbiAgICAgIGNvbnN0IGdlbnJlID0gZ2FtZS5nZW5yZTtcbiAgICAgIGlmICghZ2FtZXNCeUdlbnJlW2dlbnJlXSkge1xuICAgICAgICBnYW1lc0J5R2VucmVbZ2VucmVdID0gW107XG4gICAgICB9XG4gICAgICBnYW1lc0J5R2VucmVbZ2VucmVdLnB1c2goZ2FtZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgYWxsRGF0YSwgZ2FtZXNCeVJlbGVhc2VEYXRlLCBnYW1lc0J5R2VucmUgfTsgLy8gaXQgYWN0dWFsbHkgbmVlZHMgdG8gcmV0dXJuIHRoZSBwcm9taXNlIHZhbHVlIHRoYXQgaGFzIHRoZXNlIGRhdGEgaSB3YW50XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJlcnJvcjpcIiArIGVycik7XG4gIH1cbn1cblxuLypcbiAgdGhpcyBmdW5jdGlvbiByZXR1cm5zIGRhdGEgc28gaSBkb24ndCBoYXZlIHRvIGZldGNoIGV2ZXJ5IHNpbmdsZSB0aW1lXG4gIHRoaXMgd2lsbCBvbmx5IGZldGNoIGlmIGRhdGEgaXMgbm90IHRoZXJlIGFsc28gaXQgaGVscHMgbWUgdG8gZ2V0IG91dCBmcm9tIGNhbGwgYmFja1xuICAmIGNoYWluIGhlbGwgdGhhdCBpIHdhcyBzdHVjayBmb3IgbG9uZyB0aW1lLi4uIPCfmK1cblxuICBhbmQgZXhwb3J0aW5nIHRoaXMgYmVjYXVzZSBleHBvcnRpbmcgYWxsRGF0YSBhbmQgZ2FtZXNCeUdlbnJlIGFyZSB1c2VsZXNzLi4uIGl0IHN0aWxsIGdvaW5nIHRvIGJlIHVuZGVmaW5lZCBhbmQgaXRzICdwcm9taXNlIHZhbHVlJ1xuICBzbyBpdHMgYmV0dGVyIHRvIGV4cG9ydCB0aGlzIGZ1bmN0aW9uIHRoYXQgYWN0dWFsbHkgcmV0dXJucyB0aGUgZGF0YSBpIG5lZWRcbiovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXNlRGF0YSgpIHtcblxuICBpZiAoIWFsbERhdGEgfHwgIWdhbWVzQnlSZWxlYXNlRGF0ZSB8fCAhZ2FtZXNCeUdlbnJlcykge1xuICAgIC8qIHRoaXMgaXMgd2F5IHRvIGdldCBvdXQgZnJvbSBjYWxsIGJhY2sgaGVsbCBhbmQgYWxzbyB3ZSBkbyBub3QgbmVlZCB0byBmZXRjaCBFVkVSWSBTSU5HTEUgVElNRSovXG4gICAgYXdhaXQgZ2V0QWxsRGF0YShnYW1lcywgb3B0aW9ucyk7XG4gIH1cblxuICBjb25zdCBkYXRhID0ge1xuICAgIGFsbERhdGEsXG4gICAgZ2FtZXNCeVJlbGVhc2VEYXRlLFxuZ2FtZXNCeUdlbnJlXG4gIH07XG4gIHJldHVybiBkYXRhO1xufVxuXG5cblxuIl0sIm5hbWVzIjpbImdhbWVzIiwib3B0aW9ucyIsIm1ldGhvZCIsImhlYWRlcnMiLCJBY2NlcHQiLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIiwiZ2FtZXNCeVJlbGVhc2VEYXRlIiwiZ2V0QWxsRGF0YSIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJqc29uIiwiZ2FtZSIsInJlbGVhc2VfZGF0ZSIsInB1c2giLCJnZW5yZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInVzZURhdGEiLCJnYW1lc0J5R2VucmVzIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/api.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/genreCharts.js":
/*!*****************************************************!*\
  !*** ./src/scripts/components/chart/genreCharts.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMultiChart\": function() { return /* binding */ createMultiChart; },\n/* harmony export */   \"dispatchGenre\": function() { return /* binding */ dispatchGenre; }\n/* harmony export */ });\nfunction dispatchGenre(genres) {\n  let genreData = [];\n  for (const key in genres) {\n    if (key !== \" MMORPG\") {\n      genreData.push([[key], genres[key]]);\n    }\n  }\n  console.log(genreData);\n  return genreData;\n}\nfunction createMultiChart(data) {\n  data.forEach(arr => {\n    let h1 = document.createElement(\"h1\");\n    h1.innerHTML = `<h1>${arr[0]}</h1>`;\n    document.getElementById(\"main\").appendChild(h1);\n    const games = arr[1].filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n    .map(d => {\n      const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n      ? new Date(d.release_date).getFullYear() : null;\n      return {\n        release_year: year\n      };\n    });\n\n    // Count the number of games released in each year\n    const totals = games.reduce((acc, game) => {\n      if (game.release_year !== null) {\n        if (!acc[game.release_year]) {\n          acc[game.release_year] = 0;\n        }\n        acc[game.release_year]++;\n      }\n      return acc;\n    }, {});\n\n    // Create a line chart using D3\n    const chart = LineChart(\n    //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n    // needs to convert this because d3 only takes cvs data which is same as text/json\n    Object.entries(totals).map(_ref => {\n      let [year, count, title] = _ref;\n      return {\n        year: new Date(year, 0),\n        count,\n        title\n      };\n    }), {\n      x: d => d.year,\n      y: d => d.count,\n      z: d => d.title,\n      yLabel: \"Number of games\",\n      xLabel: \"Released Year\",\n      width: 600,\n      height: 400,\n      // color: \"red\", seems like this line can overwrites the colors\n      // specify the tick format for the x-axis\n      xAxisFormat: d3.timeFormat(\"%Y\")\n    });\n    document.getElementById(\"main\").appendChild(chart);\n  });\n}\nfunction LineChart(data) {\n  let {\n    x = _ref2 => {\n      let [x] = _ref2;\n      return x;\n    },\n    // given d in data, returns the (temporal) x-value\n    y = _ref3 => {\n      let [, y] = _ref3;\n      return y;\n    },\n    // given d in data, returns the (quantitative) y-value\n    title,\n    // given d in data, returns the title text\n    defined,\n    // for gaps in data\n    curve = d3.curveLinear,\n    // method of interpolation between points\n    marginTop = 20,\n    // top margin, in pixels\n    marginRight = 30,\n    // right margin, in pixels\n    marginBottom = 30,\n    // bottom margin, in pixels\n    marginLeft = 40,\n    // left margin, in pixels\n    width = 640,\n    // outer width, in pixels\n    height = 400,\n    // outer height, in pixels\n    xType = d3.scaleUtc,\n    // type of x-scale\n    xDomain,\n    // [xmin, xmax]\n    xRange = [marginLeft, width - marginRight],\n    // [left, right]\n    yType = d3.scaleLinear,\n    // type of y-scale\n    yDomain,\n    // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop],\n    // [bottom, top]\n    color = \"currentColor\",\n    // stroke color of line\n    strokeWidth = 1.5,\n    // stroke width of line, in pixels\n    strokeLinejoin = \"round\",\n    // stroke line join of line\n    strokeLinecap = \"round\",\n    // stroke line cap of line\n    yFormat,\n    // a format specifier string for the y-axis\n    yLabel // a label for the y-axis\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Compute values.\n  const X = d3.map(data, x);\n  const Y = d3.map(data, y);\n  const O = d3.map(data, d => d);\n  const I = d3.map(data, (_, i) => i);\n\n  // Compute which data points are considered defined.\n  if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n  const D = d3.map(data, defined);\n\n  // Compute default domains.\n  if (xDomain === undefined) xDomain = d3.extent(X);\n  if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n  // Construct scales and axes.\n  const xScale = xType(xDomain, xRange);\n  const yScale = yType(yDomain, yRange);\n  // const xAxis = d3\n  //   .axisBottom(xScale)\n  //   .ticks(width / 80)\n  //   .tickSizeOuter(0);\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n  // Compute titles.\n  if (title === undefined) {\n    const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n    const formatValue = yScale.tickFormat(100, yFormat);\n    title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n  } else {\n    const O = d3.map(data, d => d);\n    const T = title;\n    title = i => T(O[i], i, data);\n  }\n\n  // Construct a line generator.\n  const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n  svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n  const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n  function pointermoved(event) {\n    const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n    tooltip.style(\"display\", null);\n    tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n    const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n    const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n    const {\n      x,\n      y,\n      width: w,\n      height: h\n    } = text.node().getBBox();\n    text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n    path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n    svg.property(\"value\", O[i]).dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  function pointerleft() {\n    tooltip.style(\"display\", \"none\");\n    svg.node().value = null;\n    svg.dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  return Object.assign(svg.node(), {\n    value: null\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/genreCharts.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/lineChart.js":
/*!***************************************************!*\
  !*** ./src/scripts/components/chart/lineChart.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChart\": function() { return /* binding */ createChart; }\n/* harmony export */ });\nfunction createChart(data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count,\n      title\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 400,\n    height: 400,\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  const main = document.getElementById('#main');\n  let h1 = document.createElement(\"h1\");\n  h1.innerHTML = `<h1>ALL GAMES</h1>`;\n  document.getElementById(\"main\").appendChild(h1);\n  document.getElementById(\"main\").appendChild(chart);\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\n// function LineChart(\n//   data,\n//   {\n//     x = ([x]) => x, // given d in data, returns the (temporal) x-value\n//     y = ([, y]) => y, // given d in data, returns the (quantitative) y-value\n//     defined, // for gaps in data\n//     curve = d3.curveLinear, // method of interpolation between points\n//     marginTop = 30, // top margin, in pixels\n//     marginRight = 30, // right margin, in pixels\n//     marginBottom = 30, // bottom margin, in pixels\n//     marginLeft = 30, // left margin, in pixels\n//     width = 500, // outer width, in pixels\n//     height = 400, // outer height, in pixels\n//     xType = d3.scaleUtc, // the x-scale type\n//     xDomain, // [xmin, xmax]\n//     xRange = [marginLeft, width - marginRight], // [left, right]\n//     yType = d3.scaleLinear, // the y-scale type\n//     yDomain, // [ymin, ymax]\n//     yRange = [height - marginBottom, marginTop], // [bottom, top]\n//     yFormat, // a format specifier string for the y-axis\n//     yLabel, // a label for the y-axis\n//     xLabel, // adding becauses i want x label\n//     color = \"red\", // stroke color of line\n//     strokeLinecap = \"round\", // stroke line cap of the line\n//     strokeLinejoin = \"bevel\", // stroke line join of the line\n//     strokeWidth = 2, // stroke width of line, in pixels\n//     strokeOpacity = 1, // stroke opacity of line\n//   } = {}\n// ) {\n//   // Compute values.\n//   const X = d3.map(data, x);\n//   const Y = d3.map(data, y);\n//   const I = d3.range(X.length);\n//   if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n//   const D = d3.map(data, defined);\n\n//   // Compute default domains.\n//   if (xDomain === undefined) xDomain = d3.extent(X);\n//   if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n//   // Construct scales and axes.\n//   const xScale = xType(xDomain, xRange);\n//   const yScale = yType(yDomain, yRange);\n//   const xAxis = d3\n//     .axisBottom(xScale)\n//     .ticks(width / 30) // x range\n//     .tickSizeOuter(0);\n//   const yAxis = d3.axisLeft(yScale).ticks(height / 20, yFormat); //y range\n\n//   // Construct a line generator.\n//   const line = d3\n//     .line()\n//     .defined((i) => D[i])\n//     .curve(curve)\n//     .x((i) => xScale(X[i]))\n//     .y((i) => yScale(Y[i]));\n\n//   const svg = d3\n//     .create(\"svg\")\n//     .attr(\"width\", width)\n//     .attr(\"height\", height)\n//     .attr(\"viewBox\", [0, 0, width, height])\n//     .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n//   //x Axis line\n//   svg\n//     .append(\"g\")\n//     .attr(\"transform\", `translate(0,${height - marginBottom})`)\n//     .call(xAxis);\n\n//   // y Axis line\n//   svg\n//     .append(\"g\")\n//     .attr(\"transform\", `translate(${marginLeft},0)`)\n//     .call(yAxis)\n//     .call((g) => g.select(\".domain\").remove())\n//     .call((g) =>\n//       g\n//         .selectAll(\".tick line\")\n//         .clone()\n//         .attr(\"x2\", width - marginLeft - marginRight)\n//         .attr(\"stroke-opacity\", 0.1)\n//     )\n//     .call((g) =>\n//       g\n//         .append(\"text\")\n//         .attr(\"x\", -marginLeft)\n//         .attr(\"y\", 10)\n//         .attr(\"fill\", \"red\") //number of games text\n//         .attr(\"text-anchor\", \"start\")\n//         .text(yLabel)\n//     );\n\n//   //graph\n//   svg\n//     .append(\"path\")\n//     .attr(\"fill\", \"none\")\n//     .attr(\"stroke\", \"pink\") //graph stroke color\n//     .attr(\"stroke-width\", strokeWidth)\n//     .attr(\"stroke-linecap\", strokeLinecap)\n//     .attr(\"stroke-linejoin\", strokeLinejoin)\n//     .attr(\"stroke-opacity\", strokeOpacity)\n//     .attr(\"d\", line(I));\n\n//   //label for x\n//   svg\n//     .append(\"text\")\n//     .attr(\"x\", width - marginRight * 10)\n//     .attr(\"y\", height - marginBottom / 20)\n//     .attr(\"fill\", \"black\") //release year\n//     .attr(\"text-anchor\", \"end\")\n//     .text(xLabel);\n//   return svg.node();\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/lineChart.js\n");

/***/ }),

/***/ "./src/scripts/components/mainPage.js":
/*!********************************************!*\
  !*** ./src/scripts/components/mainPage.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleDataPage\": function() { return /* binding */ handleDataPage; },\n/* harmony export */   \"handlePage\": function() { return /* binding */ handlePage; },\n/* harmony export */   \"renderMainPage\": function() { return /* binding */ renderMainPage; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n/* harmony import */ var _chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart/genreCharts */ \"./src/scripts/components/chart/genreCharts.js\");\n\n\n\nconst renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Level Up Your</h1>\n        <h1> <span>Gaming</span> Knowledge</h1>\n        <h1>Search, Discover and <span>Play</span></h1>\n\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Get the <span>Edge</span></h1>\n        <h1>with Our Comprehensive</h1>\n        <h1> Gaming<span> Data</span> Analysis</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n};\nfunction handlePage(allData) {\n  console.log('handlepage');\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    console.log(\"button\");\n    main.innerHTML = \"\";\n    main.classList.add(\"card_page\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}\nfunction handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  const main = document.getElementById('main');\n  main.classList.remove(\"card_page\");\n  dataButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    console.log(\"databutton\");\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData);\n    (0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.createMultiChart)((0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.dispatchGenre)(data));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ087QUFDSDtBQUM3QyxNQUFNRyxjQUFjLEdBQUdBLENBQUEsS0FBTTtFQUNsQyxNQUFNQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE1BQU0sQ0FBQztFQUM1Q0YsSUFBSSxDQUFDRyxTQUFTLEdBQUk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUVNLFNBQVNDLFVBQVVBLENBQUNDLE9BQU8sRUFBRTtFQUNsQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO0VBRXpCLE1BQU1QLElBQUksR0FBR0MsUUFBUSxDQUFDTyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzVDLE1BQU1DLFlBQVksR0FBR1IsUUFBUSxDQUFDTyxhQUFhLENBQUMsY0FBYyxDQUFDO0VBQzNEQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQ2hEQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUN0Qk4sT0FBTyxDQUFDQyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQ3JCUCxJQUFJLENBQUNHLFNBQVMsR0FBRyxFQUFFO0lBQ25CSCxJQUFJLENBQUNhLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFdBQVcsQ0FBQztJQUMvQlQsT0FBTyxDQUFDVSxPQUFPLENBQUVDLElBQUksSUFBSztNQUV4QixNQUFNQyxJQUFJLEdBQUdoQixRQUFRLENBQUNpQixhQUFhLENBQUMsS0FBSyxDQUFDO01BQ3ZDRCxJQUFJLENBQUNkLFNBQVMsR0FBSTtBQUMzQixrREFBa0RhLElBQUksQ0FBQ0csU0FBVTtBQUNqRTtBQUNBLGlDQUFpQ0gsSUFBSSxDQUFDSSxLQUFNO0FBQzVDLDBCQUEwQkosSUFBSSxDQUFDSyxLQUFNO0FBQ3JDLGdDQUFnQ0wsSUFBSSxDQUFDTSxpQkFBa0I7QUFDdkQ7QUFDQTtBQUNBLE9BQU87TUFDRHRCLElBQUksQ0FBQ3VCLFdBQVcsQ0FBQ04sSUFBSSxDQUFDO0lBQ3hCLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKO0FBRU8sU0FBU08sY0FBY0EsQ0FBQ25CLE9BQU8sRUFBRW9CLElBQUksRUFBRTtFQUM1QyxNQUFNQyxVQUFVLEdBQUd6QixRQUFRLENBQUNPLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDekQsTUFBTVIsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDM0NGLElBQUksQ0FBQ2EsU0FBUyxDQUFDYyxNQUFNLENBQUMsV0FBVyxDQUFDO0VBQ25DRCxVQUFVLENBQUNoQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUdDLEtBQUssSUFBSztJQUM5Q0EsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEJaLElBQUksQ0FBQ0csU0FBUyxHQUFHLEVBQUU7SUFDbkJHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFlBQVksQ0FBQztJQUN6QlgsNkRBQVcsQ0FBQ1MsT0FBTyxDQUFDO0lBQ3BCUixvRUFBZ0IsQ0FBQ0MsaUVBQWEsQ0FBQzJCLElBQUksQ0FBQyxDQUFDO0VBQ3ZDLENBQUMsQ0FBQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlLmpzPzMwM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9saW5lQ2hhcnRcIjtcbmltcG9ydCB7IGNyZWF0ZU11bHRpQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9nZW5yZUNoYXJ0c1wiO1xuaW1wb3J0IHsgZGlzcGF0Y2hHZW5yZSB9IGZyb20gXCIuL2NoYXJ0L2dlbnJlQ2hhcnRzXCI7XG5leHBvcnQgY29uc3QgcmVuZGVyTWFpblBhZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uaW5uZXJIVE1MID0gYFxuIDxkaXYgY2xhc3M9XCJtYWluX3BhZ2Vfd3JhcHBlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJfcGFnZVwiPlxuICAgICAgICA8aDE+TGV2ZWwgVXAgWW91cjwvaDE+XG4gICAgICAgIDxoMT4gPHNwYW4+R2FtaW5nPC9zcGFuPiBLbm93bGVkZ2U8L2gxPlxuICAgICAgICA8aDE+U2VhcmNoLCBEaXNjb3ZlciBhbmQgPHNwYW4+UGxheTwvc3Bhbj48L2gxPlxuXG4gICAgICAgIDxidXR0b24gaWQ9XCJnYW1lX2J1dHRvblwiPkV4cGxvcmU8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiX3BhZ2UgZGF0YVwiPlxuICAgICAgICA8aDE+R2V0IHRoZSA8c3Bhbj5FZGdlPC9zcGFuPjwvaDE+XG4gICAgICAgIDxoMT53aXRoIE91ciBDb21wcmVoZW5zaXZlPC9oMT5cbiAgICAgICAgPGgxPiBHYW1pbmc8c3Bhbj4gRGF0YTwvc3Bhbj4gQW5hbHlzaXM8L2gxPlxuICAgICAgICA8YnV0dG9uIGlkPVwiZGF0YV9idXR0b25cIj5FeHBsb3JlPC9idXR0b24+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuICAgIGA7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlUGFnZShhbGxEYXRhKSB7XG4gIGNvbnNvbGUubG9nKCdoYW5kbGVwYWdlJylcblxuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluXCIpO1xuICBjb25zdCByZW5kZXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dhbWVfYnV0dG9uXCIpO1xuICByZW5kZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc29sZS5sb2coXCJidXR0b25cIik7XG4gICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIG1haW4uY2xhc3NMaXN0LmFkZChcImNhcmRfcGFnZVwiKTtcbiAgICBhbGxEYXRhLmZvckVhY2goKGdhbWUpID0+IHtcblxuICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICBjYXJkLmlubmVySFRNTCA9IGBcbjxkaXYgY2xhc3M9XCJjYXJkXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7Z2FtZS50aHVtYm5haWx9Jyk7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7XCI+XG4gICAgICA8dWwgY2xhc3M9XCJjYXJkX2luZm9cIj5cbiAgICAgIDxsaT48aDEgaWQgPVwiZ2FtZV90aXRsZVwiPiR7Z2FtZS50aXRsZX08L2gxPjwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJnZW5yZVwiPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZGVzY3JpcHRpb25cIj4ke2dhbWUuc2hvcnRfZGVzY3JpcHRpb259PC9saT5cbiAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIGA7XG4gICAgICBtYWluLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZURhdGFQYWdlKGFsbERhdGEsIGRhdGEpIHtcbiAgY29uc3QgZGF0YUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0YV9idXR0b25cIik7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpXG4gICBtYWluLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX3BhZ2VcIik7XG4gIGRhdGFCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGNvbnNvbGUubG9nKFwiZGF0YWJ1dHRvblwiKTtcbiAgICBjcmVhdGVDaGFydChhbGxEYXRhKTtcbiAgICBjcmVhdGVNdWx0aUNoYXJ0KGRpc3BhdGNoR2VucmUoZGF0YSkpO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDaGFydCIsImNyZWF0ZU11bHRpQ2hhcnQiLCJkaXNwYXRjaEdlbnJlIiwicmVuZGVyTWFpblBhZ2UiLCJtYWluIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsImhhbmRsZVBhZ2UiLCJhbGxEYXRhIiwiY29uc29sZSIsImxvZyIsInF1ZXJ5U2VsZWN0b3IiLCJyZW5kZXJCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImNsYXNzTGlzdCIsImFkZCIsImZvckVhY2giLCJnYW1lIiwiY2FyZCIsImNyZWF0ZUVsZW1lbnQiLCJ0aHVtYm5haWwiLCJ0aXRsZSIsImdlbnJlIiwic2hvcnRfZGVzY3JpcHRpb24iLCJhcHBlbmRDaGlsZCIsImhhbmRsZURhdGFQYWdlIiwiZGF0YSIsImRhdGFCdXR0b24iLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/components/mainPage.js\n");

/***/ }),

/***/ "./src/scripts/components/navbar.js":
/*!******************************************!*\
  !*** ./src/scripts/components/navbar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleNavbarClick\": function() { return /* binding */ handleNavbarClick; },\n/* harmony export */   \"renderNavbar\": function() { return /* binding */ renderNavbar; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n/* harmony import */ var _chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart/genreCharts */ \"./src/scripts/components/chart/genreCharts.js\");\n\n\n\nconst renderNavbar = () => {\n  const navBar = document.getElementById('menu');\n  navBar.innerHTML = `\n    <li><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\"><h1>🐳🐋</h1></a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"profile_menu\">Profile</li>\n    <li id=\"stat_menu\">Statistics</li>\n    `;\n};\nfunction handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\");\n  statMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData);\n    (0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.createMultiChart)((0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.dispatchGenre)(data));\n  });\n  gameMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      main.classList.add('card_page');\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL25hdmJhci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ087QUFDSDtBQUU3QyxNQUFNRyxZQUFZLEdBQUdBLENBQUEsS0FBTTtFQUU5QixNQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE1BQU0sQ0FBQztFQUM5Q0YsTUFBTSxDQUFDRyxTQUFTLEdBQUk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBR0wsQ0FBQztBQUVNLFNBQVNDLGlCQUFpQkEsQ0FBQ0MsT0FBTyxFQUFFQyxJQUFJLEVBQUU7RUFDL0MsTUFBTUMsUUFBUSxHQUFHTixRQUFRLENBQUNPLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDckQsTUFBTUMsUUFBUSxHQUFHUixRQUFRLENBQUNPLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDckRDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFDNUNBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCQyxJQUFJLENBQUNWLFNBQVMsR0FBRyxFQUFFO0lBQ25CUCw2REFBVyxDQUFDUyxPQUFPLENBQUM7SUFDcEJSLG9FQUFnQixDQUFDQyxpRUFBYSxDQUFDUSxJQUFJLENBQUMsQ0FBQztFQUN2QyxDQUFDLENBQUM7RUFFRkMsUUFBUSxDQUFDRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUNDLEtBQUssSUFBRTtJQUN2Q0EsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEJDLElBQUksQ0FBQ1YsU0FBUyxHQUFDLEVBQUU7SUFDcEJFLE9BQU8sQ0FBQ1MsT0FBTyxDQUFFQyxJQUFJLElBQUs7TUFDeEIsTUFBTUMsSUFBSSxHQUFHZixRQUFRLENBQUNnQixhQUFhLENBQUMsS0FBSyxDQUFDO01BQzFDSixJQUFJLENBQUNLLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFdBQVcsQ0FBQztNQUMvQkgsSUFBSSxDQUFDYixTQUFTLEdBQUk7QUFDckIsa0RBQWtEWSxJQUFJLENBQUNLLFNBQVU7QUFDakU7QUFDQSxpQ0FBaUNMLElBQUksQ0FBQ00sS0FBTTtBQUM1QywwQkFBMEJOLElBQUksQ0FBQ08sS0FBTTtBQUNyQyxnQ0FBZ0NQLElBQUksQ0FBQ1EsaUJBQWtCO0FBQ3ZEO0FBQ0E7QUFDQSxPQUFPO01BQ0pWLElBQUksQ0FBQ1csV0FBVyxDQUFDUixJQUFJLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0VBQ0QsQ0FBQyxDQUFDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbmF2YmFyLmpzP2I0Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9saW5lQ2hhcnRcIjtcbmltcG9ydCB7IGNyZWF0ZU11bHRpQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9nZW5yZUNoYXJ0c1wiO1xuaW1wb3J0IHsgZGlzcGF0Y2hHZW5yZSB9IGZyb20gXCIuL2NoYXJ0L2dlbnJlQ2hhcnRzXCI7XG5cbmV4cG9ydCBjb25zdCByZW5kZXJOYXZiYXIgPSAoKSA9PiB7XG5cbiAgICBjb25zdCBuYXZCYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudScpXG4gICAgbmF2QmFyLmlubmVySFRNTCA9IGBcbiAgICA8bGk+PGEgaHJlZj1cImh0dHBzOi8vdXNlbmF2aWdhdGUuZ2l0aHViLmlvL1doYWxlX0dhbWluZ19KYXZhc2NyaXB0X1Byb2plY3QvXCI+PGgxPvCfkLPwn5CLPC9oMT48L2E+PC9saT5cbiAgICA8bGkgaWQ9XCJnYW1lX21lbnVcIj5HYW1lczwvbGk+XG4gICAgPGxpIGlkPVwicHJvZmlsZV9tZW51XCI+UHJvZmlsZTwvbGk+XG4gICAgPGxpIGlkPVwic3RhdF9tZW51XCI+U3RhdGlzdGljczwvbGk+XG4gICAgYDtcblxuXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlTmF2YmFyQ2xpY2soYWxsRGF0YSwgZGF0YSkge1xuICBjb25zdCBnYW1lTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ2FtZV9tZW51XCIpO1xuICBjb25zdCBzdGF0TWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3RhdF9tZW51XCIpXG4gIHN0YXRNZW51LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICBjcmVhdGVDaGFydChhbGxEYXRhKTtcbiAgICBjcmVhdGVNdWx0aUNoYXJ0KGRpc3BhdGNoR2VucmUoZGF0YSkpO1xuICB9KTtcblxuICBnYW1lTWVudS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICBtYWluLmlubmVySFRNTD1cIlwiXG4gYWxsRGF0YS5mb3JFYWNoKChnYW1lKSA9PiB7XG4gICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgIG1haW4uY2xhc3NMaXN0LmFkZCgnY2FyZF9wYWdlJylcbiAgIGNhcmQuaW5uZXJIVE1MID0gYFxuPGRpdiBjbGFzcz1cImNhcmRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgnJHtnYW1lLnRodW1ibmFpbH0nKTsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcIj5cbiAgICAgIDx1bCBjbGFzcz1cImNhcmRfaW5mb1wiPlxuICAgICAgPGxpPjxoMSBpZCA9XCJnYW1lX3RpdGxlXCI+JHtnYW1lLnRpdGxlfTwvaDE+PC9saT5cbiAgICAgIDxsaSBjbGFzcz1cImdlbnJlXCI+JHtnYW1lLmdlbnJlfTwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJkZXNjcmlwdGlvblwiPiR7Z2FtZS5zaG9ydF9kZXNjcmlwdGlvbn08L2xpPlxuICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICAgYDtcbiAgIG1haW4uYXBwZW5kQ2hpbGQoY2FyZCk7XG4gfSlcbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDaGFydCIsImNyZWF0ZU11bHRpQ2hhcnQiLCJkaXNwYXRjaEdlbnJlIiwicmVuZGVyTmF2YmFyIiwibmF2QmFyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsImhhbmRsZU5hdmJhckNsaWNrIiwiYWxsRGF0YSIsImRhdGEiLCJnYW1lTWVudSIsInF1ZXJ5U2VsZWN0b3IiLCJzdGF0TWVudSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwibWFpbiIsImZvckVhY2giLCJnYW1lIiwiY2FyZCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0aHVtYm5haWwiLCJ0aXRsZSIsImdlbnJlIiwic2hvcnRfZGVzY3JpcHRpb24iLCJhcHBlbmRDaGlsZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/components/navbar.js\n");

/***/ }),

/***/ "./src/scripts/components/search.js":
/*!******************************************!*\
  !*** ./src/scripts/components/search.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSearch\": function() { return /* binding */ handleSearch; },\n/* harmony export */   \"renderSearchBar\": function() { return /* binding */ renderSearchBar; }\n/* harmony export */ });\nconst renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement(\"li\");\n  // search.classList.add('search')\n  search.setAttribute(\"id\", \"search\");\n  menu.appendChild(search);\n  search.innerHTML = `\n\n\n  <input id =\"searchInput\" type=\"text\" placeholder=\"search\">\n\n\n\n    `;\n};\nfunction handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", event => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else {\n      main.innerHTML = \"\";\n    }\n  });\n}\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach(game => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      // console.log(game);\n      main.classList.remove(\"card_page\");\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.innerHTML = \"\";\n      main.appendChild(card);\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLGVBQWUsR0FBR0EsQ0FBQSxLQUFNO0VBQ25DLE1BQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsTUFBTSxDQUFDO0VBQzVDLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsSUFBSSxDQUFDO0VBQzNDO0VBQ0FELE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUM7RUFDbkNMLElBQUksQ0FBQ00sV0FBVyxDQUFDSCxNQUFNLENBQUM7RUFDeEJBLE1BQU0sQ0FBQ0ksU0FBUyxHQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBRU0sU0FBU0MsWUFBWUEsQ0FBQ0MsS0FBSyxFQUFFQyxJQUFJLEVBQUU7RUFDeEMsTUFBTUMsV0FBVyxHQUFHVixRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUM7RUFDMURTLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFDL0NBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCLE1BQU1DLFVBQVUsR0FBR0YsS0FBSyxDQUFDRyxNQUFNLENBQUNDLEtBQUs7SUFDckMsSUFBSUYsVUFBVSxDQUFDRyxNQUFNLEdBQUcsQ0FBQyxFQUFFO01BQ3pCQyxlQUFlLENBQUNWLEtBQUssRUFBRU0sVUFBVSxFQUFFTCxJQUFJLENBQUM7SUFDMUMsQ0FBQyxNQUFNO01BQ0xBLElBQUksQ0FBQ0gsU0FBUyxHQUFHLEVBQUU7SUFDckI7RUFDRixDQUFDLENBQUM7QUFDSjtBQUVBLFNBQVNZLGVBQWVBLENBQUNWLEtBQUssRUFBRU0sVUFBVSxFQUFFTCxJQUFJLEVBQUU7RUFDaERELEtBQUssQ0FBQ1csT0FBTyxDQUFFQyxJQUFJLElBQUs7SUFDdEIsTUFBTUMsU0FBUyxHQUFHRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsV0FBVyxFQUFFO0lBQzFDLE1BQU1iLFdBQVcsR0FBR0ksVUFBVSxDQUFDUyxXQUFXLEVBQUU7SUFDNUMsSUFBSUYsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLWCxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUlXLFNBQVMsQ0FBQ0csUUFBUSxDQUFDZCxXQUFXLENBQUMsRUFBRTtNQUN0RTtNQUNBRCxJQUFJLENBQUNnQixTQUFTLENBQUNDLE1BQU0sQ0FBQyxXQUFXLENBQUM7TUFDbEMsTUFBTUMsSUFBSSxHQUFHM0IsUUFBUSxDQUFDRyxhQUFhLENBQUMsS0FBSyxDQUFDO01BQzFDd0IsSUFBSSxDQUFDckIsU0FBUyxHQUFJO0FBQ3hCLGtEQUFrRGMsSUFBSSxDQUFDUSxTQUFVO0FBQ2pFO0FBQ0EsaUNBQWlDUixJQUFJLENBQUNFLEtBQU07QUFDNUMsMEJBQTBCRixJQUFJLENBQUNTLEtBQU07QUFDckMsZ0NBQWdDVCxJQUFJLENBQUNVLGlCQUFrQjtBQUN2RDtBQUNBO0FBQ0EsT0FBTztNQUNEckIsSUFBSSxDQUFDSCxTQUFTLEdBQUcsRUFBRTtNQUNuQkcsSUFBSSxDQUFDSixXQUFXLENBQUNzQixJQUFJLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0lBQ0Y7SUFDQTtJQUNBO0VBQ0YsQ0FBQyxDQUFDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvc2VhcmNoLmpzPzNjZGUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJlbmRlclNlYXJjaEJhciA9ICgpID0+IHtcbiAgY29uc3QgbWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudVwiKTtcbiAgY29uc3Qgc2VhcmNoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAvLyBzZWFyY2guY2xhc3NMaXN0LmFkZCgnc2VhcmNoJylcbiAgc2VhcmNoLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic2VhcmNoXCIpO1xuICBtZW51LmFwcGVuZENoaWxkKHNlYXJjaCk7XG4gIHNlYXJjaC5pbm5lckhUTUwgPSBgXG5cblxuICA8aW5wdXQgaWQgPVwic2VhcmNoSW5wdXRcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwic2VhcmNoXCI+XG5cblxuXG4gICAgYDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVTZWFyY2goZ2FtZXMsIG1haW4pIHtcbiAgY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaElucHV0XCIpO1xuICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBzZWFyY2hUZXJtID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgIGlmIChzZWFyY2hUZXJtLmxlbmd0aCA+IDMpIHtcbiAgICAgIGdldFNlYXJjaFJlc3VsdChnYW1lcywgc2VhcmNoVGVybSwgbWFpbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRTZWFyY2hSZXN1bHQoZ2FtZXMsIHNlYXJjaFRlcm0sIG1haW4pIHtcbiAgZ2FtZXMuZm9yRWFjaCgoZ2FtZSkgPT4ge1xuICAgIGNvbnN0IGdhbWVUaXRsZSA9IGdhbWUudGl0bGUudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBzZWFyY2hJbnB1dCA9IHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoZ2FtZVRpdGxlWzBdID09PSBzZWFyY2hJbnB1dFswXSAmJiBnYW1lVGl0bGUuaW5jbHVkZXMoc2VhcmNoSW5wdXQpKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhnYW1lKTtcbiAgICAgIG1haW4uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfcGFnZVwiKVxuICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBjYXJkLmlubmVySFRNTCA9IGBcbjxkaXYgY2xhc3M9XCJjYXJkXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7Z2FtZS50aHVtYm5haWx9Jyk7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7XCI+XG4gICAgICA8dWwgY2xhc3M9XCJjYXJkX2luZm9cIj5cbiAgICAgIDxsaT48aDEgaWQgPVwiZ2FtZV90aXRsZVwiPiR7Z2FtZS50aXRsZX08L2gxPjwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJnZW5yZVwiPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZGVzY3JpcHRpb25cIj4ke2dhbWUuc2hvcnRfZGVzY3JpcHRpb259PC9saT5cbiAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIGA7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICBtYWluLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH0gLy9lbHNle1xuICAgIC8vICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIC8vICAgbWFpbi5pbm5lckhUTUwgPSBcImNhbid0IGZpbmQgaXQgXCI7XG4gICAgLy8gfVxuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJyZW5kZXJTZWFyY2hCYXIiLCJtZW51IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInNlYXJjaCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsImlubmVySFRNTCIsImhhbmRsZVNlYXJjaCIsImdhbWVzIiwibWFpbiIsInNlYXJjaElucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzZWFyY2hUZXJtIiwidGFyZ2V0IiwidmFsdWUiLCJsZW5ndGgiLCJnZXRTZWFyY2hSZXN1bHQiLCJmb3JFYWNoIiwiZ2FtZSIsImdhbWVUaXRsZSIsInRpdGxlIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImNsYXNzTGlzdCIsInJlbW92ZSIsImNhcmQiLCJ0aHVtYm5haWwiLCJnZW5yZSIsInNob3J0X2Rlc2NyaXB0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/search.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;