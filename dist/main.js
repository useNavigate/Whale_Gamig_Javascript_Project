/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/api */ \"./src/scripts/api.js\");\n/* harmony import */ var _scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/components/navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _scripts_components_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/components/search */ \"./src/scripts/components/search.js\");\n/* harmony import */ var _scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/components/mainPage */ \"./src/scripts/components/mainPage.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  console.log(\"Hello world!\");\n  //npm run watch to run webpack\n  (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.renderNavbar)();\n  (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.renderSearchBar)();\n  (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.renderMainPage)();\n  //render cards\n\n  (0,_scripts_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    //  renderSearchCards(allData.allData);\n    (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.handleSearch)(allData.allData, main);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handlePage)(allData.allData);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handleDataPage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.handleNavbarClick)(allData.allData, allData.gamesByGenre);\n    console.log(allData.gamesByGenre);\n    // createChart(allData.allData);\n    // createMultiChart(dispatchGenre(allData.gamesByGenre));\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDc0M7QUFDRjtBQUNiO0FBQ0o7QUFDSTtBQUMvRFEsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBQ2xELE1BQU1DLElBQUksR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzVDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDM0I7RUFDQVosd0VBQVksRUFBRTtFQUNkRSwyRUFBZSxFQUFFO0VBQ2pCRSw0RUFBYyxFQUFFO0VBQ2hCOztFQUVBTCxxREFBTyxFQUFFLENBQUNjLElBQUksQ0FBRUMsT0FBTyxJQUFLO0lBQzFCO0lBQ0FYLHdFQUFZLENBQUNXLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFTCxJQUFJLENBQUM7SUFDbkNKLHdFQUFVLENBQUNTLE9BQU8sQ0FBQ0EsT0FBTyxDQUFDO0lBQzNCUiw0RUFBYyxDQUFDUSxPQUFPLENBQUNBLE9BQU8sRUFBQ0EsT0FBTyxDQUFDQyxZQUFZLENBQUM7SUFDcERkLDZFQUFpQixDQUFDYSxPQUFPLENBQUNBLE9BQU8sRUFBQ0EsT0FBTyxDQUFDQyxZQUFZLENBQUM7SUFDdkRKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxPQUFPLENBQUNDLFlBQVksQ0FBQztJQUNqQztJQUNBO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VEYXRhIH0gZnJvbSBcIi4vc2NyaXB0cy9hcGlcIjtcbmltcG9ydCB7IHJlbmRlck5hdmJhciwgaGFuZGxlTmF2YmFyQ2xpY2sgfSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbmF2YmFyXCI7XG5pbXBvcnQgeyByZW5kZXJTZWFyY2hCYXIsIGhhbmRsZVNlYXJjaCB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9zZWFyY2hcIjtcbmltcG9ydCB7IHJlbmRlck1haW5QYWdlIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlXCI7XG5pbXBvcnQgeyBoYW5kbGVQYWdlIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlXCI7XG5pbXBvcnQgeyBoYW5kbGVEYXRhUGFnZSB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9tYWluUGFnZVwiO1xuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluXCIpO1xuICBjb25zb2xlLmxvZyhcIkhlbGxvIHdvcmxkIVwiKTtcbiAgLy9ucG0gcnVuIHdhdGNoIHRvIHJ1biB3ZWJwYWNrXG4gIHJlbmRlck5hdmJhcigpO1xuICByZW5kZXJTZWFyY2hCYXIoKTtcbiAgcmVuZGVyTWFpblBhZ2UoKVxuICAvL3JlbmRlciBjYXJkc1xuXG4gIHVzZURhdGEoKS50aGVuKChhbGxEYXRhKSA9PiB7XG4gICAgLy8gIHJlbmRlclNlYXJjaENhcmRzKGFsbERhdGEuYWxsRGF0YSk7XG4gICAgaGFuZGxlU2VhcmNoKGFsbERhdGEuYWxsRGF0YSwgbWFpbik7XG4gICAgaGFuZGxlUGFnZShhbGxEYXRhLmFsbERhdGEpXG4gICAgaGFuZGxlRGF0YVBhZ2UoYWxsRGF0YS5hbGxEYXRhLGFsbERhdGEuZ2FtZXNCeUdlbnJlKVxuICAgIGhhbmRsZU5hdmJhckNsaWNrKGFsbERhdGEuYWxsRGF0YSxhbGxEYXRhLmdhbWVzQnlHZW5yZSlcbiAgICBjb25zb2xlLmxvZyhhbGxEYXRhLmdhbWVzQnlHZW5yZSk7XG4gICAgLy8gY3JlYXRlQ2hhcnQoYWxsRGF0YS5hbGxEYXRhKTtcbiAgICAvLyBjcmVhdGVNdWx0aUNoYXJ0KGRpc3BhdGNoR2VucmUoYWxsRGF0YS5nYW1lc0J5R2VucmUpKTtcbiAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyJ1c2VEYXRhIiwicmVuZGVyTmF2YmFyIiwiaGFuZGxlTmF2YmFyQ2xpY2siLCJyZW5kZXJTZWFyY2hCYXIiLCJoYW5kbGVTZWFyY2giLCJyZW5kZXJNYWluUGFnZSIsImhhbmRsZVBhZ2UiLCJoYW5kbGVEYXRhUGFnZSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1haW4iLCJxdWVyeVNlbGVjdG9yIiwiY29uc29sZSIsImxvZyIsInRoZW4iLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllData\": function() { return /* binding */ getAllData; },\n/* harmony export */   \"useData\": function() { return /* binding */ useData; }\n/* harmony export */ });\nconst games = `https://mmo-games.p.rapidapi.com/games`;\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n  }\n};\nlet allData = null;\nlet gamesByGenre = null;\n// let gamesByPlatform = null;\n// let gamesByPublisher = null;\nlet gamesByReleaseDate = null;\nasync function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n    gamesByGenre = {};\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n    return {\n      allData,\n      gamesByReleaseDate,\n      gamesByGenre\n    }; // it actually needs to return the promise value that has these data i want\n  } catch (err) {\n    console.error(\"error:\" + err);\n  }\n}\n\n/*\n  this function returns data so i don't have to fetch every single time\n  this will only fetch if data is not there also it helps me to get out from call back\n  & chain hell that i was stuck for long time... 😭\n\n  and exporting this because exporting allData and gamesByGenre are useless... it still going to be undefined and its 'promise value'\n  so its better to export this function that actually returns the data i need\n*/\nasync function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenres) {\n    /* this is way to get out from call back hell and also we do not need to fetch EVERY SINGLE TIME*/\n    await getAllData(games, options);\n  }\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre\n  };\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUksd0NBQXVDO0FBQ3RELE1BQU1DLE9BQU8sR0FBRztFQUNkQyxNQUFNLEVBQUUsS0FBSztFQUNiQyxPQUFPLEVBQUU7SUFDUCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDQyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCLGdCQUFnQixFQUFFLG9EQUFvRDtJQUN0RSxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUM7QUFFRCxJQUFJQyxPQUFPLEdBQUcsSUFBSTtBQUNsQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtBQUN2QjtBQUNBO0FBQ0EsSUFBSUMsa0JBQWtCLEdBQUcsSUFBSTtBQUd0QixlQUFlQyxVQUFVQSxDQUFDQyxHQUFHLEVBQUVSLE9BQU8sRUFBRTtFQUM3QyxJQUFJO0lBQ0YsTUFBTVMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsR0FBRyxFQUFFUixPQUFPLENBQUM7SUFDMUMsTUFBTUQsS0FBSyxHQUFHLE1BQU1VLFFBQVEsQ0FBQ0UsSUFBSSxFQUFFO0lBQ25DUCxPQUFPLEdBQUdMLEtBQUs7SUFDZk8sa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLEtBQUssTUFBTU0sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVMsWUFBWSxHQUFHRCxJQUFJLENBQUNDLFlBQVk7TUFDdEMsSUFBSSxDQUFDUCxrQkFBa0IsQ0FBQ08sWUFBWSxDQUFDLEVBQUU7UUFDckNQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsR0FBRyxFQUFFO01BQ3ZDO01BQ0FQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDN0M7SUFFQVAsWUFBWSxHQUFDLENBQUMsQ0FBQztJQUVmLEtBQUssTUFBTU8sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVcsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7TUFDeEIsSUFBSSxDQUFDVixZQUFZLENBQUNVLEtBQUssQ0FBQyxFQUFFO1FBQ3hCVixZQUFZLENBQUNVLEtBQUssQ0FBQyxHQUFHLEVBQUU7TUFDMUI7TUFDQVYsWUFBWSxDQUFDVSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDaEM7SUFFQSxPQUFPO01BQUVSLE9BQU87TUFBRUUsa0JBQWtCO01BQUVEO0lBQWEsQ0FBQyxDQUFDLENBQUM7RUFDeEQsQ0FBQyxDQUFDLE9BQU9XLEdBQUcsRUFBRTtJQUNaQyxPQUFPLENBQUNDLEtBQUssQ0FBQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQztFQUMvQjtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxlQUFlRyxPQUFPQSxDQUFBLEVBQUc7RUFFOUIsSUFBSSxDQUFDZixPQUFPLElBQUksQ0FBQ0Usa0JBQWtCLElBQUksQ0FBQ2MsYUFBYSxFQUFFO0lBQ3JEO0lBQ0EsTUFBTWIsVUFBVSxDQUFDUixLQUFLLEVBQUVDLE9BQU8sQ0FBQztFQUNsQztFQUVBLE1BQU1xQixJQUFJLEdBQUc7SUFDWGpCLE9BQU87SUFDUEUsa0JBQWtCO0lBQ3RCRDtFQUNFLENBQUM7RUFDRCxPQUFPZ0IsSUFBSTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvc2NyaXB0cy9hcGkuanM/YTM5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnYW1lcyA9IGBodHRwczovL21tby1nYW1lcy5wLnJhcGlkYXBpLmNvbS9nYW1lc2A7XG5jb25zdCBvcHRpb25zID0ge1xuICBtZXRob2Q6IFwiR0VUXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiWC1SYXBpZEFQSS1LZXlcIjogXCI1YmFhZTZkYTdhbXNoNmQ1NjNjYmYxMWFjMmEwcDFkNmQ1NmpzbjQ4ODUzYWI1MGQ2N1wiLFxuICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IFwibW1vLWdhbWVzLnAucmFwaWRhcGkuY29tXCIsXG4gIH0sXG59O1xuXG5sZXQgYWxsRGF0YSA9IG51bGw7XG5sZXQgZ2FtZXNCeUdlbnJlID0gbnVsbDtcbi8vIGxldCBnYW1lc0J5UGxhdGZvcm0gPSBudWxsO1xuLy8gbGV0IGdhbWVzQnlQdWJsaXNoZXIgPSBudWxsO1xubGV0IGdhbWVzQnlSZWxlYXNlRGF0ZSA9IG51bGw7XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbERhdGEodXJsLCBvcHRpb25zKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpO1xuICAgIGNvbnN0IGdhbWVzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGFsbERhdGEgPSBnYW1lcztcbiAgICBnYW1lc0J5UmVsZWFzZURhdGUgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGdhbWUgb2YgYWxsRGF0YSkge1xuICAgICAgY29uc3QgcmVsZWFzZV9kYXRlID0gZ2FtZS5yZWxlYXNlX2RhdGU7XG4gICAgICBpZiAoIWdhbWVzQnlSZWxlYXNlRGF0ZVtyZWxlYXNlX2RhdGVdKSB7XG4gICAgICAgIGdhbWVzQnlSZWxlYXNlRGF0ZVtyZWxlYXNlX2RhdGVdID0gW107XG4gICAgICB9XG4gICAgICBnYW1lc0J5UmVsZWFzZURhdGVbcmVsZWFzZV9kYXRlXS5wdXNoKGdhbWUpO1xuICAgIH1cblxuICAgIGdhbWVzQnlHZW5yZT17fVxuXG4gICAgZm9yIChjb25zdCBnYW1lIG9mIGFsbERhdGEpIHtcbiAgICAgIGNvbnN0IGdlbnJlID0gZ2FtZS5nZW5yZTtcbiAgICAgIGlmICghZ2FtZXNCeUdlbnJlW2dlbnJlXSkge1xuICAgICAgICBnYW1lc0J5R2VucmVbZ2VucmVdID0gW107XG4gICAgICB9XG4gICAgICBnYW1lc0J5R2VucmVbZ2VucmVdLnB1c2goZ2FtZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgYWxsRGF0YSwgZ2FtZXNCeVJlbGVhc2VEYXRlLCBnYW1lc0J5R2VucmUgfTsgLy8gaXQgYWN0dWFsbHkgbmVlZHMgdG8gcmV0dXJuIHRoZSBwcm9taXNlIHZhbHVlIHRoYXQgaGFzIHRoZXNlIGRhdGEgaSB3YW50XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJlcnJvcjpcIiArIGVycik7XG4gIH1cbn1cblxuLypcbiAgdGhpcyBmdW5jdGlvbiByZXR1cm5zIGRhdGEgc28gaSBkb24ndCBoYXZlIHRvIGZldGNoIGV2ZXJ5IHNpbmdsZSB0aW1lXG4gIHRoaXMgd2lsbCBvbmx5IGZldGNoIGlmIGRhdGEgaXMgbm90IHRoZXJlIGFsc28gaXQgaGVscHMgbWUgdG8gZ2V0IG91dCBmcm9tIGNhbGwgYmFja1xuICAmIGNoYWluIGhlbGwgdGhhdCBpIHdhcyBzdHVjayBmb3IgbG9uZyB0aW1lLi4uIPCfmK1cblxuICBhbmQgZXhwb3J0aW5nIHRoaXMgYmVjYXVzZSBleHBvcnRpbmcgYWxsRGF0YSBhbmQgZ2FtZXNCeUdlbnJlIGFyZSB1c2VsZXNzLi4uIGl0IHN0aWxsIGdvaW5nIHRvIGJlIHVuZGVmaW5lZCBhbmQgaXRzICdwcm9taXNlIHZhbHVlJ1xuICBzbyBpdHMgYmV0dGVyIHRvIGV4cG9ydCB0aGlzIGZ1bmN0aW9uIHRoYXQgYWN0dWFsbHkgcmV0dXJucyB0aGUgZGF0YSBpIG5lZWRcbiovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXNlRGF0YSgpIHtcblxuICBpZiAoIWFsbERhdGEgfHwgIWdhbWVzQnlSZWxlYXNlRGF0ZSB8fCAhZ2FtZXNCeUdlbnJlcykge1xuICAgIC8qIHRoaXMgaXMgd2F5IHRvIGdldCBvdXQgZnJvbSBjYWxsIGJhY2sgaGVsbCBhbmQgYWxzbyB3ZSBkbyBub3QgbmVlZCB0byBmZXRjaCBFVkVSWSBTSU5HTEUgVElNRSovXG4gICAgYXdhaXQgZ2V0QWxsRGF0YShnYW1lcywgb3B0aW9ucyk7XG4gIH1cblxuICBjb25zdCBkYXRhID0ge1xuICAgIGFsbERhdGEsXG4gICAgZ2FtZXNCeVJlbGVhc2VEYXRlLFxuZ2FtZXNCeUdlbnJlXG4gIH07XG4gIHJldHVybiBkYXRhO1xufVxuXG5cblxuIl0sIm5hbWVzIjpbImdhbWVzIiwib3B0aW9ucyIsIm1ldGhvZCIsImhlYWRlcnMiLCJBY2NlcHQiLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIiwiZ2FtZXNCeVJlbGVhc2VEYXRlIiwiZ2V0QWxsRGF0YSIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJqc29uIiwiZ2FtZSIsInJlbGVhc2VfZGF0ZSIsInB1c2giLCJnZW5yZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInVzZURhdGEiLCJnYW1lc0J5R2VucmVzIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/api.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/genreCharts.js":
/*!*****************************************************!*\
  !*** ./src/scripts/components/chart/genreCharts.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMultiChart\": function() { return /* binding */ createMultiChart; },\n/* harmony export */   \"dispatchGenre\": function() { return /* binding */ dispatchGenre; }\n/* harmony export */ });\nfunction dispatchGenre(genres) {\n  let genreData = [];\n  for (const key in genres) {\n    if (key !== \" MMORPG\") {\n      genreData.push([[key], genres[key]]);\n    }\n  }\n  console.log(genreData);\n  return genreData;\n}\nfunction createMultiChart(data) {\n  data.forEach(arr => {\n    let h1 = document.createElement(\"h1\");\n    h1.innerHTML = `<h1>${arr[0]}</h1>`;\n    document.getElementById(\"main\").appendChild(h1);\n    const games = arr[1].filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n    .map(d => {\n      const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n      ? new Date(d.release_date).getFullYear() : null;\n      return {\n        release_year: year\n      };\n    });\n\n    // Count the number of games released in each year\n    const totals = games.reduce((acc, game) => {\n      if (game.release_year !== null) {\n        if (!acc[game.release_year]) {\n          acc[game.release_year] = 0;\n        }\n        acc[game.release_year]++;\n      }\n      return acc;\n    }, {});\n\n    // Create a line chart using D3\n    const chart = LineChart(\n    //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n    // needs to convert this because d3 only takes cvs data which is same as text/json\n    Object.entries(totals).map(_ref => {\n      let [year, count] = _ref;\n      return {\n        year: new Date(year, 0),\n        count\n      };\n    }), {\n      x: d => d.year,\n      y: d => d.count,\n      z: d => d.title,\n      yLabel: \"Number of games\",\n      xLabel: \"Released Year\",\n      width: 600,\n      height: 400,\n      // color: \"red\", seems like this line can overwrites the colors\n      // specify the tick format for the x-axis\n      xAxisFormat: d3.timeFormat(\"%Y\")\n    });\n    document.getElementById(\"main\").appendChild(chart);\n  });\n}\nfunction LineChart(data) {\n  let {\n    x = _ref2 => {\n      let [x] = _ref2;\n      return x;\n    },\n    // given d in data, returns the (temporal) x-value\n    y = _ref3 => {\n      let [, y] = _ref3;\n      return y;\n    },\n    // given d in data, returns the (quantitative) y-value\n    title,\n    // given d in data, returns the title text\n    defined,\n    // for gaps in data\n    curve = d3.curveLinear,\n    // method of interpolation between points\n    marginTop = 20,\n    // top margin, in pixels\n    marginRight = 30,\n    // right margin, in pixels\n    marginBottom = 30,\n    // bottom margin, in pixels\n    marginLeft = 40,\n    // left margin, in pixels\n    width = 640,\n    // outer width, in pixels\n    height = 400,\n    // outer height, in pixels\n    xType = d3.scaleUtc,\n    // type of x-scale\n    xDomain,\n    // [xmin, xmax]\n    xRange = [marginLeft, width - marginRight],\n    // [left, right]\n    yType = d3.scaleLinear,\n    // type of y-scale\n    yDomain,\n    // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop],\n    // [bottom, top]\n    color = \"currentColor\",\n    // stroke color of line\n    strokeWidth = 1.5,\n    // stroke width of line, in pixels\n    strokeLinejoin = \"round\",\n    // stroke line join of line\n    strokeLinecap = \"round\",\n    // stroke line cap of line\n    yFormat,\n    // a format specifier string for the y-axis\n    yLabel // a label for the y-axis\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Compute values.\n  const X = d3.map(data, x);\n  const Y = d3.map(data, y);\n  const O = d3.map(data, d => d);\n  const I = d3.map(data, (_, i) => i);\n\n  // Compute which data points are considered defined.\n  if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n  const D = d3.map(data, defined);\n\n  // Compute default domains.\n  if (xDomain === undefined) xDomain = d3.extent(X);\n  if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n  // Construct scales and axes.\n  const xScale = xType(xDomain, xRange);\n  const yScale = yType(yDomain, yRange);\n  // const xAxis = d3\n  //   .axisBottom(xScale)\n  //   .ticks(width / 80)\n  //   .tickSizeOuter(0);\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n  // Compute titles.\n  if (title === undefined) {\n    const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n    const formatValue = yScale.tickFormat(100, yFormat);\n    title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n  } else {\n    const O = d3.map(data, d => d);\n    const T = title;\n    title = i => T(O[i], i, data);\n  }\n\n  // Construct a line generator.\n  const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n  svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n  const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n  function pointermoved(event) {\n    const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n    tooltip.style(\"display\", null);\n    tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n    const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n    const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n    const {\n      x,\n      y,\n      width: w,\n      height: h\n    } = text.node().getBBox();\n    text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n    path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n    svg.property(\"value\", O[i]).dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  function pointerleft() {\n    tooltip.style(\"display\", \"none\");\n    svg.node().value = null;\n    svg.dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  return Object.assign(svg.node(), {\n    value: null\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/genreCharts.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/lineChart.js":
/*!***************************************************!*\
  !*** ./src/scripts/components/chart/lineChart.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChart\": function() { return /* binding */ createChart; }\n/* harmony export */ });\nfunction createChart(data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count] = _ref;\n    return {\n      year: new Date(year, 0),\n      count\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 400,\n    height: 400,\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  const main = document.getElementById('#main');\n  let h1 = document.createElement(\"h1\");\n  h1.innerHTML = `<h1>ALL GAMES</h1>`;\n  document.getElementById(\"main\").appendChild(h1);\n  document.getElementById(\"main\").appendChild(chart);\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\n// function LineChart(\n//   data,\n//   {\n//     x = ([x]) => x, // given d in data, returns the (temporal) x-value\n//     y = ([, y]) => y, // given d in data, returns the (quantitative) y-value\n//     defined, // for gaps in data\n//     curve = d3.curveLinear, // method of interpolation between points\n//     marginTop = 30, // top margin, in pixels\n//     marginRight = 30, // right margin, in pixels\n//     marginBottom = 30, // bottom margin, in pixels\n//     marginLeft = 30, // left margin, in pixels\n//     width = 500, // outer width, in pixels\n//     height = 400, // outer height, in pixels\n//     xType = d3.scaleUtc, // the x-scale type\n//     xDomain, // [xmin, xmax]\n//     xRange = [marginLeft, width - marginRight], // [left, right]\n//     yType = d3.scaleLinear, // the y-scale type\n//     yDomain, // [ymin, ymax]\n//     yRange = [height - marginBottom, marginTop], // [bottom, top]\n//     yFormat, // a format specifier string for the y-axis\n//     yLabel, // a label for the y-axis\n//     xLabel, // adding becauses i want x label\n//     color = \"red\", // stroke color of line\n//     strokeLinecap = \"round\", // stroke line cap of the line\n//     strokeLinejoin = \"bevel\", // stroke line join of the line\n//     strokeWidth = 2, // stroke width of line, in pixels\n//     strokeOpacity = 1, // stroke opacity of line\n//   } = {}\n// ) {\n//   // Compute values.\n//   const X = d3.map(data, x);\n//   const Y = d3.map(data, y);\n//   const I = d3.range(X.length);\n//   if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n//   const D = d3.map(data, defined);\n\n//   // Compute default domains.\n//   if (xDomain === undefined) xDomain = d3.extent(X);\n//   if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n//   // Construct scales and axes.\n//   const xScale = xType(xDomain, xRange);\n//   const yScale = yType(yDomain, yRange);\n//   const xAxis = d3\n//     .axisBottom(xScale)\n//     .ticks(width / 30) // x range\n//     .tickSizeOuter(0);\n//   const yAxis = d3.axisLeft(yScale).ticks(height / 20, yFormat); //y range\n\n//   // Construct a line generator.\n//   const line = d3\n//     .line()\n//     .defined((i) => D[i])\n//     .curve(curve)\n//     .x((i) => xScale(X[i]))\n//     .y((i) => yScale(Y[i]));\n\n//   const svg = d3\n//     .create(\"svg\")\n//     .attr(\"width\", width)\n//     .attr(\"height\", height)\n//     .attr(\"viewBox\", [0, 0, width, height])\n//     .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n//   //x Axis line\n//   svg\n//     .append(\"g\")\n//     .attr(\"transform\", `translate(0,${height - marginBottom})`)\n//     .call(xAxis);\n\n//   // y Axis line\n//   svg\n//     .append(\"g\")\n//     .attr(\"transform\", `translate(${marginLeft},0)`)\n//     .call(yAxis)\n//     .call((g) => g.select(\".domain\").remove())\n//     .call((g) =>\n//       g\n//         .selectAll(\".tick line\")\n//         .clone()\n//         .attr(\"x2\", width - marginLeft - marginRight)\n//         .attr(\"stroke-opacity\", 0.1)\n//     )\n//     .call((g) =>\n//       g\n//         .append(\"text\")\n//         .attr(\"x\", -marginLeft)\n//         .attr(\"y\", 10)\n//         .attr(\"fill\", \"red\") //number of games text\n//         .attr(\"text-anchor\", \"start\")\n//         .text(yLabel)\n//     );\n\n//   //graph\n//   svg\n//     .append(\"path\")\n//     .attr(\"fill\", \"none\")\n//     .attr(\"stroke\", \"pink\") //graph stroke color\n//     .attr(\"stroke-width\", strokeWidth)\n//     .attr(\"stroke-linecap\", strokeLinecap)\n//     .attr(\"stroke-linejoin\", strokeLinejoin)\n//     .attr(\"stroke-opacity\", strokeOpacity)\n//     .attr(\"d\", line(I));\n\n//   //label for x\n//   svg\n//     .append(\"text\")\n//     .attr(\"x\", width - marginRight * 10)\n//     .attr(\"y\", height - marginBottom / 20)\n//     .attr(\"fill\", \"black\") //release year\n//     .attr(\"text-anchor\", \"end\")\n//     .text(xLabel);\n//   return svg.node();\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/lineChart.js\n");

/***/ }),

/***/ "./src/scripts/components/mainPage.js":
/*!********************************************!*\
  !*** ./src/scripts/components/mainPage.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleDataPage\": function() { return /* binding */ handleDataPage; },\n/* harmony export */   \"handlePage\": function() { return /* binding */ handlePage; },\n/* harmony export */   \"renderMainPage\": function() { return /* binding */ renderMainPage; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n/* harmony import */ var _chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart/genreCharts */ \"./src/scripts/components/chart/genreCharts.js\");\n\n\n\nconst renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Games</h1>\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Data visualzation</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n};\nfunction handlePage(allData) {\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    console.log(\"button\");\n    main.innerHTML = \"\";\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n      <div class = \"card\">\n      <ul class=\"card_info\">\n      <li><h1>${game.title}</h1></li>\n      <li>${game.genre}</li>\n      <li>${game.short_description}</li>\n      <li>${game.platform}<li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}\nfunction handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  dataButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    console.log(\"databutton\");\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData);\n    (0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.createMultiChart)((0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.dispatchGenre)(data));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ087QUFDSDtBQUM3QyxNQUFNRyxjQUFjLEdBQUdBLENBQUEsS0FBTTtFQUNsQyxNQUFNQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE1BQU0sQ0FBQztFQUM1Q0YsSUFBSSxDQUFDRyxTQUFTLEdBQUk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBRU0sU0FBU0MsVUFBVUEsQ0FBQ0MsT0FBTyxFQUFFO0VBQ2xDLE1BQU1MLElBQUksR0FBR0MsUUFBUSxDQUFDSyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzVDLE1BQU1DLFlBQVksR0FBR04sUUFBUSxDQUFDSyxhQUFhLENBQUMsY0FBYyxDQUFDO0VBQzNEQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQ2hEQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUN0QkMsT0FBTyxDQUFDQyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQ3JCWixJQUFJLENBQUNHLFNBQVMsR0FBRyxFQUFFO0lBQ25CRSxPQUFPLENBQUNRLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO01BQ3hCLE1BQU1DLElBQUksR0FBR2QsUUFBUSxDQUFDZSxhQUFhLENBQUMsS0FBSyxDQUFDO01BQzFDRCxJQUFJLENBQUNaLFNBQVMsR0FBSTtBQUN4QjtBQUNBO0FBQ0EsZ0JBQWdCVyxJQUFJLENBQUNHLEtBQU07QUFDM0IsWUFBWUgsSUFBSSxDQUFDSSxLQUFNO0FBQ3ZCLFlBQVlKLElBQUksQ0FBQ0ssaUJBQWtCO0FBQ25DLFlBQVlMLElBQUksQ0FBQ00sUUFBUztBQUMxQjtBQUNBO0FBQ0EsT0FBTztNQUNEcEIsSUFBSSxDQUFDcUIsV0FBVyxDQUFDTixJQUFJLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBRUo7QUFHTyxTQUFTTyxjQUFjQSxDQUFDakIsT0FBTyxFQUFDa0IsSUFBSSxFQUFDO0VBQ3hDLE1BQU1DLFVBQVUsR0FBR3ZCLFFBQVEsQ0FBQ0ssYUFBYSxDQUFDLGNBQWMsQ0FBQztFQUN6RGtCLFVBQVUsQ0FBQ2hCLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQzlDQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUN0QlYsSUFBSSxDQUFDRyxTQUFTLEdBQUcsRUFBRTtJQUNuQlEsT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO0lBQ3pCaEIsNkRBQVcsQ0FBQ1MsT0FBTyxDQUFDO0lBQ3BCUixvRUFBZ0IsQ0FBQ0MsaUVBQWEsQ0FBQ3lCLElBQUksQ0FBQyxDQUFDO0VBQ3ZDLENBQUMsQ0FBQztBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlLmpzPzMwM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9saW5lQ2hhcnRcIjtcbmltcG9ydCB7IGNyZWF0ZU11bHRpQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9nZW5yZUNoYXJ0c1wiO1xuaW1wb3J0IHsgZGlzcGF0Y2hHZW5yZSB9IGZyb20gXCIuL2NoYXJ0L2dlbnJlQ2hhcnRzXCI7XG5leHBvcnQgY29uc3QgcmVuZGVyTWFpblBhZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIik7XG4gIG1haW4uaW5uZXJIVE1MID0gYFxuIDxkaXYgY2xhc3M9XCJtYWluX3BhZ2Vfd3JhcHBlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJfcGFnZVwiPlxuICAgICAgICA8aDE+R2FtZXM8L2gxPlxuICAgICAgICA8YnV0dG9uIGlkPVwiZ2FtZV9idXR0b25cIj5FeHBsb3JlPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cIl9wYWdlIGRhdGFcIj5cbiAgICAgICAgPGgxPkRhdGEgdmlzdWFsemF0aW9uPC9oMT5cbiAgICAgICAgPGJ1dHRvbiBpZD1cImRhdGFfYnV0dG9uXCI+RXhwbG9yZTwvYnV0dG9uPlxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbiAgICBgO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVBhZ2UoYWxsRGF0YSkge1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluXCIpO1xuICBjb25zdCByZW5kZXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dhbWVfYnV0dG9uXCIpO1xuICByZW5kZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc29sZS5sb2coXCJidXR0b25cIik7XG4gICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIGFsbERhdGEuZm9yRWFjaCgoZ2FtZSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBjYXJkLmlubmVySFRNTCA9IGBcbiAgICAgIDxkaXYgY2xhc3MgPSBcImNhcmRcIj5cbiAgICAgIDx1bCBjbGFzcz1cImNhcmRfaW5mb1wiPlxuICAgICAgPGxpPjxoMT4ke2dhbWUudGl0bGV9PC9oMT48L2xpPlxuICAgICAgPGxpPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgPGxpPiR7Z2FtZS5zaG9ydF9kZXNjcmlwdGlvbn08L2xpPlxuICAgICAgPGxpPiR7Z2FtZS5wbGF0Zm9ybX08bGk+XG4gICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgICAgbWFpbi5hcHBlbmRDaGlsZChjYXJkKTtcbiAgICB9KTtcbiAgfSk7XG5cbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRGF0YVBhZ2UoYWxsRGF0YSxkYXRhKXtcbiAgICBjb25zdCBkYXRhQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkYXRhX2J1dHRvblwiKTtcbiAgICBkYXRhQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICBjb25zb2xlLmxvZyhcImRhdGFidXR0b25cIik7XG4gICAgICBjcmVhdGVDaGFydChhbGxEYXRhKTtcbiAgICAgIGNyZWF0ZU11bHRpQ2hhcnQoZGlzcGF0Y2hHZW5yZShkYXRhKSk7XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2hhcnQiLCJjcmVhdGVNdWx0aUNoYXJ0IiwiZGlzcGF0Y2hHZW5yZSIsInJlbmRlck1haW5QYWdlIiwibWFpbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJoYW5kbGVQYWdlIiwiYWxsRGF0YSIsInF1ZXJ5U2VsZWN0b3IiLCJyZW5kZXJCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImNvbnNvbGUiLCJsb2ciLCJmb3JFYWNoIiwiZ2FtZSIsImNhcmQiLCJjcmVhdGVFbGVtZW50IiwidGl0bGUiLCJnZW5yZSIsInNob3J0X2Rlc2NyaXB0aW9uIiwicGxhdGZvcm0iLCJhcHBlbmRDaGlsZCIsImhhbmRsZURhdGFQYWdlIiwiZGF0YSIsImRhdGFCdXR0b24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/components/mainPage.js\n");

/***/ }),

/***/ "./src/scripts/components/navbar.js":
/*!******************************************!*\
  !*** ./src/scripts/components/navbar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleNavbarClick\": function() { return /* binding */ handleNavbarClick; },\n/* harmony export */   \"renderNavbar\": function() { return /* binding */ renderNavbar; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n/* harmony import */ var _chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chart/genreCharts */ \"./src/scripts/components/chart/genreCharts.js\");\n\n\n\nconst renderNavbar = () => {\n  const navBar = document.getElementById('menu');\n  navBar.innerHTML = `\n    <li><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\"><h1>🐳🐋</h1></a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"profile_menu\">Profile</li>\n    <li id=\"stat_menu\">statistics</li>\n    `;\n};\nfunction handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\");\n  statMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData);\n    (0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.createMultiChart)((0,_chart_genreCharts__WEBPACK_IMPORTED_MODULE_1__.dispatchGenre)(data));\n  });\n  gameMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n      <div class = \"card\">\n      <ul class=\"card_info\">\n      <li><h1>${game.title}</h1></li>\n      <li>${game.genre}</li>\n      <li>${game.short_description}</li>\n      <li>${game.platform}<li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL25hdmJhci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ087QUFDSDtBQUU3QyxNQUFNRyxZQUFZLEdBQUdBLENBQUEsS0FBTTtFQUU5QixNQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE1BQU0sQ0FBQztFQUM5Q0YsTUFBTSxDQUFDRyxTQUFTLEdBQUk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBR0wsQ0FBQztBQUVNLFNBQVNDLGlCQUFpQkEsQ0FBQ0MsT0FBTyxFQUFFQyxJQUFJLEVBQUU7RUFDL0MsTUFBTUMsUUFBUSxHQUFHTixRQUFRLENBQUNPLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDckQsTUFBTUMsUUFBUSxHQUFHUixRQUFRLENBQUNPLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDckRDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFDNUNBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCQyxJQUFJLENBQUNWLFNBQVMsR0FBRyxFQUFFO0lBQ25CUCw2REFBVyxDQUFDUyxPQUFPLENBQUM7SUFDcEJSLG9FQUFnQixDQUFDQyxpRUFBYSxDQUFDUSxJQUFJLENBQUMsQ0FBQztFQUN2QyxDQUFDLENBQUM7RUFFRkMsUUFBUSxDQUFDRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUNDLEtBQUssSUFBRTtJQUN2Q0EsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEJDLElBQUksQ0FBQ1YsU0FBUyxHQUFDLEVBQUU7SUFDcEJFLE9BQU8sQ0FBQ1MsT0FBTyxDQUFFQyxJQUFJLElBQUs7TUFDeEIsTUFBTUMsSUFBSSxHQUFHZixRQUFRLENBQUNnQixhQUFhLENBQUMsS0FBSyxDQUFDO01BQzFDRCxJQUFJLENBQUNiLFNBQVMsR0FBSTtBQUNyQjtBQUNBO0FBQ0EsZ0JBQWdCWSxJQUFJLENBQUNHLEtBQU07QUFDM0IsWUFBWUgsSUFBSSxDQUFDSSxLQUFNO0FBQ3ZCLFlBQVlKLElBQUksQ0FBQ0ssaUJBQWtCO0FBQ25DLFlBQVlMLElBQUksQ0FBQ00sUUFBUztBQUMxQjtBQUNBO0FBQ0EsT0FBTztNQUNKUixJQUFJLENBQUNTLFdBQVcsQ0FBQ04sSUFBSSxDQUFDO0lBQ3hCLENBQUMsQ0FBQztFQUNELENBQUMsQ0FBQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL25hdmJhci5qcz9iNGNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNoYXJ0IH0gZnJvbSBcIi4vY2hhcnQvbGluZUNoYXJ0XCI7XG5pbXBvcnQgeyBjcmVhdGVNdWx0aUNoYXJ0IH0gZnJvbSBcIi4vY2hhcnQvZ2VucmVDaGFydHNcIjtcbmltcG9ydCB7IGRpc3BhdGNoR2VucmUgfSBmcm9tIFwiLi9jaGFydC9nZW5yZUNoYXJ0c1wiO1xuXG5leHBvcnQgY29uc3QgcmVuZGVyTmF2YmFyID0gKCkgPT4ge1xuXG4gICAgY29uc3QgbmF2QmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnUnKVxuICAgIG5hdkJhci5pbm5lckhUTUwgPSBgXG4gICAgPGxpPjxhIGhyZWY9XCJodHRwczovL3VzZW5hdmlnYXRlLmdpdGh1Yi5pby9XaGFsZV9HYW1pbmdfSmF2YXNjcmlwdF9Qcm9qZWN0L1wiPjxoMT7wn5Cz8J+QizwvaDE+PC9hPjwvbGk+XG4gICAgPGxpIGlkPVwiZ2FtZV9tZW51XCI+R2FtZXM8L2xpPlxuICAgIDxsaSBpZD1cInByb2ZpbGVfbWVudVwiPlByb2ZpbGU8L2xpPlxuICAgIDxsaSBpZD1cInN0YXRfbWVudVwiPnN0YXRpc3RpY3M8L2xpPlxuICAgIGA7XG5cblxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZU5hdmJhckNsaWNrKGFsbERhdGEsIGRhdGEpIHtcbiAgY29uc3QgZ2FtZU1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dhbWVfbWVudVwiKTtcbiAgY29uc3Qgc3RhdE1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N0YXRfbWVudVwiKVxuICBzdGF0TWVudS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgY3JlYXRlQ2hhcnQoYWxsRGF0YSk7XG4gICAgY3JlYXRlTXVsdGlDaGFydChkaXNwYXRjaEdlbnJlKGRhdGEpKTtcbiAgfSk7XG5cbiAgZ2FtZU1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZXZlbnQ9PntcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgbWFpbi5pbm5lckhUTUw9XCJcIlxuIGFsbERhdGEuZm9yRWFjaCgoZ2FtZSkgPT4ge1xuICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICBjYXJkLmlubmVySFRNTCA9IGBcbiAgICAgIDxkaXYgY2xhc3MgPSBcImNhcmRcIj5cbiAgICAgIDx1bCBjbGFzcz1cImNhcmRfaW5mb1wiPlxuICAgICAgPGxpPjxoMT4ke2dhbWUudGl0bGV9PC9oMT48L2xpPlxuICAgICAgPGxpPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgPGxpPiR7Z2FtZS5zaG9ydF9kZXNjcmlwdGlvbn08L2xpPlxuICAgICAgPGxpPiR7Z2FtZS5wbGF0Zm9ybX08bGk+XG4gICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgbWFpbi5hcHBlbmRDaGlsZChjYXJkKTtcbiB9KVxuICB9KVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNoYXJ0IiwiY3JlYXRlTXVsdGlDaGFydCIsImRpc3BhdGNoR2VucmUiLCJyZW5kZXJOYXZiYXIiLCJuYXZCYXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwiaGFuZGxlTmF2YmFyQ2xpY2siLCJhbGxEYXRhIiwiZGF0YSIsImdhbWVNZW51IiwicXVlcnlTZWxlY3RvciIsInN0YXRNZW51IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJtYWluIiwiZm9yRWFjaCIsImdhbWUiLCJjYXJkIiwiY3JlYXRlRWxlbWVudCIsInRpdGxlIiwiZ2VucmUiLCJzaG9ydF9kZXNjcmlwdGlvbiIsInBsYXRmb3JtIiwiYXBwZW5kQ2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/components/navbar.js\n");

/***/ }),

/***/ "./src/scripts/components/search.js":
/*!******************************************!*\
  !*** ./src/scripts/components/search.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSearch\": function() { return /* binding */ handleSearch; },\n/* harmony export */   \"renderSearchBar\": function() { return /* binding */ renderSearchBar; }\n/* harmony export */ });\nconst renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement('li');\n  // search.classList.add('search')\n  search.setAttribute('id', 'search');\n  menu.appendChild(search);\n  search.innerHTML = `\n\n\n  <input id =\"searchInput\" type=\"text\">\n\n\n    `;\n};\nfunction handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", event => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else {\n      main.innerHTML = \"\";\n    }\n  });\n}\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach(game => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      // console.log(game);\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n      <div class = \"card\">\n        <h1> result for ${searchTerm}\n        <ul class=\"card_info\">\n          <li><h1>${game.title}</h1></li>\n          <li>${game.genre}</li>\n          <li>${game.short_description}</li>\n          <li>${game.platform}<li>\n          </ul>\n      </div>\n      `;\n      main.innerHTML = \"\";\n      main.appendChild(card);\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLGVBQWUsR0FBR0EsQ0FBQSxLQUFNO0VBQ25DLE1BQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsTUFBTSxDQUFDO0VBQzVDLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsSUFBSSxDQUFDO0VBQzNDO0VBQ0FELE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLElBQUksRUFBQyxRQUFRLENBQUM7RUFDbENMLElBQUksQ0FBQ00sV0FBVyxDQUFDSCxNQUFNLENBQUM7RUFDeEJBLE1BQU0sQ0FBQ0ksU0FBUyxHQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBR0wsQ0FBQztBQUVNLFNBQVNDLFlBQVlBLENBQUNDLEtBQUssRUFBRUMsSUFBSSxFQUFFO0VBQ3hDLE1BQU1DLFdBQVcsR0FBR1YsUUFBUSxDQUFDQyxjQUFjLENBQUMsYUFBYSxDQUFDO0VBQzFEUyxXQUFXLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQy9DQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUN0QixNQUFNQyxVQUFVLEdBQUdGLEtBQUssQ0FBQ0csTUFBTSxDQUFDQyxLQUFLO0lBQ3JDLElBQUlGLFVBQVUsQ0FBQ0csTUFBTSxHQUFHLENBQUMsRUFBRTtNQUN6QkMsZUFBZSxDQUFDVixLQUFLLEVBQUVNLFVBQVUsRUFBRUwsSUFBSSxDQUFDO0lBQzFDLENBQUMsTUFBTTtNQUNMQSxJQUFJLENBQUNILFNBQVMsR0FBRyxFQUFFO0lBQ3JCO0VBQ0YsQ0FBQyxDQUFDO0FBQ0o7QUFFQSxTQUFTWSxlQUFlQSxDQUFDVixLQUFLLEVBQUVNLFVBQVUsRUFBRUwsSUFBSSxFQUFFO0VBQ2hERCxLQUFLLENBQUNXLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO0lBQ3RCLE1BQU1DLFNBQVMsR0FBR0QsSUFBSSxDQUFDRSxLQUFLLENBQUNDLFdBQVcsRUFBRTtJQUMxQyxNQUFNYixXQUFXLEdBQUdJLFVBQVUsQ0FBQ1MsV0FBVyxFQUFFO0lBQzVDLElBQUlGLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBS1gsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJVyxTQUFTLENBQUNHLFFBQVEsQ0FBQ2QsV0FBVyxDQUFDLEVBQUU7TUFDdEU7TUFDQSxNQUFNZSxJQUFJLEdBQUd6QixRQUFRLENBQUNHLGFBQWEsQ0FBQyxLQUFLLENBQUM7TUFDMUNzQixJQUFJLENBQUNuQixTQUFTLEdBQUk7QUFDeEI7QUFDQSwwQkFBMEJRLFVBQVc7QUFDckM7QUFDQSxvQkFBb0JNLElBQUksQ0FBQ0UsS0FBTTtBQUMvQixnQkFBZ0JGLElBQUksQ0FBQ00sS0FBTTtBQUMzQixnQkFBZ0JOLElBQUksQ0FBQ08saUJBQWtCO0FBQ3ZDLGdCQUFnQlAsSUFBSSxDQUFDUSxRQUFTO0FBQzlCO0FBQ0E7QUFDQSxPQUFPO01BQ0RuQixJQUFJLENBQUNILFNBQVMsR0FBRyxFQUFFO01BQ25CRyxJQUFJLENBQUNKLFdBQVcsQ0FBQ29CLElBQUksQ0FBQztJQUN2QixDQUFDLENBQUM7SUFDSDtJQUNBO0lBQ0E7RUFDRixDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9zZWFyY2guanM/M2NkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVuZGVyU2VhcmNoQmFyID0gKCkgPT4ge1xuICBjb25zdCBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51XCIpO1xuICBjb25zdCBzZWFyY2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpXG4gIC8vIHNlYXJjaC5jbGFzc0xpc3QuYWRkKCdzZWFyY2gnKVxuICBzZWFyY2guc2V0QXR0cmlidXRlKCdpZCcsJ3NlYXJjaCcpXG4gIG1lbnUuYXBwZW5kQ2hpbGQoc2VhcmNoKVxuICBzZWFyY2guaW5uZXJIVE1MID0gYFxuXG5cbiAgPGlucHV0IGlkID1cInNlYXJjaElucHV0XCIgdHlwZT1cInRleHRcIj5cblxuXG4gICAgYDtcblxuXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlU2VhcmNoKGdhbWVzLCBtYWluKSB7XG4gIGNvbnN0IHNlYXJjaElucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hJbnB1dFwiKTtcbiAgc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3Qgc2VhcmNoVGVybSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICBpZiAoc2VhcmNoVGVybS5sZW5ndGggPiAzKSB7XG4gICAgICBnZXRTZWFyY2hSZXN1bHQoZ2FtZXMsIHNlYXJjaFRlcm0sIG1haW4pO1xuICAgIH0gZWxzZSB7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0U2VhcmNoUmVzdWx0KGdhbWVzLCBzZWFyY2hUZXJtLCBtYWluKSB7XG4gIGdhbWVzLmZvckVhY2goKGdhbWUpID0+IHtcbiAgICBjb25zdCBnYW1lVGl0bGUgPSBnYW1lLnRpdGxlLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3Qgc2VhcmNoSW5wdXQgPSBzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGdhbWVUaXRsZVswXSA9PT0gc2VhcmNoSW5wdXRbMF0gJiYgZ2FtZVRpdGxlLmluY2x1ZGVzKHNlYXJjaElucHV0KSkge1xuICAgICAgLy8gY29uc29sZS5sb2coZ2FtZSk7XG4gICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIGNhcmQuaW5uZXJIVE1MID0gYFxuICAgICAgPGRpdiBjbGFzcyA9IFwiY2FyZFwiPlxuICAgICAgICA8aDE+IHJlc3VsdCBmb3IgJHtzZWFyY2hUZXJtfVxuICAgICAgICA8dWwgY2xhc3M9XCJjYXJkX2luZm9cIj5cbiAgICAgICAgICA8bGk+PGgxPiR7Z2FtZS50aXRsZX08L2gxPjwvbGk+XG4gICAgICAgICAgPGxpPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgICAgIDxsaT4ke2dhbWUuc2hvcnRfZGVzY3JpcHRpb259PC9saT5cbiAgICAgICAgICA8bGk+JHtnYW1lLnBsYXRmb3JtfTxsaT5cbiAgICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgbWFpbi5hcHBlbmRDaGlsZChjYXJkKTtcbiAgICAgfSAvL2Vsc2V7XG4gICAgLy8gICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgLy8gICBtYWluLmlubmVySFRNTCA9IFwiY2FuJ3QgZmluZCBpdCBcIjtcbiAgICAvLyB9XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbInJlbmRlclNlYXJjaEJhciIsIm1lbnUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwic2VhcmNoIiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwiaW5uZXJIVE1MIiwiaGFuZGxlU2VhcmNoIiwiZ2FtZXMiLCJtYWluIiwic2VhcmNoSW5wdXQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInNlYXJjaFRlcm0iLCJ0YXJnZXQiLCJ2YWx1ZSIsImxlbmd0aCIsImdldFNlYXJjaFJlc3VsdCIsImZvckVhY2giLCJnYW1lIiwiZ2FtZVRpdGxlIiwidGl0bGUiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiY2FyZCIsImdlbnJlIiwic2hvcnRfZGVzY3JpcHRpb24iLCJwbGF0Zm9ybSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/components/search.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;