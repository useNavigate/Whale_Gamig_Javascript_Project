/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/api */ \"./src/scripts/api.js\");\n/* harmony import */ var _scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/components/navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _scripts_components_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/components/search */ \"./src/scripts/components/search.js\");\n/* harmony import */ var _scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/components/mainPage */ \"./src/scripts/components/mainPage.js\");\n/* harmony import */ var _scripts_components_subNavbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/components/subNavbar */ \"./src/scripts/components/subNavbar.js\");\n/* harmony import */ var _scripts_components_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/components/modal */ \"./src/scripts/components/modal.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  (0,_scripts_components_modal__WEBPACK_IMPORTED_MODULE_5__.renderPopup)();\n  (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.renderNavbar)();\n  (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.renderSearchBar)();\n  (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.renderMainPage)();\n  (0,_scripts_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.handleSearch)(allData.allData, main);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handlePage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handleDataPage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.handleNavbarClick)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_subNavbar__WEBPACK_IMPORTED_MODULE_4__.handleSubNavbar)(allData.gamesByGenre);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNzQztBQUNGO0FBS3JDO0FBQzBCO0FBQ1I7QUFFekRVLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNsRCxNQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLE9BQU8sQ0FBQztFQUM1Q0osc0VBQVcsRUFBRTtFQUNiUix3RUFBWSxFQUFFO0VBQ2RFLDJFQUFlLEVBQUU7RUFDakJFLDRFQUFjLEVBQUU7RUFFaEJMLHFEQUFPLEVBQUUsQ0FBQ2MsSUFBSSxDQUFFQyxPQUFPLElBQUs7SUFDMUJYLHdFQUFZLENBQUNXLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFSCxJQUFJLENBQUM7SUFDbkNOLHdFQUFVLENBQUNTLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFQSxPQUFPLENBQUNDLFlBQVksQ0FBQztJQUNqRFQsNEVBQWMsQ0FBQ1EsT0FBTyxDQUFDQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDO0lBQ3JEZCw2RUFBaUIsQ0FBQ2EsT0FBTyxDQUFDQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDO0lBQ3hEUiw4RUFBZSxDQUFDTyxPQUFPLENBQUNDLFlBQVksQ0FBQztFQUN2QyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZURhdGEgfSBmcm9tIFwiLi9zY3JpcHRzL2FwaVwiO1xuaW1wb3J0IHsgcmVuZGVyTmF2YmFyLCBoYW5kbGVOYXZiYXJDbGljayB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9uYXZiYXJcIjtcbmltcG9ydCB7IHJlbmRlclNlYXJjaEJhciwgaGFuZGxlU2VhcmNoIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaFwiO1xuaW1wb3J0IHtcbiAgcmVuZGVyTWFpblBhZ2UsXG4gIGhhbmRsZVBhZ2UsXG4gIGhhbmRsZURhdGFQYWdlLFxufSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbWFpblBhZ2VcIjtcbmltcG9ydCB7IGhhbmRsZVN1Yk5hdmJhciB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9zdWJOYXZiYXJcIjtcbmltcG9ydCB7IHJlbmRlclBvcHVwIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21vZGFsXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpblwiKTtcbiAgcmVuZGVyUG9wdXAoKTtcbiAgcmVuZGVyTmF2YmFyKCk7XG4gIHJlbmRlclNlYXJjaEJhcigpO1xuICByZW5kZXJNYWluUGFnZSgpO1xuXG4gIHVzZURhdGEoKS50aGVuKChhbGxEYXRhKSA9PiB7XG4gICAgaGFuZGxlU2VhcmNoKGFsbERhdGEuYWxsRGF0YSwgbWFpbik7XG4gICAgaGFuZGxlUGFnZShhbGxEYXRhLmFsbERhdGEsIGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcbiAgICBoYW5kbGVEYXRhUGFnZShhbGxEYXRhLmFsbERhdGEsIGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcbiAgICBoYW5kbGVOYXZiYXJDbGljayhhbGxEYXRhLmFsbERhdGEsIGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcbiAgICBoYW5kbGVTdWJOYXZiYXIoYWxsRGF0YS5nYW1lc0J5R2VucmUpO1xuICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbInVzZURhdGEiLCJyZW5kZXJOYXZiYXIiLCJoYW5kbGVOYXZiYXJDbGljayIsInJlbmRlclNlYXJjaEJhciIsImhhbmRsZVNlYXJjaCIsInJlbmRlck1haW5QYWdlIiwiaGFuZGxlUGFnZSIsImhhbmRsZURhdGFQYWdlIiwiaGFuZGxlU3ViTmF2YmFyIiwicmVuZGVyUG9wdXAiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtYWluIiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllData\": function() { return /* binding */ getAllData; },\n/* harmony export */   \"useData\": function() { return /* binding */ useData; }\n/* harmony export */ });\nconst games = `https://mmo-games.p.rapidapi.com/games`;\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n  }\n};\nlet allData = null;\nlet gamesByGenre = null;\nlet gamesByReleaseDate = null;\nasync function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n    gamesByGenre = {};\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n    return {\n      allData,\n      gamesByReleaseDate,\n      gamesByGenre\n    };\n  } catch (err) {}\n}\nasync function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenre) {\n    await getAllData(games, options);\n  }\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre\n  };\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUksd0NBQXVDO0FBRXRELE1BQU1DLE9BQU8sR0FBRztFQUNkQyxNQUFNLEVBQUUsS0FBSztFQUNiQyxPQUFPLEVBQUU7SUFDUCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDQyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCLGdCQUFnQixFQUFFLG9EQUFvRDtJQUN0RSxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUM7QUFFRCxJQUFJQyxPQUFPLEdBQUcsSUFBSTtBQUNsQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtBQUN2QixJQUFJQyxrQkFBa0IsR0FBRyxJQUFJO0FBR3RCLGVBQWVDLFVBQVVBLENBQUNDLEdBQUcsRUFBRVIsT0FBTyxFQUFFO0VBQzdDLElBQUk7SUFDRixNQUFNUyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDRixHQUFHLEVBQUVSLE9BQU8sQ0FBQztJQUMxQyxNQUFNRCxLQUFLLEdBQUcsTUFBTVUsUUFBUSxDQUFDRSxJQUFJLEVBQUU7SUFDbkNQLE9BQU8sR0FBR0wsS0FBSztJQUNmTyxrQkFBa0IsR0FBRyxDQUFDLENBQUM7SUFDdkIsS0FBSyxNQUFNTSxJQUFJLElBQUlSLE9BQU8sRUFBRTtNQUMxQixNQUFNUyxZQUFZLEdBQUdELElBQUksQ0FBQ0MsWUFBWTtNQUN0QyxJQUFJLENBQUNQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsRUFBRTtRQUNyQ1Asa0JBQWtCLENBQUNPLFlBQVksQ0FBQyxHQUFHLEVBQUU7TUFDdkM7TUFDQVAsa0JBQWtCLENBQUNPLFlBQVksQ0FBQyxDQUFDQyxJQUFJLENBQUNGLElBQUksQ0FBQztJQUM3QztJQUVBUCxZQUFZLEdBQUcsQ0FBQyxDQUFDO0lBRWpCLEtBQUssTUFBTU8sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVcsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7TUFDeEIsSUFBSSxDQUFDVixZQUFZLENBQUNVLEtBQUssQ0FBQyxFQUFFO1FBQ3hCVixZQUFZLENBQUNVLEtBQUssQ0FBQyxHQUFHLEVBQUU7TUFDMUI7TUFDQVYsWUFBWSxDQUFDVSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDaEM7SUFFQSxPQUFPO01BQUVSLE9BQU87TUFBRUUsa0JBQWtCO01BQUVEO0lBQWEsQ0FBQztFQUN0RCxDQUFDLENBQUMsT0FBT1csR0FBRyxFQUFFLENBQ2Q7QUFDRjtBQUVPLGVBQWVDLE9BQU9BLENBQUEsRUFBRztFQUM5QixJQUFJLENBQUNiLE9BQU8sSUFBSSxDQUFDRSxrQkFBa0IsSUFBSSxDQUFDRCxZQUFZLEVBQUU7SUFDcEQsTUFBTUUsVUFBVSxDQUFDUixLQUFLLEVBQUVDLE9BQU8sQ0FBQztFQUNsQztFQUVBLE1BQU1rQixJQUFJLEdBQUc7SUFDWGQsT0FBTztJQUNQRSxrQkFBa0I7SUFDbEJEO0VBQ0YsQ0FBQztFQUNELE9BQU9hLElBQUk7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvYXBpLmpzP2EzOTciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2FtZXMgPSBgaHR0cHM6Ly9tbW8tZ2FtZXMucC5yYXBpZGFwaS5jb20vZ2FtZXNgO1xuXG5jb25zdCBvcHRpb25zID0ge1xuICBtZXRob2Q6IFwiR0VUXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiWC1SYXBpZEFQSS1LZXlcIjogXCI1YmFhZTZkYTdhbXNoNmQ1NjNjYmYxMWFjMmEwcDFkNmQ1NmpzbjQ4ODUzYWI1MGQ2N1wiLFxuICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IFwibW1vLWdhbWVzLnAucmFwaWRhcGkuY29tXCIsXG4gIH0sXG59O1xuXG5sZXQgYWxsRGF0YSA9IG51bGw7XG5sZXQgZ2FtZXNCeUdlbnJlID0gbnVsbDtcbmxldCBnYW1lc0J5UmVsZWFzZURhdGUgPSBudWxsO1xuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxEYXRhKHVybCwgb3B0aW9ucykge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBvcHRpb25zKTtcbiAgICBjb25zdCBnYW1lcyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBhbGxEYXRhID0gZ2FtZXM7XG4gICAgZ2FtZXNCeVJlbGVhc2VEYXRlID0ge307XG4gICAgZm9yIChjb25zdCBnYW1lIG9mIGFsbERhdGEpIHtcbiAgICAgIGNvbnN0IHJlbGVhc2VfZGF0ZSA9IGdhbWUucmVsZWFzZV9kYXRlO1xuICAgICAgaWYgKCFnYW1lc0J5UmVsZWFzZURhdGVbcmVsZWFzZV9kYXRlXSkge1xuICAgICAgICBnYW1lc0J5UmVsZWFzZURhdGVbcmVsZWFzZV9kYXRlXSA9IFtdO1xuICAgICAgfVxuICAgICAgZ2FtZXNCeVJlbGVhc2VEYXRlW3JlbGVhc2VfZGF0ZV0ucHVzaChnYW1lKTtcbiAgICB9XG5cbiAgICBnYW1lc0J5R2VucmUgPSB7fTtcblxuICAgIGZvciAoY29uc3QgZ2FtZSBvZiBhbGxEYXRhKSB7XG4gICAgICBjb25zdCBnZW5yZSA9IGdhbWUuZ2VucmU7XG4gICAgICBpZiAoIWdhbWVzQnlHZW5yZVtnZW5yZV0pIHtcbiAgICAgICAgZ2FtZXNCeUdlbnJlW2dlbnJlXSA9IFtdO1xuICAgICAgfVxuICAgICAgZ2FtZXNCeUdlbnJlW2dlbnJlXS5wdXNoKGdhbWUpO1xuICAgIH1cblxuICAgIHJldHVybiB7IGFsbERhdGEsIGdhbWVzQnlSZWxlYXNlRGF0ZSwgZ2FtZXNCeUdlbnJlIH07XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1c2VEYXRhKCkge1xuICBpZiAoIWFsbERhdGEgfHwgIWdhbWVzQnlSZWxlYXNlRGF0ZSB8fCAhZ2FtZXNCeUdlbnJlKSB7XG4gICAgYXdhaXQgZ2V0QWxsRGF0YShnYW1lcywgb3B0aW9ucyk7XG4gIH1cblxuICBjb25zdCBkYXRhID0ge1xuICAgIGFsbERhdGEsXG4gICAgZ2FtZXNCeVJlbGVhc2VEYXRlLFxuICAgIGdhbWVzQnlHZW5yZSxcbiAgfTtcbiAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOlsiZ2FtZXMiLCJvcHRpb25zIiwibWV0aG9kIiwiaGVhZGVycyIsIkFjY2VwdCIsImFsbERhdGEiLCJnYW1lc0J5R2VucmUiLCJnYW1lc0J5UmVsZWFzZURhdGUiLCJnZXRBbGxEYXRhIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsImpzb24iLCJnYW1lIiwicmVsZWFzZV9kYXRlIiwicHVzaCIsImdlbnJlIiwiZXJyIiwidXNlRGF0YSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/api.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/filteredChart.js":
/*!*******************************************************!*\
  !*** ./src/scripts/components/chart/filteredChart.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filteredChart\": function() { return /* binding */ filteredChart; }\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api */ \"./src/scripts/api.js\");\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../navbar */ \"./src/scripts/components/navbar.js\");\n\n\nfunction filteredChart(title, data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count,\n      title\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 700,\n    height: 400,\n    color: \"#007fff\",\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  let prev = document.getElementById(\"chart_all\");\n  prev.innerHTML = \"\";\n  let h1 = document.createElement(\"h1\");\n  if (title === \"Card Game\") {\n    h1.innerHTML = `<h1>Number of The Live <span>Card</span> Games Released per Year</h1>`;\n  } else {\n    h1.innerHTML = `<h1>Number of The Live <span>${title}</span> Games Released per Year</h1>`;\n  }\n  let p = document.createElement(\"div\");\n  p.innerHTML = ` <p>This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.</p>`;\n  prev.appendChild(h1);\n  prev.appendChild(p);\n  prev.appendChild(chart);\n  (0,_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    handleFilter(allData.gamesByGenre);\n\n    //adding class for main\n    const main = document.getElementById(\"main\");\n    main.classList.add(\"data\");\n  });\n  const about = {\n    Shooter: \"Shooter video games or shooters are a subgenre of action video games where the focus is almost entirely on the defeat of the character's enemies using the weapons given to the player.\",\n    MMORPG: \"(Massively Multiplayer Online Role-Playing Game) is a genre of online game that focuses more on traditional RPG elements, such as character development, questing, and story progression. Players typically create and control their own character in a persistent virtual world and interact with other players to complete quests, explore the world, and engage in player versus player combat. Examples of MMORPGs include World of Warcraft, Final Fantasy XIV, and Guild Wars 2.\",\n    MMOARPG: \"(Massively Multiplayer Online Action Role-Playing Game) is a genre of online game that blends action-oriented gameplay with role-playing elements. Players typically control a single character in a virtual world and engage in real-time combat against enemies, completing quests, and gaining experience points to level up their characters. Examples of MMOARPGs include Diablo, Path of Exile, and Torchlight.\",\n    ARPG: \"(Action Role-Playing Game): A video game genre that combines elements of traditional role-playing games with real-time action combat. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Diablo series, Path of Exile.\",\n    BattleRoyale: \"A genre of online multiplayer video games in which a large number of players (typically 100) fight to be the last person or team standing. Players start with minimal equipment and must scavenge for weapons and items while avoiding a constantly shrinking play area. Example: Fortnite, PUBG.\",\n    Strategy: \"A video game genre that emphasizes tactical and strategic decision-making, resource management, and long-term planning. Players control armies or civilizations, build and manage infrastructure, and engage in combat against opponents. Example: Civilization series, Age of Empires.\",\n    Fighting: \"A genre of video games in which players compete against each other in hand-to-hand combat using a variety of martial arts moves and special attacks. Example: Street Fighter, Mortal Kombat.\",\n    CardGame: \"A genre of video games that involve collectible cards as the primary gameplay element. Players build decks of cards with different abilities and strengths, and then use them to battle against opponents. Example: Hearthstone, Magic: The Gathering Arena.\",\n    ActionRPG: \"A genre of role-playing games that emphasizes real-time combat and fast-paced action. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Dark Souls, Kingdoms of Amalur.\",\n    Racing: \"A video game genre that simulates racing vehicles, either on land, sea, or air. Players compete against each other or against the clock to complete courses or races, trying to get the fastest time or cross the finish line first. Example: Forza Horizon, Need for Speed.\",\n    MOBA: \"(Multiplayer Online Battle Arena): A genre of online multiplayer video games in which players control a single character in a team-based battle against opponents. The goal is to destroy the opposing team's base while protecting their own. Example: League of Legends, Dota 2.\",\n    Sports: \"A video game genre that simulates real-world sports, such as soccer, football, basketball, or tennis. Players control individual athletes or teams, competing against each other to win matches or championships. Example: FIFA, NBA 2K.\",\n    MMOFPS: \"(Massively Multiplayer Online First-Person Shooter): A genre of online multiplayer video games that involve shooting and combat from a first-person perspective in a persistent virtual world. Players engage in battles against other players or non-player characters to gain experience points and advance their characters. Example: Destiny, Warframe.\",\n    MMO: \"(Massively Multiplayer Online): A genre of online multiplayer video games that support a large number of players in a shared virtual world. Players can interact with each other and engage in various activities such as completing quests, exploring the world, or battling enemies. Example: World of Warcraft, Guild Wars 2.\",\n    Social: \"A video game genre that emphasizes social interaction between players. Players can create and customize their avatars, chat with other players, participate in activities, and build relationships. Example: Second Life, The Sims.\",\n    Fantasy: \"sA video game genre that features elements of mythology, magic, and fictional creatures. Players can explore and interact with a virtual world filled with fantastical locations and characters. Example: The Elder Scrolls series, Final Fantasy series.\"\n  };\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n<div >\n  <h1>what is <span>${title}</span> game?</h1>\n  <p>${about[title.split(\" \").join(\"\")]}</p>\n</div>`;\n  const about_ul = document.createElement(\"ul\");\n  about_ul.classList.add(\"about_ul\");\n  const description_li = document.createElement(\"h4\");\n  description_li.innerHTML = `${title} Game Data Information List`;\n  about_ul.appendChild(description_li);\n  data.forEach((obj, i) => {\n    let about_li = document.createElement(\"li\");\n    about_li.innerHTML = `<span class =\"order\">${i + 1}</span> - ${obj.title} (${obj.release_date})\n  `;\n    about_ul.appendChild(about_li);\n  });\n  sideInfo.appendChild(about_ul);\n  (0,_navbar__WEBPACK_IMPORTED_MODULE_1__.scrollToTop)();\n\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Category\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      filteredChart(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2NoYXJ0L2ZpbHRlcmVkQ2hhcnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9DO0FBQ0k7QUFHakMsU0FBU0UsYUFBYUEsQ0FBQ0MsS0FBSyxFQUFDQyxJQUFJLEVBQUU7RUFDeEM7RUFDQSxNQUFNQyxLQUFLLEdBQUdELElBQUksQ0FDZkUsTUFBTSxDQUFFQyxDQUFDLElBQUtBLENBQUMsQ0FBQ0MsWUFBWSxLQUFLLE1BQU0sQ0FBQyxDQUFDO0VBQUEsQ0FDekNDLEdBQUcsQ0FBRUYsQ0FBQyxJQUFLO0lBQ1YsTUFBTUcsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0wsQ0FBQyxDQUFDQyxZQUFZLENBQUMsQ0FBQztJQUFBLEVBQ3BDLElBQUlHLElBQUksQ0FBQ0osQ0FBQyxDQUFDQyxZQUFZLENBQUMsQ0FBQ0ssV0FBVyxFQUFFLEdBQ3RDLElBQUk7SUFDUixPQUFPO01BQUVDLFlBQVksRUFBRUo7SUFBSyxDQUFDO0VBQy9CLENBQUMsQ0FBQzs7RUFFSjtFQUNBLE1BQU1LLE1BQU0sR0FBR1YsS0FBSyxDQUFDVyxNQUFNLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEtBQUs7SUFDekMsSUFBSUEsSUFBSSxDQUFDSixZQUFZLEtBQUssSUFBSSxFQUFFO01BQzlCLElBQUksQ0FBQ0csR0FBRyxDQUFDQyxJQUFJLENBQUNKLFlBQVksQ0FBQyxFQUFFO1FBQzNCRyxHQUFHLENBQUNDLElBQUksQ0FBQ0osWUFBWSxDQUFDLEdBQUcsQ0FBQztNQUM1QjtNQUNBRyxHQUFHLENBQUNDLElBQUksQ0FBQ0osWUFBWSxDQUFDLEVBQUU7SUFDMUI7SUFDQSxPQUFPRyxHQUFHO0VBQ1osQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDOztFQUVOO0VBQ0EsTUFBTUUsS0FBSyxHQUFHQyxTQUFTO0VBQ3JCO0VBQ0E7RUFDQUMsTUFBTSxDQUFDQyxPQUFPLENBQUNQLE1BQU0sQ0FBQyxDQUFDTixHQUFHLENBQUNjLElB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O0VBRUY7O0VBRUE7RUFDQWdFLFlBQVksQ0FBQzFGLE9BQU8sQ0FBQyxDQUFDMkYsR0FBRyxFQUFFekYsQ0FBQyxLQUFLO0lBQy9CLE1BQU0wRixTQUFTLEdBQUdqSSxRQUFRLENBQUNJLGFBQWEsQ0FBQyxRQUFRLENBQUM7SUFDbEQ2SCxTQUFTLENBQUNSLFlBQVksQ0FBQyxPQUFPLEVBQUcsR0FBRU8sR0FBRyxDQUFDLENBQUMsQ0FBRSxFQUFDLENBQUM7SUFDNUNDLFNBQVMsQ0FBQ1IsWUFBWSxDQUFDLElBQUksRUFBRyxHQUFFTyxHQUFHLENBQUMsQ0FBQyxDQUFFLEVBQUMsQ0FBQztJQUN4Q0EsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVQQyxTQUFTLENBQUMvSCxTQUFTLEdBQUksR0FBRThILEdBQUcsQ0FBQyxDQUFDLENBQUUsRUFBQztJQUVqQ1QsV0FBVyxDQUFDakgsV0FBVyxDQUFDMkgsU0FBUyxDQUFDO0VBQ3BDLENBQUMsQ0FBQzs7RUFHRjtFQUNBLElBQUlDLGNBQWMsR0FBRyxPQUFPO0VBRTVCWCxXQUFXLENBQUNZLGdCQUFnQixDQUFDLFFBQVEsRUFBR3JDLEtBQUssSUFBSztJQUNoREEsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEIsSUFBSUQsS0FBSyxDQUFDc0MsTUFBTSxDQUFDaEIsS0FBSyxLQUFLYyxjQUFjLEVBQUU7TUFDeENwQyxLQUFLLENBQUNzQyxNQUFNLENBQUNoQixLQUFLO01BQ25CYyxjQUFjLEdBQUdwQyxLQUFLLENBQUNzQyxNQUFNLENBQUNoQixLQUFLO01BQ25DO01BQ0F2SixhQUFhLENBQUNxSyxjQUFjLEVBQUVaLE1BQU0sQ0FBQ1ksY0FBYyxDQUFDLENBQUM7SUFDdkQ7O0lBRUE7SUFDQ1osTUFBTSxDQUFDWSxjQUFjLENBQUM7RUFDekIsQ0FBQyxDQUFDOztFQUVGO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9jaGFydC9maWx0ZXJlZENoYXJ0LmpzP2Q4NTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRGF0YSB9IGZyb20gXCIuLi8uLi9hcGlcIjtcbmltcG9ydCB7IHNjcm9sbFRvVG9wIH0gZnJvbSBcIi4uL25hdmJhclwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJlZENoYXJ0KHRpdGxlLGRhdGEpIHtcbiAgLy8gRXh0cmFjdCB0aGUgcmVsZWFzZSB5ZWFyIGZyb20gZWFjaCBnYW1lIGFuZCBjcmVhdGUgYW4gYXJyYXkgb2Ygb2JqZWN0c1xuICBjb25zdCBnYW1lcyA9IGRhdGFcbiAgICAuZmlsdGVyKChkKSA9PiBkLnJlbGVhc2VfZGF0ZSAhPT0gXCIwMDAwXCIpIC8vIGV4Y2x1ZGUgZ2FtZXMgd2l0aCByZWxlYXNlIHllYXIgb2YgXCIwMDAwXCJcbiAgICAubWFwKChkKSA9PiB7XG4gICAgICBjb25zdCB5ZWFyID0gRGF0ZS5wYXJzZShkLnJlbGVhc2VfZGF0ZSkgLy9pZiBpdHMgbm90IHBhcnNhYmxlIHRoYXQgbWVhbnMgaXRzIDAwMDAgb25lXG4gICAgICAgID8gbmV3IERhdGUoZC5yZWxlYXNlX2RhdGUpLmdldEZ1bGxZZWFyKClcbiAgICAgICAgOiBudWxsO1xuICAgICAgcmV0dXJuIHsgcmVsZWFzZV95ZWFyOiB5ZWFyIH07XG4gICAgfSk7XG5cbiAgLy8gQ291bnQgdGhlIG51bWJlciBvZiBnYW1lcyByZWxlYXNlZCBpbiBlYWNoIHllYXJcbiAgY29uc3QgdG90YWxzID0gZ2FtZXMucmVkdWNlKChhY2MsIGdhbWUpID0+IHtcbiAgICBpZiAoZ2FtZS5yZWxlYXNlX3llYXIgIT09IG51bGwpIHtcbiAgICAgIGlmICghYWNjW2dhbWUucmVsZWFzZV95ZWFyXSkge1xuICAgICAgICBhY2NbZ2FtZS5yZWxlYXNlX3llYXJdID0gMDtcbiAgICAgIH1cbiAgICAgIGFjY1tnYW1lLnJlbGVhc2VfeWVhcl0rKztcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuXG4gIC8vIENyZWF0ZSBhIGxpbmUgY2hhcnQgdXNpbmcgRDNcbiAgY29uc3QgY2hhcnQgPSBMaW5lQ2hhcnQoXG4gICAgLy9jb252ZXJ0cyB0aGUgdG90YWxzIG9iamVjdCBpbnRvIGFuIGFycmF5IG9mIGtleS12YWx1ZSBwYWlycyBiZWNhdXNlIGkgZmV0Y2hlZCB0aGUgYXBpIGFuZCByZXNwb25zZS5qc29uKClcbiAgICAvLyBuZWVkcyB0byBjb252ZXJ0IHRoaXMgYmVjYXVzZSBkMyBvbmx5IHRha2VzIGN2cyBkYXRhIHdoaWNoIGlzIHNhbWUgYXMgdGV4dC9qc29uXG4gICAgT2JqZWN0LmVudHJpZXModG90YWxzKS5tYXAoKFt5ZWFyLCBjb3VudCwgdGl0bGVdKSA9PiAoe1xuICAgICAgeWVhcjogbmV3IERhdGUoeWVhciwgMCksXG4gICAgICBjb3VudCxcbiAgICAgIHRpdGxlLFxuICAgIH0pKSxcbiAgICB7XG4gICAgICB4OiAoZCkgPT4gZC55ZWFyLFxuICAgICAgeTogKGQpID0+IGQuY291bnQsXG4gICAgICB6OiAoZCkgPT4gZC50aXRsZSxcbiAgICAgIHlMYWJlbDogXCJOdW1iZXIgb2YgZ2FtZXNcIixcbiAgICAgIHhMYWJlbDogXCJSZWxlYXNlZCBZZWFyXCIsXG4gICAgICB3aWR0aDogNzAwLFxuICAgICAgaGVpZ2h0OiA0MDAsXG4gICAgICAgY29sb3I6IFwiIzAwN2ZmZlwiLFxuICAgICAgLy8gY29sb3I6IFwicmVkXCIsIHNlZW1zIGxpa2UgdGhpcyBsaW5lIGNhbiBvdmVyd3JpdGVzIHRoZSBjb2xvcnNcbiAgICAgIC8vIHNwZWNpZnkgdGhlIHRpY2sgZm9ybWF0IGZvciB0aGUgeC1heGlzXG4gICAgICB4QXhpc0Zvcm1hdDogZDMudGltZUZvcm1hdChcIiVZXCIpLFxuICAgIH1cbiAgKTtcblxuICAvLyBBcHBlbmQgdGhlIGNoYXJ0IHRvIHRoZSBET01cbmxldCBwcmV2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFydF9hbGxcIilcbnByZXYuaW5uZXJIVE1MPVwiXCJcbmxldCBoMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcblxuaWYodGl0bGUgPT09IFwiQ2FyZCBHYW1lXCIpe1xuICBoMS5pbm5lckhUTUwgPSBgPGgxPk51bWJlciBvZiBUaGUgTGl2ZSA8c3Bhbj5DYXJkPC9zcGFuPiBHYW1lcyBSZWxlYXNlZCBwZXIgWWVhcjwvaDE+YDtcbn1lbHNle1xuXG4gIGgxLmlubmVySFRNTCA9IGA8aDE+TnVtYmVyIG9mIFRoZSBMaXZlIDxzcGFuPiR7dGl0bGV9PC9zcGFuPiBHYW1lcyBSZWxlYXNlZCBwZXIgWWVhcjwvaDE+YDtcbn1cblxuXG4gIGxldCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcC5pbm5lckhUTUwgPSBgIDxwPlRoaXMgZ3JhcGggZGlzcGxheXMgdGhlIG51bWJlciBvZiBnYW1lcyByZWxlYXNlZCBwZXIgeWVhciwgd2l0aCB0aGVcbiAgICAgICAgeS1heGlzIHJlcHJlc2VudGluZyB0aGUgdG90YWwgbnVtYmVyIG9mIGdhbWVzIGFuZCB0aGUgeC1heGlzXG4gICAgICAgIHJlcHJlc2VudGluZyB0aGUgeWVhciBvZiByZWxlYXNlLiBUaGUgZ3JhcGggcHJvdmlkZXMgYSB2aXN1YWxcbiAgICAgICAgcmVwcmVzZW50YXRpb24gb2YgdGhlIHRyZW5kIG9mIGdhbWUgcmVsZWFzZXMgb3ZlciB0aW1lIGFuZCBjYW4gYmUgdXNlZFxuICAgICAgICB0byBpZGVudGlmeSBhbnkgcGF0dGVybnMgb3IgY2hhbmdlcyBpbiB0aGUgaW5kdXN0cnkuPC9wPmA7XG5cbnByZXYuYXBwZW5kQ2hpbGQoaDEpXG5wcmV2LmFwcGVuZENoaWxkKHApXG5wcmV2LmFwcGVuZENoaWxkKGNoYXJ0KVxuXG51c2VEYXRhKCkudGhlbigoYWxsRGF0YSk9PntcbiAgaGFuZGxlRmlsdGVyKGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcblxuICAvL2FkZGluZyBjbGFzcyBmb3IgbWFpblxuICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpXG4gIG1haW4uY2xhc3NMaXN0LmFkZChcImRhdGFcIilcbn0pXG5cblxuXG5jb25zdCBhYm91dCA9IHtcbiAgU2hvb3RlcjpcbiAgICBcIlNob290ZXIgdmlkZW8gZ2FtZXMgb3Igc2hvb3RlcnMgYXJlIGEgc3ViZ2VucmUgb2YgYWN0aW9uIHZpZGVvIGdhbWVzIHdoZXJlIHRoZSBmb2N1cyBpcyBhbG1vc3QgZW50aXJlbHkgb24gdGhlIGRlZmVhdCBvZiB0aGUgY2hhcmFjdGVyJ3MgZW5lbWllcyB1c2luZyB0aGUgd2VhcG9ucyBnaXZlbiB0byB0aGUgcGxheWVyLlwiLFxuICBNTU9SUEc6XG4gICAgXCIoTWFzc2l2ZWx5IE11bHRpcGxheWVyIE9ubGluZSBSb2xlLVBsYXlpbmcgR2FtZSkgaXMgYSBnZW5yZSBvZiBvbmxpbmUgZ2FtZSB0aGF0IGZvY3VzZXMgbW9yZSBvbiB0cmFkaXRpb25hbCBSUEcgZWxlbWVudHMsIHN1Y2ggYXMgY2hhcmFjdGVyIGRldmVsb3BtZW50LCBxdWVzdGluZywgYW5kIHN0b3J5IHByb2dyZXNzaW9uLiBQbGF5ZXJzIHR5cGljYWxseSBjcmVhdGUgYW5kIGNvbnRyb2wgdGhlaXIgb3duIGNoYXJhY3RlciBpbiBhIHBlcnNpc3RlbnQgdmlydHVhbCB3b3JsZCBhbmQgaW50ZXJhY3Qgd2l0aCBvdGhlciBwbGF5ZXJzIHRvIGNvbXBsZXRlIHF1ZXN0cywgZXhwbG9yZSB0aGUgd29ybGQsIGFuZCBlbmdhZ2UgaW4gcGxheWVyIHZlcnN1cyBwbGF5ZXIgY29tYmF0LiBFeGFtcGxlcyBvZiBNTU9SUEdzIGluY2x1ZGUgV29ybGQgb2YgV2FyY3JhZnQsIEZpbmFsIEZhbnRhc3kgWElWLCBhbmQgR3VpbGQgV2FycyAyLlwiLFxuICBNTU9BUlBHOlxuICAgIFwiKE1hc3NpdmVseSBNdWx0aXBsYXllciBPbmxpbmUgQWN0aW9uIFJvbGUtUGxheWluZyBHYW1lKSBpcyBhIGdlbnJlIG9mIG9ubGluZSBnYW1lIHRoYXQgYmxlbmRzIGFjdGlvbi1vcmllbnRlZCBnYW1lcGxheSB3aXRoIHJvbGUtcGxheWluZyBlbGVtZW50cy4gUGxheWVycyB0eXBpY2FsbHkgY29udHJvbCBhIHNpbmdsZSBjaGFyYWN0ZXIgaW4gYSB2aXJ0dWFsIHdvcmxkIGFuZCBlbmdhZ2UgaW4gcmVhbC10aW1lIGNvbWJhdCBhZ2FpbnN0IGVuZW1pZXMsIGNvbXBsZXRpbmcgcXVlc3RzLCBhbmQgZ2FpbmluZyBleHBlcmllbmNlIHBvaW50cyB0byBsZXZlbCB1cCB0aGVpciBjaGFyYWN0ZXJzLiBFeGFtcGxlcyBvZiBNTU9BUlBHcyBpbmNsdWRlIERpYWJsbywgUGF0aCBvZiBFeGlsZSwgYW5kIFRvcmNobGlnaHQuXCIsXG4gIEFSUEc6IFwiKEFjdGlvbiBSb2xlLVBsYXlpbmcgR2FtZSk6IEEgdmlkZW8gZ2FtZSBnZW5yZSB0aGF0IGNvbWJpbmVzIGVsZW1lbnRzIG9mIHRyYWRpdGlvbmFsIHJvbGUtcGxheWluZyBnYW1lcyB3aXRoIHJlYWwtdGltZSBhY3Rpb24gY29tYmF0LiBQbGF5ZXJzIGNvbnRyb2wgYSBjaGFyYWN0ZXIgaW4gYSBmYW50YXN5IHdvcmxkLCBiYXR0bGluZyBlbmVtaWVzIGFuZCBnYWluaW5nIGV4cGVyaWVuY2UgcG9pbnRzIHRvIGxldmVsIHVwIGFuZCBhY3F1aXJlIG5ldyBza2lsbHMgYW5kIGVxdWlwbWVudC4gRXhhbXBsZTogRGlhYmxvIHNlcmllcywgUGF0aCBvZiBFeGlsZS5cIixcbiAgQmF0dGxlUm95YWxlOlxuICAgIFwiQSBnZW5yZSBvZiBvbmxpbmUgbXVsdGlwbGF5ZXIgdmlkZW8gZ2FtZXMgaW4gd2hpY2ggYSBsYXJnZSBudW1iZXIgb2YgcGxheWVycyAodHlwaWNhbGx5IDEwMCkgZmlnaHQgdG8gYmUgdGhlIGxhc3QgcGVyc29uIG9yIHRlYW0gc3RhbmRpbmcuIFBsYXllcnMgc3RhcnQgd2l0aCBtaW5pbWFsIGVxdWlwbWVudCBhbmQgbXVzdCBzY2F2ZW5nZSBmb3Igd2VhcG9ucyBhbmQgaXRlbXMgd2hpbGUgYXZvaWRpbmcgYSBjb25zdGFudGx5IHNocmlua2luZyBwbGF5IGFyZWEuIEV4YW1wbGU6IEZvcnRuaXRlLCBQVUJHLlwiLFxuICBTdHJhdGVneTpcbiAgICBcIkEgdmlkZW8gZ2FtZSBnZW5yZSB0aGF0IGVtcGhhc2l6ZXMgdGFjdGljYWwgYW5kIHN0cmF0ZWdpYyBkZWNpc2lvbi1tYWtpbmcsIHJlc291cmNlIG1hbmFnZW1lbnQsIGFuZCBsb25nLXRlcm0gcGxhbm5pbmcuIFBsYXllcnMgY29udHJvbCBhcm1pZXMgb3IgY2l2aWxpemF0aW9ucywgYnVpbGQgYW5kIG1hbmFnZSBpbmZyYXN0cnVjdHVyZSwgYW5kIGVuZ2FnZSBpbiBjb21iYXQgYWdhaW5zdCBvcHBvbmVudHMuIEV4YW1wbGU6IENpdmlsaXphdGlvbiBzZXJpZXMsIEFnZSBvZiBFbXBpcmVzLlwiLFxuICBGaWdodGluZzpcbiAgICBcIkEgZ2VucmUgb2YgdmlkZW8gZ2FtZXMgaW4gd2hpY2ggcGxheWVycyBjb21wZXRlIGFnYWluc3QgZWFjaCBvdGhlciBpbiBoYW5kLXRvLWhhbmQgY29tYmF0IHVzaW5nIGEgdmFyaWV0eSBvZiBtYXJ0aWFsIGFydHMgbW92ZXMgYW5kIHNwZWNpYWwgYXR0YWNrcy4gRXhhbXBsZTogU3RyZWV0IEZpZ2h0ZXIsIE1vcnRhbCBLb21iYXQuXCIsXG4gIENhcmRHYW1lOlxuICAgIFwiQSBnZW5yZSBvZiB2aWRlbyBnYW1lcyB0aGF0IGludm9sdmUgY29sbGVjdGlibGUgY2FyZHMgYXMgdGhlIHByaW1hcnkgZ2FtZXBsYXkgZWxlbWVudC4gUGxheWVycyBidWlsZCBkZWNrcyBvZiBjYXJkcyB3aXRoIGRpZmZlcmVudCBhYmlsaXRpZXMgYW5kIHN0cmVuZ3RocywgYW5kIHRoZW4gdXNlIHRoZW0gdG8gYmF0dGxlIGFnYWluc3Qgb3Bwb25lbnRzLiBFeGFtcGxlOiBIZWFydGhzdG9uZSwgTWFnaWM6IFRoZSBHYXRoZXJpbmcgQXJlbmEuXCIsXG4gIEFjdGlvblJQRzpcbiAgICBcIkEgZ2VucmUgb2Ygcm9sZS1wbGF5aW5nIGdhbWVzIHRoYXQgZW1waGFzaXplcyByZWFsLXRpbWUgY29tYmF0IGFuZCBmYXN0LXBhY2VkIGFjdGlvbi4gUGxheWVycyBjb250cm9sIGEgY2hhcmFjdGVyIGluIGEgZmFudGFzeSB3b3JsZCwgYmF0dGxpbmcgZW5lbWllcyBhbmQgZ2FpbmluZyBleHBlcmllbmNlIHBvaW50cyB0byBsZXZlbCB1cCBhbmQgYWNxdWlyZSBuZXcgc2tpbGxzIGFuZCBlcXVpcG1lbnQuIEV4YW1wbGU6IERhcmsgU291bHMsIEtpbmdkb21zIG9mIEFtYWx1ci5cIixcbiAgUmFjaW5nOlxuICAgIFwiQSB2aWRlbyBnYW1lIGdlbnJlIHRoYXQgc2ltdWxhdGVzIHJhY2luZyB2ZWhpY2xlcywgZWl0aGVyIG9uIGxhbmQsIHNlYSwgb3IgYWlyLiBQbGF5ZXJzIGNvbXBldGUgYWdhaW5zdCBlYWNoIG90aGVyIG9yIGFnYWluc3QgdGhlIGNsb2NrIHRvIGNvbXBsZXRlIGNvdXJzZXMgb3IgcmFjZXMsIHRyeWluZyB0byBnZXQgdGhlIGZhc3Rlc3QgdGltZSBvciBjcm9zcyB0aGUgZmluaXNoIGxpbmUgZmlyc3QuIEV4YW1wbGU6IEZvcnphIEhvcml6b24sIE5lZWQgZm9yIFNwZWVkLlwiLFxuICBNT0JBOiBcIihNdWx0aXBsYXllciBPbmxpbmUgQmF0dGxlIEFyZW5hKTogQSBnZW5yZSBvZiBvbmxpbmUgbXVsdGlwbGF5ZXIgdmlkZW8gZ2FtZXMgaW4gd2hpY2ggcGxheWVycyBjb250cm9sIGEgc2luZ2xlIGNoYXJhY3RlciBpbiBhIHRlYW0tYmFzZWQgYmF0dGxlIGFnYWluc3Qgb3Bwb25lbnRzLiBUaGUgZ29hbCBpcyB0byBkZXN0cm95IHRoZSBvcHBvc2luZyB0ZWFtJ3MgYmFzZSB3aGlsZSBwcm90ZWN0aW5nIHRoZWlyIG93bi4gRXhhbXBsZTogTGVhZ3VlIG9mIExlZ2VuZHMsIERvdGEgMi5cIixcbiAgU3BvcnRzOlxuICAgIFwiQSB2aWRlbyBnYW1lIGdlbnJlIHRoYXQgc2ltdWxhdGVzIHJlYWwtd29ybGQgc3BvcnRzLCBzdWNoIGFzIHNvY2NlciwgZm9vdGJhbGwsIGJhc2tldGJhbGwsIG9yIHRlbm5pcy4gUGxheWVycyBjb250cm9sIGluZGl2aWR1YWwgYXRobGV0ZXMgb3IgdGVhbXMsIGNvbXBldGluZyBhZ2FpbnN0IGVhY2ggb3RoZXIgdG8gd2luIG1hdGNoZXMgb3IgY2hhbXBpb25zaGlwcy4gRXhhbXBsZTogRklGQSwgTkJBIDJLLlwiLFxuICBNTU9GUFM6XG4gICAgXCIoTWFzc2l2ZWx5IE11bHRpcGxheWVyIE9ubGluZSBGaXJzdC1QZXJzb24gU2hvb3Rlcik6IEEgZ2VucmUgb2Ygb25saW5lIG11bHRpcGxheWVyIHZpZGVvIGdhbWVzIHRoYXQgaW52b2x2ZSBzaG9vdGluZyBhbmQgY29tYmF0IGZyb20gYSBmaXJzdC1wZXJzb24gcGVyc3BlY3RpdmUgaW4gYSBwZXJzaXN0ZW50IHZpcnR1YWwgd29ybGQuIFBsYXllcnMgZW5nYWdlIGluIGJhdHRsZXMgYWdhaW5zdCBvdGhlciBwbGF5ZXJzIG9yIG5vbi1wbGF5ZXIgY2hhcmFjdGVycyB0byBnYWluIGV4cGVyaWVuY2UgcG9pbnRzIGFuZCBhZHZhbmNlIHRoZWlyIGNoYXJhY3RlcnMuIEV4YW1wbGU6IERlc3RpbnksIFdhcmZyYW1lLlwiLFxuICBNTU86IFwiKE1hc3NpdmVseSBNdWx0aXBsYXllciBPbmxpbmUpOiBBIGdlbnJlIG9mIG9ubGluZSBtdWx0aXBsYXllciB2aWRlbyBnYW1lcyB0aGF0IHN1cHBvcnQgYSBsYXJnZSBudW1iZXIgb2YgcGxheWVycyBpbiBhIHNoYXJlZCB2aXJ0dWFsIHdvcmxkLiBQbGF5ZXJzIGNhbiBpbnRlcmFjdCB3aXRoIGVhY2ggb3RoZXIgYW5kIGVuZ2FnZSBpbiB2YXJpb3VzIGFjdGl2aXRpZXMgc3VjaCBhcyBjb21wbGV0aW5nIHF1ZXN0cywgZXhwbG9yaW5nIHRoZSB3b3JsZCwgb3IgYmF0dGxpbmcgZW5lbWllcy4gRXhhbXBsZTogV29ybGQgb2YgV2FyY3JhZnQsIEd1aWxkIFdhcnMgMi5cIixcbiAgU29jaWFsOlxuICAgIFwiQSB2aWRlbyBnYW1lIGdlbnJlIHRoYXQgZW1waGFzaXplcyBzb2NpYWwgaW50ZXJhY3Rpb24gYmV0d2VlbiBwbGF5ZXJzLiBQbGF5ZXJzIGNhbiBjcmVhdGUgYW5kIGN1c3RvbWl6ZSB0aGVpciBhdmF0YXJzLCBjaGF0IHdpdGggb3RoZXIgcGxheWVycywgcGFydGljaXBhdGUgaW4gYWN0aXZpdGllcywgYW5kIGJ1aWxkIHJlbGF0aW9uc2hpcHMuIEV4YW1wbGU6IFNlY29uZCBMaWZlLCBUaGUgU2ltcy5cIixcbiAgRmFudGFzeTpcbiAgICBcInNBIHZpZGVvIGdhbWUgZ2VucmUgdGhhdCBmZWF0dXJlcyBlbGVtZW50cyBvZiBteXRob2xvZ3ksIG1hZ2ljLCBhbmQgZmljdGlvbmFsIGNyZWF0dXJlcy4gUGxheWVycyBjYW4gZXhwbG9yZSBhbmQgaW50ZXJhY3Qgd2l0aCBhIHZpcnR1YWwgd29ybGQgZmlsbGVkIHdpdGggZmFudGFzdGljYWwgbG9jYXRpb25zIGFuZCBjaGFyYWN0ZXJzLiBFeGFtcGxlOiBUaGUgRWxkZXIgU2Nyb2xscyBzZXJpZXMsIEZpbmFsIEZhbnRhc3kgc2VyaWVzLlwiLFxufTtcbmNvbnN0IHNpZGVJbmZvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGFydF9zaWRlSW5mb1wiKTtcblxuXG5zaWRlSW5mby5pbm5lckhUTUw9XCJcIlxuc2lkZUluZm8uaW5uZXJIVE1MID0gYFxuPGRpdiA+XG4gIDxoMT53aGF0IGlzIDxzcGFuPiR7dGl0bGV9PC9zcGFuPiBnYW1lPzwvaDE+XG4gIDxwPiR7YWJvdXRbdGl0bGUuc3BsaXQoXCIgXCIpLmpvaW4oXCJcIildfTwvcD5cbjwvZGl2PmA7XG5cblxuXG5cblxuY29uc3QgYWJvdXRfdWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidWxcIik7XG5hYm91dF91bC5jbGFzc0xpc3QuYWRkKFwiYWJvdXRfdWxcIilcbmNvbnN0IGRlc2NyaXB0aW9uX2xpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImg0XCIpO1xuZGVzY3JpcHRpb25fbGkuaW5uZXJIVE1MID0gYCR7dGl0bGV9IEdhbWUgRGF0YSBJbmZvcm1hdGlvbiBMaXN0YDtcblxuYWJvdXRfdWwuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25fbGkpO1xuXG5kYXRhLmZvckVhY2goKG9iaixpKSA9PiB7XG4gIGxldCBhYm91dF9saSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgYWJvdXRfbGkuaW5uZXJIVE1MID0gYDxzcGFuIGNsYXNzID1cIm9yZGVyXCI+JHtpKzF9PC9zcGFuPiAtICR7b2JqLnRpdGxlfSAoJHtvYmoucmVsZWFzZV9kYXRlfSlcbiAgYDtcblxuICBhYm91dF91bC5hcHBlbmRDaGlsZChhYm91dF9saSk7XG59KTtcblxuc2lkZUluZm8uYXBwZW5kQ2hpbGQoYWJvdXRfdWwpO1xuc2Nyb2xsVG9Ub3AoKVxuXG4gIC8vIENvcHlyaWdodCAyMDIxIE9ic2VydmFibGUsIEluYy5cbiAgLy8gUmVsZWFzZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICAvLyBodHRwczovL29ic2VydmFibGVocS5jb20vQGQzL211bHRpLWxpbmUtY2hhcnRcblxuICBmdW5jdGlvbiBMaW5lQ2hhcnQoXG4gICAgZGF0YSxcbiAgICB7XG4gICAgICB4ID0gKFt4XSkgPT4geCwgLy8gZ2l2ZW4gZCBpbiBkYXRhLCByZXR1cm5zIHRoZSAodGVtcG9yYWwpIHgtdmFsdWVcbiAgICAgIHkgPSAoWywgeV0pID0+IHksIC8vIGdpdmVuIGQgaW4gZGF0YSwgcmV0dXJucyB0aGUgKHF1YW50aXRhdGl2ZSkgeS12YWx1ZVxuICAgICAgLy8geiA9IChbel0pID0+IHosIHRoaXMgaXMgbm90IHdvcmtpbmdcbiAgICAgIHRpdGxlLCAvLyBnaXZlbiBkIGluIGRhdGEsIHJldHVybnMgdGhlIHRpdGxlIHRleHRcbiAgICAgIGRlZmluZWQsIC8vIGZvciBnYXBzIGluIGRhdGFcbiAgICAgIGN1cnZlID0gZDMuY3VydmVMaW5lYXIsIC8vIG1ldGhvZCBvZiBpbnRlcnBvbGF0aW9uIGJldHdlZW4gcG9pbnRzXG4gICAgICBtYXJnaW5Ub3AgPSAyMCwgLy8gdG9wIG1hcmdpbiwgaW4gcGl4ZWxzXG4gICAgICBtYXJnaW5SaWdodCA9IDMwLCAvLyByaWdodCBtYXJnaW4sIGluIHBpeGVsc1xuICAgICAgbWFyZ2luQm90dG9tID0gMzAsIC8vIGJvdHRvbSBtYXJnaW4sIGluIHBpeGVsc1xuICAgICAgbWFyZ2luTGVmdCA9IDQwLCAvLyBsZWZ0IG1hcmdpbiwgaW4gcGl4ZWxzXG4gICAgICB3aWR0aCA9IDY0MCwgLy8gb3V0ZXIgd2lkdGgsIGluIHBpeGVsc1xuICAgICAgaGVpZ2h0ID0gNDAwLCAvLyBvdXRlciBoZWlnaHQsIGluIHBpeGVsc1xuICAgICAgeFR5cGUgPSBkMy5zY2FsZVV0YywgLy8gdHlwZSBvZiB4LXNjYWxlXG4gICAgICB4RG9tYWluLCAvLyBbeG1pbiwgeG1heF1cbiAgICAgIHhSYW5nZSA9IFttYXJnaW5MZWZ0LCB3aWR0aCAtIG1hcmdpblJpZ2h0XSwgLy8gW2xlZnQsIHJpZ2h0XVxuICAgICAgeVR5cGUgPSBkMy5zY2FsZUxpbmVhciwgLy8gdHlwZSBvZiB5LXNjYWxlXG4gICAgICB5RG9tYWluLCAvLyBbeW1pbiwgeW1heF1cbiAgICAgIHlSYW5nZSA9IFtoZWlnaHQgLSBtYXJnaW5Cb3R0b20sIG1hcmdpblRvcF0sIC8vIFtib3R0b20sIHRvcF1cbiAgICAgIGNvbG9yID0gXCJjdXJyZW50Q29sb3JcIiwgLy8gc3Ryb2tlIGNvbG9yIG9mIGxpbmVcbiAgICAgIHN0cm9rZVdpZHRoID0gMS41LCAvLyBzdHJva2Ugd2lkdGggb2YgbGluZSwgaW4gcGl4ZWxzXG4gICAgICBzdHJva2VMaW5lam9pbiA9IFwicm91bmRcIiwgLy8gc3Ryb2tlIGxpbmUgam9pbiBvZiBsaW5lXG4gICAgICBzdHJva2VMaW5lY2FwID0gXCJyb3VuZFwiLCAvLyBzdHJva2UgbGluZSBjYXAgb2YgbGluZVxuICAgICAgeUZvcm1hdCwgLy8gYSBmb3JtYXQgc3BlY2lmaWVyIHN0cmluZyBmb3IgdGhlIHktYXhpc1xuICAgICAgeUxhYmVsLCAvLyBhIGxhYmVsIGZvciB0aGUgeS1heGlzXG4gICAgfSA9IHt9XG4gICkge1xuICAgIC8vIENvbXB1dGUgdmFsdWVzLlxuICAgIGNvbnN0IFggPSBkMy5tYXAoZGF0YSwgeCk7XG4gICAgY29uc3QgWSA9IGQzLm1hcChkYXRhLCB5KTtcbiAgICBjb25zdCBPID0gZDMubWFwKGRhdGEsIChkKSA9PiBkKTtcbiAgICBjb25zdCBJID0gZDMubWFwKGRhdGEsIChfLCBpKSA9PiBpKTtcblxuICAgIC8vIENvbXB1dGUgd2hpY2ggZGF0YSBwb2ludHMgYXJlIGNvbnNpZGVyZWQgZGVmaW5lZC5cbiAgICBpZiAoZGVmaW5lZCA9PT0gdW5kZWZpbmVkKSBkZWZpbmVkID0gKGQsIGkpID0+ICFpc05hTihYW2ldKSAmJiAhaXNOYU4oWVtpXSk7XG4gICAgY29uc3QgRCA9IGQzLm1hcChkYXRhLCBkZWZpbmVkKTtcblxuICAgIC8vIENvbXB1dGUgZGVmYXVsdCBkb21haW5zLlxuICAgIGlmICh4RG9tYWluID09PSB1bmRlZmluZWQpIHhEb21haW4gPSBkMy5leHRlbnQoWCk7XG4gICAgaWYgKHlEb21haW4gPT09IHVuZGVmaW5lZCkgeURvbWFpbiA9IFswLCBkMy5tYXgoWSldO1xuXG4gICAgLy8gQ29uc3RydWN0IHNjYWxlcyBhbmQgYXhlcy5cbiAgICBjb25zdCB4U2NhbGUgPSB4VHlwZSh4RG9tYWluLCB4UmFuZ2UpO1xuICAgIGNvbnN0IHlTY2FsZSA9IHlUeXBlKHlEb21haW4sIHlSYW5nZSk7XG4gICAgLy8gY29uc3QgeEF4aXMgPSBkMy5heGlzQm90dG9tKHhTY2FsZSkudGlja3Mod2lkdGggLyA4MCkudGlja1NpemVPdXRlcigwKTtcbiAgICBjb25zdCB4QXhpcyA9IGQzXG4gICAgICAuYXhpc0JvdHRvbSh4U2NhbGUpXG4gICAgICAudGlja3Mod2lkdGggLyA4MClcbiAgICAgIC50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoXCIlWVwiKSlcbiAgICAgIC50aWNrU2l6ZU91dGVyKDApO1xuICAgIGNvbnN0IHlBeGlzID0gZDMuYXhpc0xlZnQoeVNjYWxlKS50aWNrcyhoZWlnaHQgLyA0MCwgeUZvcm1hdCk7XG5cbiAgICAvLyBDb21wdXRlIHRpdGxlcy5cbiAgICBpZiAodGl0bGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgZm9ybWF0RGF0ZSA9IHhTY2FsZS50aWNrRm9ybWF0KG51bGwsIFwiJWIgJS1kLCAlWVwiKTtcbiAgICAgIGNvbnN0IGZvcm1hdFZhbHVlID0geVNjYWxlLnRpY2tGb3JtYXQoMTAwLCB5Rm9ybWF0KTtcbiAgICAgIHRpdGxlID0gKGkpID0+IGAke2Zvcm1hdERhdGUoWFtpXSl9XFxuJHtmb3JtYXRWYWx1ZShZW2ldKX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBPID0gZDMubWFwKGRhdGEsIChkKSA9PiBkKTtcbiAgICAgIGNvbnN0IFQgPSB0aXRsZTtcbiAgICAgIHRpdGxlID0gKGkpID0+IFQoT1tpXSwgaSwgZGF0YSk7XG4gICAgfVxuXG4gICAgLy8gQ29uc3RydWN0IGEgbGluZSBnZW5lcmF0b3IuXG4gICAgY29uc3QgbGluZSA9IGQzXG4gICAgICAubGluZSgpXG4gICAgICAuZGVmaW5lZCgoaSkgPT4gRFtpXSlcbiAgICAgIC5jdXJ2ZShjdXJ2ZSlcbiAgICAgIC54KChpKSA9PiB4U2NhbGUoWFtpXSkpXG4gICAgICAueSgoaSkgPT4geVNjYWxlKFlbaV0pKTtcblxuICAgIGNvbnN0IHN2ZyA9IGQzXG4gICAgICAuY3JlYXRlKFwic3ZnXCIpXG4gICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoKVxuICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgaGVpZ2h0KVxuICAgICAgLmF0dHIoXCJ2aWV3Qm94XCIsIFswLCAwLCB3aWR0aCwgaGVpZ2h0XSlcbiAgICAgIC5hdHRyKFwic3R5bGVcIiwgXCJtYXgtd2lkdGg6IDEwMCU7IGhlaWdodDogYXV0bzsgaGVpZ2h0OiBpbnRyaW5zaWM7XCIpXG4gICAgICAuYXR0cihcImZvbnQtZmFtaWx5XCIsIFwic2Fucy1zZXJpZlwiKVxuICAgICAgLmF0dHIoXCJmb250LXNpemVcIiwgMTApXG4gICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJ0cmFuc3BhcmVudFwiKVxuICAgICAgLnN0eWxlKFwib3ZlcmZsb3dcIiwgXCJ2aXNpYmxlXCIpXG4gICAgICAub24oXCJwb2ludGVyZW50ZXIgcG9pbnRlcm1vdmVcIiwgcG9pbnRlcm1vdmVkKVxuICAgICAgLm9uKFwicG9pbnRlcmxlYXZlXCIsIHBvaW50ZXJsZWZ0KVxuICAgICAgLm9uKFwidG91Y2hzdGFydFwiLCAoZXZlbnQpID0+IGV2ZW50LnByZXZlbnREZWZhdWx0KCkpO1xuXG4gICAgc3ZnXG4gICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgwLCR7aGVpZ2h0IC0gbWFyZ2luQm90dG9tfSlgKVxuICAgICAgLmNhbGwoeEF4aXMpO1xuXG4gICAgc3ZnXG4gICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke21hcmdpbkxlZnR9LDApYClcbiAgICAgIC5jYWxsKHlBeGlzKVxuICAgICAgLmNhbGwoKGcpID0+IGcuc2VsZWN0KFwiLmRvbWFpblwiKS5yZW1vdmUoKSlcbiAgICAgIC5jYWxsKChnKSA9PlxuICAgICAgICBnXG4gICAgICAgICAgLnNlbGVjdEFsbChcIi50aWNrIGxpbmVcIilcbiAgICAgICAgICAuY2xvbmUoKVxuICAgICAgICAgIC5hdHRyKFwieDJcIiwgd2lkdGggLSBtYXJnaW5MZWZ0IC0gbWFyZ2luUmlnaHQpXG4gICAgICAgICAgLmF0dHIoXCJzdHJva2Utb3BhY2l0eVwiLCAwLjEpXG4gICAgICApXG4gICAgICAuY2FsbCgoZykgPT5cbiAgICAgICAgZ1xuICAgICAgICAgIC5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgICAgICAgLmF0dHIoXCJ4XCIsIC1tYXJnaW5MZWZ0KVxuICAgICAgICAgIC5hdHRyKFwieVwiLCAxMClcbiAgICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJjdXJyZW50Q29sb3JcIilcbiAgICAgICAgICAuYXR0cihcInRleHQtYW5jaG9yXCIsIFwic3RhcnRcIilcbiAgICAgICAgICAudGV4dCh5TGFiZWwpXG4gICAgICApO1xuXG4gICAgc3ZnXG4gICAgICAuYXBwZW5kKFwicGF0aFwiKVxuICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgLmF0dHIoXCJzdHJva2VcIiwgY29sb3IpXG4gICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCBzdHJva2VXaWR0aClcbiAgICAgIC5hdHRyKFwic3Ryb2tlLWxpbmVqb2luXCIsIHN0cm9rZUxpbmVqb2luKVxuICAgICAgLmF0dHIoXCJzdHJva2UtbGluZWNhcFwiLCBzdHJva2VMaW5lY2FwKVxuICAgICAgLmF0dHIoXCJkXCIsIGxpbmUoSSkpO1xuXG4gICAgY29uc3QgdG9vbHRpcCA9IHN2Zy5hcHBlbmQoXCJnXCIpLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpO1xuXG4gICAgZnVuY3Rpb24gcG9pbnRlcm1vdmVkKGV2ZW50KSB7XG4gICAgICBjb25zdCBpID0gZDMuYmlzZWN0Q2VudGVyKFgsIHhTY2FsZS5pbnZlcnQoZDMucG9pbnRlcihldmVudClbMF0pKTtcbiAgICAgIHRvb2x0aXAuc3R5bGUoXCJkaXNwbGF5XCIsIG51bGwpO1xuICAgICAgdG9vbHRpcC5hdHRyKFwidHJhbnNmb3JtXCIsIGB0cmFuc2xhdGUoJHt4U2NhbGUoWFtpXSl9LCR7eVNjYWxlKFlbaV0pfSlgKTtcblxuICAgICAgY29uc3QgcGF0aCA9IHRvb2x0aXBcbiAgICAgICAgLnNlbGVjdEFsbChcInBhdGhcIilcbiAgICAgICAgLmRhdGEoWyxdKVxuICAgICAgICAuam9pbihcInBhdGhcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwid2hpdGVcIilcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgXCJibGFja1wiKTtcblxuICAgICAgY29uc3QgdGV4dCA9IHRvb2x0aXBcbiAgICAgICAgLnNlbGVjdEFsbChcInRleHRcIilcbiAgICAgICAgLmRhdGEoWyxdKVxuICAgICAgICAuam9pbihcInRleHRcIilcbiAgICAgICAgLmNhbGwoKHRleHQpID0+XG4gICAgICAgICAgdGV4dFxuICAgICAgICAgICAgLnNlbGVjdEFsbChcInRzcGFuXCIpXG4gICAgICAgICAgICAuZGF0YShgJHt0aXRsZShpKX1gLnNwbGl0KC9cXG4vKSlcbiAgICAgICAgICAgIC5qb2luKFwidHNwYW5cIilcbiAgICAgICAgICAgIC5hdHRyKFwieFwiLCAwKVxuICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIChfLCBpKSA9PiBgJHtpICogMS4xfWVtYClcbiAgICAgICAgICAgIC5hdHRyKFwiZm9udC13ZWlnaHRcIiwgKF8sIGkpID0+IChpID8gbnVsbCA6IFwiYm9sZFwiKSlcbiAgICAgICAgICAgIC50ZXh0KChkKSA9PiBkKVxuICAgICAgICApO1xuXG4gICAgICBjb25zdCB7IHgsIHksIHdpZHRoOiB3LCBoZWlnaHQ6IGggfSA9IHRleHQubm9kZSgpLmdldEJCb3goKTtcbiAgICAgIHRleHQuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7LXcgLyAyfSwkezE1IC0geX0pYCk7XG4gICAgICBwYXRoLmF0dHIoXG4gICAgICAgIFwiZFwiLFxuICAgICAgICBgTSR7LXcgLyAyIC0gMTB9LDVILTVsNSwtNWw1LDVIJHt3IC8gMiArIDEwfXYke2ggKyAyMH1oLSR7dyArIDIwfXpgXG4gICAgICApO1xuICAgICAgc3ZnLnByb3BlcnR5KFwidmFsdWVcIiwgT1tpXSkuZGlzcGF0Y2goXCJpbnB1dFwiLCB7IGJ1YmJsZXM6IHRydWUgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9pbnRlcmxlZnQoKSB7XG4gICAgICB0b29sdGlwLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XG4gICAgICBzdmcubm9kZSgpLnZhbHVlID0gbnVsbDtcbiAgICAgIHN2Zy5kaXNwYXRjaChcImlucHV0XCIsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihzdmcubm9kZSgpLCB7IHZhbHVlOiBudWxsIH0pO1xuICB9XG59XG5cblxuXG5cblxuIGNvbnN0IGhhbmRsZUZpbHRlciA9IChnZW5yZXMpID0+IHtcbiAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW5cIik7XG4gICBjb25zdCBnZW5yZVNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICBnZW5yZVNlbGVjdC5jbGFzc0xpc3QuYWRkKFwiZ2VucmVfc2VsZWN0XCIpO1xuXG4gICBjb25zdCBzaWRlSW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhcnRfc2lkZUluZm9cIik7XG4gICBzaWRlSW5mby5hcHBlbmRDaGlsZChnZW5yZVNlbGVjdCk7XG5cbiAgIGNvbnN0IHNlbGVjdE9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICBzZWxlY3RPcHRpb24uc2V0QXR0cmlidXRlKFwibGFiZWxcIiwgXCJTZWxlY3QgQ2F0ZWdvcnlcIik7XG4gICBzZWxlY3RPcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJub2NhcFwiKTtcbiAgIHNlbGVjdE9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG4gICBzZWxlY3RPcHRpb24uZGlzYWJsZWQgPSB0cnVlO1xuICAgZ2VucmVTZWxlY3QuYXBwZW5kQ2hpbGQoc2VsZWN0T3B0aW9uKTtcblxuICAgKFwiY29taW5nIGZyb20gbGluZWFyQ2hhcnRcIik7XG4gICAvL2dldHRpbmcgbmFtZSBvZiBnZW5yZXMgZm9yIGZpbHRlcmluZ1xuICAgY29uc3QgZ2VucmVGb3JGaWx0ZXIgPSBbXTtcblxuICAgT2JqZWN0LmtleXMoZ2VucmVzKS5mb3JFYWNoKChrZXlzKSA9PiB7XG4gICAgIGlmIChrZXlzICE9PSBcIiBNTU9SUEdcIikge1xuICAgICAgIGdlbnJlRm9yRmlsdGVyLnB1c2goa2V5cyk7XG4gICAgIH1cbiAgIH0pO1xuXG4gICAvL2dldCB0aGUgcGVyY2VudGFnZSBvZiBlYWNoIGdlbnJlXG4gICBjb25zdCBnZW5yZXNGaWx0ZXIgPSBnZW5yZUZvckZpbHRlci5tYXAoKGtleSkgPT4ge1xuICAgICByZXR1cm4gW2tleSwgZ2VucmVzW2tleV0ubGVuZ3RoXTtcbiAgIH0pO1xuXG4gICAvLyAoZ2VucmVzRmlsdGVyKTtcblxuICAgLy9hc3NpZ25pbmcga2V5cyB0byB1bFxuICAgZ2VucmVzRmlsdGVyLmZvckVhY2goKGtleSwgaSkgPT4ge1xuICAgICBjb25zdCBnZW5yZUxpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgICBnZW5yZUxpc3Quc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7a2V5WzBdfWApO1xuICAgICBnZW5yZUxpc3Quc2V0QXR0cmlidXRlKFwiaWRcIiwgYCR7a2V5WzBdfWApO1xuICAgICAoa2V5WzFdKTtcblxuICAgICBnZW5yZUxpc3QuaW5uZXJIVE1MID0gYCR7a2V5WzBdfWA7XG5cbiAgICAgZ2VucmVTZWxlY3QuYXBwZW5kQ2hpbGQoZ2VucmVMaXN0KTtcbiAgIH0pO1xuXG5cbiAgIC8vIChmaWx0ZXJlZClcbiAgIGxldCBzZWxlY3RlZE9wdGlvbiA9IFwibm9jYXBcIjtcblxuICAgZ2VucmVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZXZlbnQpID0+IHtcbiAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgaWYgKGV2ZW50LnRhcmdldC52YWx1ZSAhPT0gc2VsZWN0ZWRPcHRpb24pIHtcbiAgICAgICAoZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgICAgICBzZWxlY3RlZE9wdGlvbiA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICAgICAvL2NyZWF0aW5nQ2hhcnRcbiAgICAgICBmaWx0ZXJlZENoYXJ0KHNlbGVjdGVkT3B0aW9uLCBnZW5yZXNbc2VsZWN0ZWRPcHRpb25dKTtcbiAgICAgfVxuXG4gICAgIC8vb21nIGZpbmFsbHkgZ290IGl0XG4gICAgIChnZW5yZXNbc2VsZWN0ZWRPcHRpb25dKTtcbiAgIH0pO1xuXG4gICAvLyByZXR1cm4gZ2VucmVzW3NlbGVjdGVkT3B0aW9uXVxuIH07XG4iXSwibmFtZXMiOlsidXNlRGF0YSIsInNjcm9sbFRvVG9wIiwiZmlsdGVyZWRDaGFydCIsInRpdGxlIiwiZGF0YSIsImdhbWVzIiwiZmlsdGVyIiwiZCIsInJlbGVhc2VfZGF0ZSIsIm1hcCIsInllYXIiLCJEYXRlIiwicGFyc2UiLCJnZXRGdWxsWWVhciIsInJlbGVhc2VfeWVhciIsInRvdGFscyIsInJlZHVjZSIsImFjYyIsImdhbWUiLCJjaGFydCIsIkxpbmVDaGFydCIsIk9iamVjdCIsImVudHJpZXMiLCJfcmVmIiwiY291bnQiLCJ4IiwieSIsInoiLCJ5TGFiZWwiLCJ4TGFiZWwiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yIiwieEF4aXNGb3JtYXQiLCJkMyIsInRpbWVGb3JtYXQiLCJwcmV2IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsImgxIiwiY3JlYXRlRWxlbWVudCIsInAiLCJhcHBlbmRDaGlsZCIsInRoZW4iLCJhbGxEYXRhIiwiaGFuZGxlRmlsdGVyIiwiZ2FtZXNCeUdlbnJlIiwibWFpbiIsImNsYXNzTGlzdCIsImFkZCIsImFib3V0IiwiU2hvb3RlciIsIk1NT1JQRyIsIk1NT0FSUEciLCJBUlBHIiwiQmF0dGxlUm95YWxlIiwiU3RyYXRlZ3kiLCJGaWdodGluZyIsIkNhcmRHYW1lIiwiQWN0aW9uUlBHIiwiUmFjaW5nIiwiTU9CQSIsIlNwb3J0cyIsIk1NT0ZQUyIsIk1NTyIsIlNvY2lhbCIsIkZhbnRhc3kiLCJzaWRlSW5mbyIsInF1ZXJ5U2VsZWN0b3IiLCJzcGxpdCIsImpvaW4iLCJhYm91dF91bCIsImRlc2NyaXB0aW9uX2xpIiwiZm9yRWFjaCIsIm9iaiIsImkiLCJhYm91dF9saSIsIl9yZWYyIiwiX3JlZjMiLCJkZWZpbmVkIiwiY3VydmUiLCJjdXJ2ZUxpbmVhciIsIm1hcmdpblRvcCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luQm90dG9tIiwibWFyZ2luTGVmdCIsInhUeXBlIiwic2NhbGVVdGMiLCJ4RG9tYWluIiwieFJhbmdlIiwieVR5cGUiLCJzY2FsZUxpbmVhciIsInlEb21haW4iLCJ5UmFuZ2UiLCJzdHJva2VXaWR0aCIsInN0cm9rZUxpbmVqb2luIiwic3Ryb2tlTGluZWNhcCIsInlGb3JtYXQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJYIiwiWSIsIk8iLCJJIiwiXyIsImlzTmFOIiwiRCIsImV4dGVudCIsIm1heCIsInhTY2FsZSIsInlTY2FsZSIsInhBeGlzIiwiYXhpc0JvdHRvbSIsInRpY2tzIiwidGlja0Zvcm1hdCIsInRpY2tTaXplT3V0ZXIiLCJ5QXhpcyIsImF4aXNMZWZ0IiwiZm9ybWF0RGF0ZSIsImZvcm1hdFZhbHVlIiwiVCIsImxpbmUiLCJzdmciLCJjcmVhdGUiLCJhdHRyIiwic3R5bGUiLCJvbiIsInBvaW50ZXJtb3ZlZCIsInBvaW50ZXJsZWZ0IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImFwcGVuZCIsImNhbGwiLCJnIiwic2VsZWN0IiwicmVtb3ZlIiwic2VsZWN0QWxsIiwiY2xvbmUiLCJ0ZXh0IiwidG9vbHRpcCIsImJpc2VjdENlbnRlciIsImludmVydCIsInBvaW50ZXIiLCJwYXRoIiwidyIsImgiLCJub2RlIiwiZ2V0QkJveCIsInByb3BlcnR5IiwiZGlzcGF0Y2giLCJidWJibGVzIiwidmFsdWUiLCJhc3NpZ24iLCJnZW5yZXMiLCJnZW5yZVNlbGVjdCIsInNlbGVjdE9wdGlvbiIsInNldEF0dHJpYnV0ZSIsInNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnZW5yZUZvckZpbHRlciIsImtleXMiLCJwdXNoIiwiZ2VucmVzRmlsdGVyIiwia2V5IiwiZ2VucmVMaXN0Iiwic2VsZWN0ZWRPcHRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/filteredChart.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/lineChart.js":
/*!***************************************************!*\
  !*** ./src/scripts/components/chart/lineChart.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChart\": function() { return /* binding */ createChart; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _filteredChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filteredChart */ \"./src/scripts/components/chart/filteredChart.js\");\n\n\nfunction createChart(data, genre) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 700,\n    height: 400,\n    color: \"#007fff\",\n    //seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n\n  const MAIN = document.getElementById('main');\n  MAIN.style.backgroundColor = \"#e2edf8\";\n  const main = document.createElement('div');\n  main.setAttribute('id', 'white_bg');\n  MAIN.append(main);\n  main.classList.add(\"data\");\n  let h1 = document.createElement(\"h1\");\n  let mainChart = document.createElement(\"div\");\n  h1.innerHTML = `Number of <span>All</span> The Live Games Released per Year`;\n  let p = document.createElement(\"div\");\n  p.innerHTML = `<p> This graph displays the number of games released per year, with the\n  y-axis representing the total number of games and the x-axis\n  representing the year of release. The graph provides a visual\n  representation of the trend of game releases over time and can be used\n  to identify any patterns or changes in the industry.</p>`;\n  mainChart.setAttribute(\"id\", \"chart_all\");\n  document.getElementById(\"main\").appendChild(mainChart);\n  mainChart.appendChild(h1);\n  mainChart.appendChild(p);\n  // description.appendChild(chartDiv);\n  mainChart.appendChild(chart);\n\n  //aside dom\n  let sideInfo = document.createElement(\"div\");\n  sideInfo.classList.add(\"chart_sideInfo\");\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n  <div >\n  <h1>What is the <span>future</span> of the <span>gaming industry</span>??</h1>\n  <p>Gaming is now a bigger industry than movies and sports combined. Revenue for gaming reached $184 billion in 2022, and the number of gamers is expected to grow to 3.6 billion by 2025. It's not just kids either: 38 percent of gamers are between the ages of 18 and 34 years, and 16 percent are older than 55.</p>\n  </div>`;\n  main.appendChild(mainChart);\n  main.appendChild(sideInfo);\n  (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n  const genreForFilter = [];\n  Object.keys(genre).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genre[key].length];\n  });\n  const about_ul = document.createElement(\"ul\");\n  about_ul.classList.add(\"about_ul\");\n  const description_li = document.createElement(\"h4\");\n  description_li.innerHTML = `Category - Total Amount of Games`;\n  about_ul.appendChild(description_li);\n  genresFilter.forEach((arr, i) => {\n    let about_li = document.createElement(\"li\");\n    about_li.innerHTML = `<span class=\"order\">${i + 1}</span> - ${arr[0]} : ${arr[1]}`;\n    about_ul.appendChild(about_li);\n  });\n  sideInfo.appendChild(about_ul);\n  handleFilter(genre);\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Category\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n  const filtered = document.getElementById(\"Shooter\");\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      (0,_filteredChart__WEBPACK_IMPORTED_MODULE_1__.filteredChart)(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/lineChart.js\n");

/***/ }),

/***/ "./src/scripts/components/mainPage.js":
/*!********************************************!*\
  !*** ./src/scripts/components/mainPage.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleDataPage\": function() { return /* binding */ handleDataPage; },\n/* harmony export */   \"handlePage\": function() { return /* binding */ handlePage; },\n/* harmony export */   \"renderMainPage\": function() { return /* binding */ renderMainPage; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\nconst renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Level Up Your</h1>\n        <h1> <span>Gaming</span> Knowledge</h1>\n        <h1>Search, Discover and <span>Play</span></h1>\n\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Get the <span>Edge</span></h1>\n        <h1>with Our Comprehensive</h1>\n        <h1> Gaming<span> Data</span> Analysis</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n  scrollToTop();\n};\nfunction handlePage(allData) {\n  \"handlepage\";\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    \"button\";\n    main.innerHTML = \"\";\n    main.style.backgroundColor = \"#0a1929\";\n    main.classList.add(\"card_page\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n      scrollToTop();\n      const button = document.getElementById(game.id);\n      button.addEventListener(\"click\", event => {\n        /// now it needs to fetch the data based on the id\n        fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n            \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n          }\n        }).then(res => res.json()).then(data => {\n          main.innerHTML = \"\";\n          const detail_section = document.createElement(\"div\");\n          detail_section.classList.add(\"d_main\");\n          main.style.backgroundColor = \"#132f4c\";\n          const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n          detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n     <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n          main.appendChild(detail_section);\n          scrollToTop();\n        }).catch(err => console.error(\"error:\" + err));\n      });\n    });\n  });\n}\nfunction handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  const main = document.getElementById(\"main\");\n  main.classList.remove(\"card_page\");\n  dataButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    \"databutton\";\n    // handleFilter(data)\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n    main.classList.add(\"card_page\");\n    // createMultiChart(dispatchGenre(data));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/mainPage.js\n");

/***/ }),

/***/ "./src/scripts/components/modal.js":
/*!*****************************************!*\
  !*** ./src/scripts/components/modal.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderPopup\": function() { return /* binding */ renderPopup; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navbar */ \"./src/scripts/components/navbar.js\");\n\nfunction renderPopup() {\n  const popup = document.getElementById(\"popup\");\n  (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n  popup.classList.add(\"p_show\");\n  popup.innerHTML = `\n    <div class=\"introduction\">\n      <button ><i id=\"b_close\" class=\"fa-solid fa-square-xmark\"></i></button>\n  <div>\n<h1 class=\"welcome\">Welcome to Whale Gaming 🐳</h1>\n\n <p>Our website offers information and data visualization based on the MMOBomb API.</p>\n</div>\n\n<div>\n<h2>Navigation</h2>\n<p>To navigate to different pages, you can use the <span>navbar</span> at the top of the page.</p>\n</div>\n\n<div>\n<h2>Search</h2>\n<p>To search for a specific game, use the <span>search bar</span> at the top of the main page.</p>\n</div>\n\n<div>\n<h2>Game Details</h2>\n<p>To view the details of a specific game, <span>click</span> on its <span>card</span>. This will take you to the game's detail page, where you can read about its description and more.</p>\n</div>\n\n<div>\n<h2>Data Visualization</h2>\n<p>To view the data visualization, navigate to the \"Data Visualization\" page using the <span>navbar (statistics) </span> or from main page by <span>clicking</span> <span>explore</span> button.</p>\n</div>\n\n<div>\n<h2></h2>\n<p>That's it! Now you should be able to explore new games and data on Whale Gaming. Happy gaming!</p>\n</div>\n\n\n</div>\n\n\n    `;\n  const closeButton = document.getElementById(\"b_close\");\n  closeButton.addEventListener(\"click\", event => {\n    if (event.target == closeButton) {\n      popup.style.display = \"none\";\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21vZGFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBRWhDLFNBQVNDLFdBQVdBLENBQUEsRUFBRztFQUM1QixNQUFNQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE9BQU8sQ0FBQztFQUNoREosb0RBQVcsRUFBRTtFQUNYRSxLQUFLLENBQUNHLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsQ0FBQztFQUU3QkosS0FBSyxDQUFDSyxTQUFTLEdBQUk7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0VBRUwsTUFBTUMsV0FBVyxHQUFHTCxRQUFRLENBQUNDLGNBQWMsQ0FBQyxTQUFTLENBQUM7RUFDaERJLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFFL0MsSUFBSUEsS0FBSyxDQUFDQyxNQUFNLElBQUlILFdBQVcsRUFBRTtNQUMvQk4sS0FBSyxDQUFDVSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0lBQzlCO0VBQ0YsQ0FBQyxDQUFDO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbW9kYWwuanM/OTljYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY3JvbGxUb1RvcCB9IGZyb20gXCIuL25hdmJhclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyUG9wdXAoKSB7XG4gIGNvbnN0IHBvcHVwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwb3B1cFwiKTtcbnNjcm9sbFRvVG9wKClcbiAgcG9wdXAuY2xhc3NMaXN0LmFkZChcInBfc2hvd1wiKTtcblxuICBwb3B1cC5pbm5lckhUTUwgPSBgXG4gICAgPGRpdiBjbGFzcz1cImludHJvZHVjdGlvblwiPlxuICAgICAgPGJ1dHRvbiA+PGkgaWQ9XCJiX2Nsb3NlXCIgY2xhc3M9XCJmYS1zb2xpZCBmYS1zcXVhcmUteG1hcmtcIj48L2k+PC9idXR0b24+XG4gIDxkaXY+XG48aDEgY2xhc3M9XCJ3ZWxjb21lXCI+V2VsY29tZSB0byBXaGFsZSBHYW1pbmcg8J+QszwvaDE+XG5cbiA8cD5PdXIgd2Vic2l0ZSBvZmZlcnMgaW5mb3JtYXRpb24gYW5kIGRhdGEgdmlzdWFsaXphdGlvbiBiYXNlZCBvbiB0aGUgTU1PQm9tYiBBUEkuPC9wPlxuPC9kaXY+XG5cbjxkaXY+XG48aDI+TmF2aWdhdGlvbjwvaDI+XG48cD5UbyBuYXZpZ2F0ZSB0byBkaWZmZXJlbnQgcGFnZXMsIHlvdSBjYW4gdXNlIHRoZSA8c3Bhbj5uYXZiYXI8L3NwYW4+IGF0IHRoZSB0b3Agb2YgdGhlIHBhZ2UuPC9wPlxuPC9kaXY+XG5cbjxkaXY+XG48aDI+U2VhcmNoPC9oMj5cbjxwPlRvIHNlYXJjaCBmb3IgYSBzcGVjaWZpYyBnYW1lLCB1c2UgdGhlIDxzcGFuPnNlYXJjaCBiYXI8L3NwYW4+IGF0IHRoZSB0b3Agb2YgdGhlIG1haW4gcGFnZS48L3A+XG48L2Rpdj5cblxuPGRpdj5cbjxoMj5HYW1lIERldGFpbHM8L2gyPlxuPHA+VG8gdmlldyB0aGUgZGV0YWlscyBvZiBhIHNwZWNpZmljIGdhbWUsIDxzcGFuPmNsaWNrPC9zcGFuPiBvbiBpdHMgPHNwYW4+Y2FyZDwvc3Bhbj4uIFRoaXMgd2lsbCB0YWtlIHlvdSB0byB0aGUgZ2FtZSdzIGRldGFpbCBwYWdlLCB3aGVyZSB5b3UgY2FuIHJlYWQgYWJvdXQgaXRzIGRlc2NyaXB0aW9uIGFuZCBtb3JlLjwvcD5cbjwvZGl2PlxuXG48ZGl2PlxuPGgyPkRhdGEgVmlzdWFsaXphdGlvbjwvaDI+XG48cD5UbyB2aWV3IHRoZSBkYXRhIHZpc3VhbGl6YXRpb24sIG5hdmlnYXRlIHRvIHRoZSBcIkRhdGEgVmlzdWFsaXphdGlvblwiIHBhZ2UgdXNpbmcgdGhlIDxzcGFuPm5hdmJhciAoc3RhdGlzdGljcykgPC9zcGFuPiBvciBmcm9tIG1haW4gcGFnZSBieSA8c3Bhbj5jbGlja2luZzwvc3Bhbj4gPHNwYW4+ZXhwbG9yZTwvc3Bhbj4gYnV0dG9uLjwvcD5cbjwvZGl2PlxuXG48ZGl2PlxuPGgyPjwvaDI+XG48cD5UaGF0J3MgaXQhIE5vdyB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gZXhwbG9yZSBuZXcgZ2FtZXMgYW5kIGRhdGEgb24gV2hhbGUgR2FtaW5nLiBIYXBweSBnYW1pbmchPC9wPlxuPC9kaXY+XG5cblxuPC9kaXY+XG5cblxuICAgIGA7XG5cbmNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiX2Nsb3NlXCIpO1xuICAgICAgY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXG4gICAgICAgIGlmIChldmVudC50YXJnZXQgPT0gY2xvc2VCdXR0b24pIHtcbiAgICAgICAgICBwb3B1cC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIH1cbiAgICAgIH0pO1xufVxuXG4iXSwibmFtZXMiOlsic2Nyb2xsVG9Ub3AiLCJyZW5kZXJQb3B1cCIsInBvcHVwIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVySFRNTCIsImNsb3NlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGFyZ2V0Iiwic3R5bGUiLCJkaXNwbGF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/modal.js\n");

/***/ }),

/***/ "./src/scripts/components/navbar.js":
/*!******************************************!*\
  !*** ./src/scripts/components/navbar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleNavbarClick\": function() { return /* binding */ handleNavbarClick; },\n/* harmony export */   \"renderNavbar\": function() { return /* binding */ renderNavbar; },\n/* harmony export */   \"scrollToTop\": function() { return /* binding */ scrollToTop; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\nconst renderNavbar = () => {\n  const navBar = document.getElementById(\"menu\");\n  navBar.innerHTML = `\n    <li id=\"home\"><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\">Home</a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"stat_menu\">Statistics</li>\n    <ul class=\"onlinePresence\">\n       <li id=\"profile_menu\"><a href=\"https://github.com/useNavigate\"><i class=\"fa-brands fa-github\"></i></a>\n       <a href=\"https://www.linkedin.com/in/use-navigate-798165261/\"><i\n            class=\"fa-brands fa-linkedin\"></i></a>\n       </li>\n</ul>\n    `;\n};\nfunction handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\");\n  statMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n  });\n  gameMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.style.backgroundColor = \"#0a1929\";\n    main.innerHTML = \"\";\n    main.classList.add(\"cards\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      main.classList.add(\"card_page\");\n      //rendering cards\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n      scrollToTop();\n      const button = document.getElementById(game.id);\n      button.addEventListener(\"click\", event => {\n        /// now it needs to fetch the data based on the id\n        fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n            \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n          }\n        }).then(res => res.json()).then(data => {\n          main.innerHTML = \"\";\n          const detail_section = document.createElement(\"div\");\n          detail_section.classList.add(\"d_main\");\n          main.style.backgroundColor = \"#132f4c\";\n          const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n          detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n          main.appendChild(detail_section);\n          scrollToTop();\n        }).catch(err => console.error(\"error:\" + err));\n      });\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/navbar.js\n");

/***/ }),

/***/ "./src/scripts/components/search.js":
/*!******************************************!*\
  !*** ./src/scripts/components/search.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSearch\": function() { return /* binding */ handleSearch; },\n/* harmony export */   \"renderSearchBar\": function() { return /* binding */ renderSearchBar; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navbar */ \"./src/scripts/components/navbar.js\");\n\n_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop;\nconst renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement(\"li\");\n  // search.classList.add('search')\n  search.setAttribute(\"id\", \"search\");\n  menu.appendChild(search);\n  search.innerHTML = `\n <input id=\"searchInput\" type=\"text\" placeholder='🔍Search...'>\n `;\n};\nfunction handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", event => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else if (searchTerm === \"\") {\n      main.innerHTML = \"\";\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = `<h1 style=\"color:white;\">Please Type Something to Search!</h1>`;\n    } else if (searchTerm.length < 3) {\n      main.innerHTML = \"\";\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = `<h1 style=\"color:white;\">Search Keywords Need To Be Longer Than 3 Characters</h1>`;\n    } else {\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = \"\";\n      main.innerHTML = `<img src=\"https://cdn.discordapp.com/attachments/952591530626023464/1085403940591501342/404.png\" width=\"600px\">`;\n    }\n  });\n}\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach(game => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    // if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      let id = game.id;\n\n      // (game);\n\n      //       const card = document.createElement(\"div\");\n      //       card.innerHTML = `\n      // <div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      //       <ul class=\"card_info\">\n      //       <li><h1 id =\"game_title\">${game.title}</h1></li>\n      //       <li class=\"genre\">${game.genre}</li>\n      //       <li class=\"description\">${game.short_description}</li>\n      //       </ul>\n      //       </div>\n      //       `;\n      fetch(`https://mmo-games.p.rapidapi.com/game?id=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n          \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n        }\n      }).then(res => res.json()).then(data => {\n        main.innerHTML = \"\";\n        const detail_section = document.createElement(\"div\");\n        detail_section.classList.add(\"d_main\");\n        detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${data.screenshots[0].image}\" alt=\"${data.title} screenshot\">\n\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n        main.appendChild(detail_section);\n        main.style.backgroundColor = \"#132f4c\";\n        (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n      });\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cy9zZWFyY2guanM/M2NkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY3JvbGxUb1RvcCB9IGZyb20gXCIuL25hdmJhclwiO1xuXG5zY3JvbGxUb1RvcDtcbmV4cG9ydCBjb25zdCByZW5kZXJTZWFyY2hCYXIgPSAoKSA9PiB7XG4gIGNvbnN0IG1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnVcIik7XG4gIGNvbnN0IHNlYXJjaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgLy8gc2VhcmNoLmNsYXNzTGlzdC5hZGQoJ3NlYXJjaCcpXG4gIHNlYXJjaC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNlYXJjaFwiKTtcbiAgbWVudS5hcHBlbmRDaGlsZChzZWFyY2gpO1xuICBzZWFyY2guaW5uZXJIVE1MID0gYFxuIDxpbnB1dCBpZD1cInNlYXJjaElucHV0XCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj0n8J+UjVNlYXJjaC4uLic+XG4gYDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVTZWFyY2goZ2FtZXMsIG1haW4pIHtcbiAgY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaElucHV0XCIpO1xuICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBzZWFyY2hUZXJtID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgIGlmIChzZWFyY2hUZXJtLmxlbmd0aCA+IDMpIHtcbiAgICAgIGdldFNlYXJjaFJlc3VsdChnYW1lcywgc2VhcmNoVGVybSwgbWFpbik7XG4gICAgfSBlbHNlIGlmIChzZWFyY2hUZXJtID09PSBcIlwiKSB7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiIzEzMmY0Y1wiO1xuICAgICAgbWFpbi5pbm5lckhUTUwgPSBgPGgxIHN0eWxlPVwiY29sb3I6d2hpdGU7XCI+UGxlYXNlIFR5cGUgU29tZXRoaW5nIHRvIFNlYXJjaCE8L2gxPmA7XG4gICAgfSBlbHNlIGlmIChzZWFyY2hUZXJtLmxlbmd0aCA8IDMpIHtcbiAgICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMTMyZjRjXCI7XG4gICAgICBtYWluLmlubmVySFRNTCA9IGA8aDEgc3R5bGU9XCJjb2xvcjp3aGl0ZTtcIj5TZWFyY2ggS2V5d29yZHMgTmVlZCBUbyBCZSBMb25nZXIgVGhhbiAzIENoYXJhY3RlcnM8L2gxPmA7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMTMyZjRjXCI7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICBtYWluLmlubmVySFRNTCA9IGA8aW1nIHNyYz1cImh0dHBzOi8vY2RuLmRpc2NvcmRhcHAuY29tL2F0dGFjaG1lbnRzLzk1MjU5MTUzMDYyNjAyMzQ2NC8xMDg1NDAzOTQwNTkxNTAxMzQyLzQwNC5wbmdcIiB3aWR0aD1cIjYwMHB4XCI+YDtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRTZWFyY2hSZXN1bHQoZ2FtZXMsIHNlYXJjaFRlcm0sIG1haW4pIHtcbiAgZ2FtZXMuZm9yRWFjaCgoZ2FtZSkgPT4ge1xuICAgIGNvbnN0IGdhbWVUaXRsZSA9IGdhbWUudGl0bGUudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBzZWFyY2hJbnB1dCA9IHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKTtcbiAgICAvLyBpZiAoZ2FtZVRpdGxlWzBdID09PSBzZWFyY2hJbnB1dFswXSAmJiBnYW1lVGl0bGUuaW5jbHVkZXMoc2VhcmNoSW5wdXQpKSB7XG4gICAgaWYgKGdhbWVUaXRsZVswXSA9PT0gc2VhcmNoSW5wdXRbMF0gJiYgZ2FtZVRpdGxlLmluY2x1ZGVzKHNlYXJjaElucHV0KSkge1xuICAgICAgbGV0IGlkID0gZ2FtZS5pZDtcblxuICAgICAgLy8gKGdhbWUpO1xuXG4gICAgICAvLyAgICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIC8vICAgICAgIGNhcmQuaW5uZXJIVE1MID0gYFxuICAgICAgLy8gPGRpdiBjbGFzcz1cImNhcmRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgnJHtnYW1lLnRodW1ibmFpbH0nKTsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcIj5cbiAgICAgIC8vICAgICAgIDx1bCBjbGFzcz1cImNhcmRfaW5mb1wiPlxuICAgICAgLy8gICAgICAgPGxpPjxoMSBpZCA9XCJnYW1lX3RpdGxlXCI+JHtnYW1lLnRpdGxlfTwvaDE+PC9saT5cbiAgICAgIC8vICAgICAgIDxsaSBjbGFzcz1cImdlbnJlXCI+JHtnYW1lLmdlbnJlfTwvbGk+XG4gICAgICAvLyAgICAgICA8bGkgY2xhc3M9XCJkZXNjcmlwdGlvblwiPiR7Z2FtZS5zaG9ydF9kZXNjcmlwdGlvbn08L2xpPlxuICAgICAgLy8gICAgICAgPC91bD5cbiAgICAgIC8vICAgICAgIDwvZGl2PlxuICAgICAgLy8gICAgICAgYDtcbiAgICAgIGZldGNoKGBodHRwczovL21tby1nYW1lcy5wLnJhcGlkYXBpLmNvbS9nYW1lP2lkPSR7aWR9YCwge1xuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIlgtUmFwaWRBUEktS2V5XCI6XG4gICAgICAgICAgICBcIjViYWFlNmRhN2Ftc2g2ZDU2M2NiZjExYWMyYTBwMWQ2ZDU2anNuNDg4NTNhYjUwZDY3XCIsXG4gICAgICAgICAgXCJYLVJhcGlkQVBJLUhvc3RcIjogXCJtbW8tZ2FtZXMucC5yYXBpZGFwaS5jb21cIixcbiAgICAgICAgfSxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG5cbiAgICAgICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgICAgY29uc3QgZGV0YWlsX3NlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgIGRldGFpbF9zZWN0aW9uLmNsYXNzTGlzdC5hZGQoXCJkX21haW5cIik7XG4gICAgICAgICAgZGV0YWlsX3NlY3Rpb24uaW5uZXJIVE1MID0gYFxuXG4gIDxkaXYgY2xhc3M9XCJkX3BpY3R1cmVzXCI+XG4gIDxoMT4ke2RhdGEudGl0bGV9PC9oMT5cbiAgIDxkaXYgY2xhc3M9XCJkX3RodW1ibmFpbFwiICBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgnJHtkYXRhLnRodW1ibmFpbH0nKTsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJkX2luZm9ybWF0aW9uXCI+XG5cbiAgICAgIDx1bCBjbGFzcz1cImRfc3ViXCI+XG4gICAgICAgIDxsaT48aDQ+VGl0bGU8L2g0PjwvbGk+XG4gICAgICAgIDxsaT4ke2RhdGEudGl0bGV9PC9saT5cbiAgICAgICAgPGxpPjxoND5SZWxlYXNlIERhdGU8L2g0PjwvbGk+XG4gICAgICAgIDxsaT4ke2RhdGEucmVsZWFzZV9kYXRlfTwvbGk+XG4gICAgICAgIDxsaT48aDQ+RGV2ZWxvcGVyPC9oND48L2xpPlxuICAgICAgICA8bGk+JHtkYXRhLmRldmVsb3Blcn08L2xpPlxuICAgICAgICA8bGk+PGg0PkdlbnJlPC9oND48L2xpPlxuICAgICAgICA8bGk+JHtkYXRhLmdlbnJlfTwvbGk+XG4gICAgICAgIDxsaT48aDQ+UHVibGlzaGVyPC9oND48L2xpPlxuICAgICAgICA8bGk+JHtkYXRhLnB1Ymxpc2hlcn08L2xpPlxuICAgICAgICA8bGk+PGg0PlBsYXRmb3JtPC9oND48L2xpPlxuICAgICAgICA8bGk+JHtkYXRhLnBsYXRmb3JtfTwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImRfZGV0YWlsc1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImRfc2NyZWVuc2hvdFwiPlxuXG4gICAgPGltZyBzcmM9XCIke2RhdGEuc2NyZWVuc2hvdHNbMF0uaW1hZ2V9XCIgYWx0PVwiJHtkYXRhLnRpdGxlfSBzY3JlZW5zaG90XCI+XG5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJkX2JhclwiPlxuICAgPGgxPkRlc2NyaXB0aW9uPC9oMT5cbiAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJkX2Rlc2NyaXB0aW9uXCI+JHtkYXRhLmRlc2NyaXB0aW9ufSAgIDxhIGlkPVwicGxheVwiIGhyZWY9JHtkYXRhLmdhbWVfdXJsfT5QbGF5IE5vdzwvYT4gPC9kaXY+XG5cblxuXG4gIDwvZGl2PlxuXG4gICAgICAgICAgICBgO1xuICAgICAgICAgIG1haW4uYXBwZW5kQ2hpbGQoZGV0YWlsX3NlY3Rpb24pO1xuICAgICAgICAgIG1haW4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMTMyZjRjXCI7XG4gICAgICAgICAgc2Nyb2xsVG9Ub3AoKTtcbiAgICAgICAgfSk7XG4gICAgfSAvL2Vsc2V7XG4gICAgLy8gICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgLy8gICBtYWluLmlubmVySFRNTCA9IFwiY2FuJ3QgZmluZCBpdCBcIjtcbiAgICAvLyB9XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbInNjcm9sbFRvVG9wIiwicmVuZGVyU2VhcmNoQmFyIiwibWVudSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzZWFyY2giLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJpbm5lckhUTUwiLCJoYW5kbGVTZWFyY2giLCJnYW1lcyIsIm1haW4iLCJzZWFyY2hJbnB1dCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwic2VhcmNoVGVybSIsInRhcmdldCIsInZhbHVlIiwibGVuZ3RoIiwiZ2V0U2VhcmNoUmVzdWx0Iiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJmb3JFYWNoIiwiZ2FtZSIsImdhbWVUaXRsZSIsInRpdGxlIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImlkIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwidGhlbiIsInJlcyIsImpzb24iLCJkYXRhIiwiZGV0YWlsX3NlY3Rpb24iLCJjbGFzc0xpc3QiLCJhZGQiLCJ0aHVtYm5haWwiLCJyZWxlYXNlX2RhdGUiLCJkZXZlbG9wZXIiLCJnZW5yZSIsInB1Ymxpc2hlciIsInBsYXRmb3JtIiwic2NyZWVuc2hvdHMiLCJpbWFnZSIsImRlc2NyaXB0aW9uIiwiZ2FtZV91cmwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/components/search.js\n");

/***/ }),

/***/ "./src/scripts/components/subNavbar.js":
/*!*********************************************!*\
  !*** ./src/scripts/components/subNavbar.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSubNavbar\": function() { return /* binding */ handleSubNavbar; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navbar */ \"./src/scripts/components/navbar.js\");\n\nconst handleSubNavbar = genres => {\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n  const submenu = document.querySelector(\"#submenu\");\n  genreForFilter.forEach(genre => {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `${genre}`;\n    li.setAttribute(\"id\", genre);\n    submenu.appendChild(li);\n    li.addEventListener(\"click\", event => {\n      event.preventDefault();\n      main.style.backgroundColor = \"#0a1929\";\n      main.innerHTML = \"\";\n      main.classList.add(\"cards\");\n      let games = genres[event.target.id];\n      games.forEach(game => {\n        const card = document.createElement(\"div\");\n        main.classList.add(\"card_page\");\n        //rendering cards\n        card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n        main.appendChild(card);\n        (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n        //buttons\n        const button = document.getElementById(game.id);\n        button.addEventListener(\"click\", event => {\n          /// now it needs to fetch the data based on the id\n          fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n            method: \"GET\",\n            headers: {\n              \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n              \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n            }\n          }).then(res => res.json()).then(data => {\n            main.innerHTML = \"\";\n            const detail_section = document.createElement(\"div\");\n            detail_section.classList.add(\"d_main\");\n            main.style.backgroundColor = \"#132f4c\";\n            console.log(data.screenshots);\n            const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n            detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n            main.appendChild(detail_section);\n            (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n          }).catch(err => console.error(\"error:\" + err));\n        });\n      });\n    });\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/subNavbar.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;