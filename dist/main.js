/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/api */ \"./src/scripts/api.js\");\n/* harmony import */ var _scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/components/navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _scripts_components_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/components/search */ \"./src/scripts/components/search.js\");\n/* harmony import */ var _scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/components/mainPage */ \"./src/scripts/components/mainPage.js\");\n/* harmony import */ var _scripts_components_subNavbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/components/subNavbar */ \"./src/scripts/components/subNavbar.js\");\n/* harmony import */ var _scripts_components_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/components/modal */ \"./src/scripts/components/modal.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  (0,_scripts_components_modal__WEBPACK_IMPORTED_MODULE_5__.renderPopup)();\n  (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.renderNavbar)();\n  (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.renderSearchBar)();\n  (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.renderMainPage)();\n  (0,_scripts_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.handleSearch)(allData.allData, main);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handlePage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handleDataPage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.handleNavbarClick)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_subNavbar__WEBPACK_IMPORTED_MODULE_4__.handleSubNavbar)(allData.gamesByGenre);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNzQztBQUNGO0FBS3JDO0FBQzBCO0FBQ1I7QUFFekRVLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNsRCxNQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLE9BQU8sQ0FBQztFQUM1Q0osc0VBQVcsRUFBRTtFQUNiUix3RUFBWSxFQUFFO0VBQ2RFLDJFQUFlLEVBQUU7RUFDakJFLDRFQUFjLEVBQUU7RUFFaEJMLHFEQUFPLEVBQUUsQ0FBQ2MsSUFBSSxDQUFFQyxPQUFPLElBQUs7SUFDMUJYLHdFQUFZLENBQUNXLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFSCxJQUFJLENBQUM7SUFDbkNOLHdFQUFVLENBQUNTLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFQSxPQUFPLENBQUNDLFlBQVksQ0FBQztJQUNqRFQsNEVBQWMsQ0FBQ1EsT0FBTyxDQUFDQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDO0lBQ3JEZCw2RUFBaUIsQ0FBQ2EsT0FBTyxDQUFDQSxPQUFPLEVBQUVBLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDO0lBQ3hEUiw4RUFBZSxDQUFDTyxPQUFPLENBQUNDLFlBQVksQ0FBQztFQUN2QyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZURhdGEgfSBmcm9tIFwiLi9zY3JpcHRzL2FwaVwiO1xuaW1wb3J0IHsgcmVuZGVyTmF2YmFyLCBoYW5kbGVOYXZiYXJDbGljayB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9uYXZiYXJcIjtcbmltcG9ydCB7IHJlbmRlclNlYXJjaEJhciwgaGFuZGxlU2VhcmNoIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaFwiO1xuaW1wb3J0IHtcbiAgcmVuZGVyTWFpblBhZ2UsXG4gIGhhbmRsZVBhZ2UsXG4gIGhhbmRsZURhdGFQYWdlLFxufSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbWFpblBhZ2VcIjtcbmltcG9ydCB7IGhhbmRsZVN1Yk5hdmJhciB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9zdWJOYXZiYXJcIjtcbmltcG9ydCB7IHJlbmRlclBvcHVwIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL21vZGFsXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpblwiKTtcbiAgcmVuZGVyUG9wdXAoKTtcbiAgcmVuZGVyTmF2YmFyKCk7XG4gIHJlbmRlclNlYXJjaEJhcigpO1xuICByZW5kZXJNYWluUGFnZSgpO1xuXG4gIHVzZURhdGEoKS50aGVuKChhbGxEYXRhKSA9PiB7XG4gICAgaGFuZGxlU2VhcmNoKGFsbERhdGEuYWxsRGF0YSwgbWFpbik7XG4gICAgaGFuZGxlUGFnZShhbGxEYXRhLmFsbERhdGEsIGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcbiAgICBoYW5kbGVEYXRhUGFnZShhbGxEYXRhLmFsbERhdGEsIGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcbiAgICBoYW5kbGVOYXZiYXJDbGljayhhbGxEYXRhLmFsbERhdGEsIGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcbiAgICBoYW5kbGVTdWJOYXZiYXIoYWxsRGF0YS5nYW1lc0J5R2VucmUpO1xuICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbInVzZURhdGEiLCJyZW5kZXJOYXZiYXIiLCJoYW5kbGVOYXZiYXJDbGljayIsInJlbmRlclNlYXJjaEJhciIsImhhbmRsZVNlYXJjaCIsInJlbmRlck1haW5QYWdlIiwiaGFuZGxlUGFnZSIsImhhbmRsZURhdGFQYWdlIiwiaGFuZGxlU3ViTmF2YmFyIiwicmVuZGVyUG9wdXAiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtYWluIiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllData\": function() { return /* binding */ getAllData; },\n/* harmony export */   \"useData\": function() { return /* binding */ useData; }\n/* harmony export */ });\nconst games = `https://mmo-games.p.rapidapi.com/games`;\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n  }\n};\nlet allData = null;\nlet gamesByGenre = null;\nlet gamesByReleaseDate = null;\nasync function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n    gamesByGenre = {};\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n    return {\n      allData,\n      gamesByReleaseDate,\n      gamesByGenre\n    };\n  } catch (err) {}\n}\nasync function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenre) {\n    await getAllData(games, options);\n  }\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre\n  };\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUksd0NBQXVDO0FBRXRELE1BQU1DLE9BQU8sR0FBRztFQUNkQyxNQUFNLEVBQUUsS0FBSztFQUNiQyxPQUFPLEVBQUU7SUFDUCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDQyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCLGdCQUFnQixFQUFFLG9EQUFvRDtJQUN0RSxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUM7QUFFRCxJQUFJQyxPQUFPLEdBQUcsSUFBSTtBQUNsQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtBQUN2QixJQUFJQyxrQkFBa0IsR0FBRyxJQUFJO0FBR3RCLGVBQWVDLFVBQVVBLENBQUNDLEdBQUcsRUFBRVIsT0FBTyxFQUFFO0VBQzdDLElBQUk7SUFDRixNQUFNUyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDRixHQUFHLEVBQUVSLE9BQU8sQ0FBQztJQUMxQyxNQUFNRCxLQUFLLEdBQUcsTUFBTVUsUUFBUSxDQUFDRSxJQUFJLEVBQUU7SUFDbkNQLE9BQU8sR0FBR0wsS0FBSztJQUNmTyxrQkFBa0IsR0FBRyxDQUFDLENBQUM7SUFDdkIsS0FBSyxNQUFNTSxJQUFJLElBQUlSLE9BQU8sRUFBRTtNQUMxQixNQUFNUyxZQUFZLEdBQUdELElBQUksQ0FBQ0MsWUFBWTtNQUN0QyxJQUFJLENBQUNQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsRUFBRTtRQUNyQ1Asa0JBQWtCLENBQUNPLFlBQVksQ0FBQyxHQUFHLEVBQUU7TUFDdkM7TUFDQVAsa0JBQWtCLENBQUNPLFlBQVksQ0FBQyxDQUFDQyxJQUFJLENBQUNGLElBQUksQ0FBQztJQUM3QztJQUVBUCxZQUFZLEdBQUcsQ0FBQyxDQUFDO0lBRWpCLEtBQUssTUFBTU8sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVcsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7TUFDeEIsSUFBSSxDQUFDVixZQUFZLENBQUNVLEtBQUssQ0FBQyxFQUFFO1FBQ3hCVixZQUFZLENBQUNVLEtBQUssQ0FBQyxHQUFHLEVBQUU7TUFDMUI7TUFDQVYsWUFBWSxDQUFDVSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDaEM7SUFFQSxPQUFPO01BQUVSLE9BQU87TUFBRUUsa0JBQWtCO01BQUVEO0lBQWEsQ0FBQztFQUN0RCxDQUFDLENBQUMsT0FBT1csR0FBRyxFQUFFLENBQ2Q7QUFDRjtBQUVPLGVBQWVDLE9BQU9BLENBQUEsRUFBRztFQUM5QixJQUFJLENBQUNiLE9BQU8sSUFBSSxDQUFDRSxrQkFBa0IsSUFBSSxDQUFDRCxZQUFZLEVBQUU7SUFDcEQsTUFBTUUsVUFBVSxDQUFDUixLQUFLLEVBQUVDLE9BQU8sQ0FBQztFQUNsQztFQUVBLE1BQU1rQixJQUFJLEdBQUc7SUFDWGQsT0FBTztJQUNQRSxrQkFBa0I7SUFDbEJEO0VBQ0YsQ0FBQztFQUNELE9BQU9hLElBQUk7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvYXBpLmpzP2EzOTciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2FtZXMgPSBgaHR0cHM6Ly9tbW8tZ2FtZXMucC5yYXBpZGFwaS5jb20vZ2FtZXNgO1xuXG5jb25zdCBvcHRpb25zID0ge1xuICBtZXRob2Q6IFwiR0VUXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiWC1SYXBpZEFQSS1LZXlcIjogXCI1YmFhZTZkYTdhbXNoNmQ1NjNjYmYxMWFjMmEwcDFkNmQ1NmpzbjQ4ODUzYWI1MGQ2N1wiLFxuICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IFwibW1vLWdhbWVzLnAucmFwaWRhcGkuY29tXCIsXG4gIH0sXG59O1xuXG5sZXQgYWxsRGF0YSA9IG51bGw7XG5sZXQgZ2FtZXNCeUdlbnJlID0gbnVsbDtcbmxldCBnYW1lc0J5UmVsZWFzZURhdGUgPSBudWxsO1xuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxEYXRhKHVybCwgb3B0aW9ucykge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBvcHRpb25zKTtcbiAgICBjb25zdCBnYW1lcyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBhbGxEYXRhID0gZ2FtZXM7XG4gICAgZ2FtZXNCeVJlbGVhc2VEYXRlID0ge307XG4gICAgZm9yIChjb25zdCBnYW1lIG9mIGFsbERhdGEpIHtcbiAgICAgIGNvbnN0IHJlbGVhc2VfZGF0ZSA9IGdhbWUucmVsZWFzZV9kYXRlO1xuICAgICAgaWYgKCFnYW1lc0J5UmVsZWFzZURhdGVbcmVsZWFzZV9kYXRlXSkge1xuICAgICAgICBnYW1lc0J5UmVsZWFzZURhdGVbcmVsZWFzZV9kYXRlXSA9IFtdO1xuICAgICAgfVxuICAgICAgZ2FtZXNCeVJlbGVhc2VEYXRlW3JlbGVhc2VfZGF0ZV0ucHVzaChnYW1lKTtcbiAgICB9XG5cbiAgICBnYW1lc0J5R2VucmUgPSB7fTtcblxuICAgIGZvciAoY29uc3QgZ2FtZSBvZiBhbGxEYXRhKSB7XG4gICAgICBjb25zdCBnZW5yZSA9IGdhbWUuZ2VucmU7XG4gICAgICBpZiAoIWdhbWVzQnlHZW5yZVtnZW5yZV0pIHtcbiAgICAgICAgZ2FtZXNCeUdlbnJlW2dlbnJlXSA9IFtdO1xuICAgICAgfVxuICAgICAgZ2FtZXNCeUdlbnJlW2dlbnJlXS5wdXNoKGdhbWUpO1xuICAgIH1cblxuICAgIHJldHVybiB7IGFsbERhdGEsIGdhbWVzQnlSZWxlYXNlRGF0ZSwgZ2FtZXNCeUdlbnJlIH07XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1c2VEYXRhKCkge1xuICBpZiAoIWFsbERhdGEgfHwgIWdhbWVzQnlSZWxlYXNlRGF0ZSB8fCAhZ2FtZXNCeUdlbnJlKSB7XG4gICAgYXdhaXQgZ2V0QWxsRGF0YShnYW1lcywgb3B0aW9ucyk7XG4gIH1cblxuICBjb25zdCBkYXRhID0ge1xuICAgIGFsbERhdGEsXG4gICAgZ2FtZXNCeVJlbGVhc2VEYXRlLFxuICAgIGdhbWVzQnlHZW5yZSxcbiAgfTtcbiAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOlsiZ2FtZXMiLCJvcHRpb25zIiwibWV0aG9kIiwiaGVhZGVycyIsIkFjY2VwdCIsImFsbERhdGEiLCJnYW1lc0J5R2VucmUiLCJnYW1lc0J5UmVsZWFzZURhdGUiLCJnZXRBbGxEYXRhIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsImpzb24iLCJnYW1lIiwicmVsZWFzZV9kYXRlIiwicHVzaCIsImdlbnJlIiwiZXJyIiwidXNlRGF0YSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/api.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/filteredChart.js":
/*!*******************************************************!*\
  !*** ./src/scripts/components/chart/filteredChart.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filteredChart\": function() { return /* binding */ filteredChart; }\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api */ \"./src/scripts/api.js\");\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../navbar */ \"./src/scripts/components/navbar.js\");\n\n\nfunction filteredChart(title, data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count,\n      title\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 700,\n    height: 400,\n    color: \"#007fff\",\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  let prev = document.getElementById(\"chart_all\");\n  prev.innerHTML = \"\";\n  let h1 = document.createElement(\"h1\");\n  if (title === \"Card Game\") {\n    h1.innerHTML = `<h1>Number of The Live <span>Card</span> Games Released per Year</h1>`;\n  } else {\n    h1.innerHTML = `<h1>Number of The Live <span>${title}</span> Games Released per Year</h1>`;\n  }\n  (0,_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    handleFilter(allData.gamesByGenre);\n\n    //adding class for main\n    const main = document.getElementById(\"main\");\n    main.classList.add(\"data\");\n  });\n  let p = document.createElement(\"div\");\n  p.innerHTML = ` <p>This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.</p>`;\n  const handleFilter = genres => {\n    const main = document.querySelector(\"#main\");\n    const genreSelect = document.createElement(\"select\");\n    genreSelect.classList.add(\"genre_select\");\n\n    // const sideInfo = document.querySelector(\".chart_sideInfo\");\n    const selectGoesHere = document.querySelector(\".selectGoesHere\");\n    selectGoesHere.appendChild(genreSelect);\n    const selectOption = document.createElement(\"option\");\n    selectOption.setAttribute(\"label\", \"Select Category\");\n    selectOption.setAttribute(\"value\", \"nocap\");\n    selectOption.selected = true;\n    selectOption.disabled = true;\n    genreSelect.appendChild(selectOption);\n    \"coming from linearChart\";\n    //getting name of genres for filtering\n    const genreForFilter = [];\n    Object.keys(genres).forEach(keys => {\n      if (keys !== \" MMORPG\") {\n        genreForFilter.push(keys);\n      }\n    });\n\n    //get the percentage of each genre\n    const genresFilter = genreForFilter.map(key => {\n      return [key, genres[key].length];\n    });\n\n    // (genresFilter);\n\n    //assigning keys to ul\n    genresFilter.forEach((key, i) => {\n      const genreList = document.createElement(\"option\");\n      genreList.setAttribute(\"value\", `${key[0]}`);\n      genreList.setAttribute(\"id\", `${key[0]}`);\n      key[1];\n      genreList.innerHTML = `${key[0]}`;\n      genreSelect.appendChild(genreList);\n    });\n\n    // (filtered)\n    let selectedOption = \"nocap\";\n    genreSelect.addEventListener(\"change\", event => {\n      event.preventDefault();\n      if (event.target.value !== selectedOption) {\n        event.target.value;\n        selectedOption = event.target.value;\n        //creatingChart\n        filteredChart(selectedOption, genres[selectedOption]);\n      }\n\n      //omg finally got it\n      genres[selectedOption];\n    });\n\n    // return genres[selectedOption]\n  };\n\n  // useData().then((allData) => {\n  //   handleFilter(allData.gamesByGenre);\n\n  //   //adding class for main\n  //   const main = document.getElementById(\"main\");\n  //   main.classList.add(\"data\");\n  // });\n\n  prev.appendChild(h1);\n  prev.appendChild(p);\n  prev.appendChild(chart);\n  const about = {\n    Shooter: \"Shooter video games or shooters are a subgenre of action video games where the focus is almost entirely on the defeat of the character's enemies using the weapons given to the player.\",\n    MMORPG: \"(Massively Multiplayer Online Role-Playing Game) is a genre of online game that focuses more on traditional RPG elements, such as character development, questing, and story progression. Players typically create and control their own character in a persistent virtual world and interact with other players to complete quests, explore the world, and engage in player versus player combat. Examples of MMORPGs include World of Warcraft, Final Fantasy XIV, and Guild Wars 2.\",\n    MMOARPG: \"(Massively Multiplayer Online Action Role-Playing Game) is a genre of online game that blends action-oriented gameplay with role-playing elements. Players typically control a single character in a virtual world and engage in real-time combat against enemies, completing quests, and gaining experience points to level up their characters. Examples of MMOARPGs include Diablo, Path of Exile, and Torchlight.\",\n    ARPG: \"(Action Role-Playing Game): A video game genre that combines elements of traditional role-playing games with real-time action combat. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Diablo series, Path of Exile.\",\n    BattleRoyale: \"A genre of online multiplayer video games in which a large number of players (typically 100) fight to be the last person or team standing. Players start with minimal equipment and must scavenge for weapons and items while avoiding a constantly shrinking play area. Example: Fortnite, PUBG.\",\n    Strategy: \"A video game genre that emphasizes tactical and strategic decision-making, resource management, and long-term planning. Players control armies or civilizations, build and manage infrastructure, and engage in combat against opponents. Example: Civilization series, Age of Empires.\",\n    Fighting: \"A genre of video games in which players compete against each other in hand-to-hand combat using a variety of martial arts moves and special attacks. Example: Street Fighter, Mortal Kombat.\",\n    CardGame: \"A genre of video games that involve collectible cards as the primary gameplay element. Players build decks of cards with different abilities and strengths, and then use them to battle against opponents. Example: Hearthstone, Magic: The Gathering Arena.\",\n    ActionRPG: \"A genre of role-playing games that emphasizes real-time combat and fast-paced action. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Dark Souls, Kingdoms of Amalur.\",\n    Racing: \"A video game genre that simulates racing vehicles, either on land, sea, or air. Players compete against each other or against the clock to complete courses or races, trying to get the fastest time or cross the finish line first. Example: Forza Horizon, Need for Speed.\",\n    MOBA: \"(Multiplayer Online Battle Arena): A genre of online multiplayer video games in which players control a single character in a team-based battle against opponents. The goal is to destroy the opposing team's base while protecting their own. Example: League of Legends, Dota 2.\",\n    Sports: \"A video game genre that simulates real-world sports, such as soccer, football, basketball, or tennis. Players control individual athletes or teams, competing against each other to win matches or championships. Example: FIFA, NBA 2K.\",\n    MMOFPS: \"(Massively Multiplayer Online First-Person Shooter): A genre of online multiplayer video games that involve shooting and combat from a first-person perspective in a persistent virtual world. Players engage in battles against other players or non-player characters to gain experience points and advance their characters. Example: Destiny, Warframe.\",\n    MMO: \"(Massively Multiplayer Online): A genre of online multiplayer video games that support a large number of players in a shared virtual world. Players can interact with each other and engage in various activities such as completing quests, exploring the world, or battling enemies. Example: World of Warcraft, Guild Wars 2.\",\n    Social: \"A video game genre that emphasizes social interaction between players. Players can create and customize their avatars, chat with other players, participate in activities, and build relationships. Example: Second Life, The Sims.\",\n    Fantasy: \"sA video game genre that features elements of mythology, magic, and fictional creatures. Players can explore and interact with a virtual world filled with fantastical locations and characters. Example: The Elder Scrolls series, Final Fantasy series.\"\n  };\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n<div  class=\"selectGoesHere\">\n  <h1>what is <span>${title}</span> game?</h1>\n  <p >${about[title.split(\" \").join(\"\")]}</p>\n</div>`;\n  const about_ul = document.createElement(\"ul\");\n  about_ul.classList.add(\"about_ul\");\n  const description_li = document.createElement(\"h4\");\n  description_li.innerHTML = `${title} Game Data Information List`;\n  about_ul.appendChild(description_li);\n  data.forEach((obj, i) => {\n    let about_li = document.createElement(\"li\");\n    about_li.innerHTML = `<span class =\"order\">${i + 1}</span> - ${obj.title} (${obj.release_date})\n  `;\n    about_ul.appendChild(about_li);\n  });\n  sideInfo.appendChild(about_ul);\n  (0,_navbar__WEBPACK_IMPORTED_MODULE_1__.scrollToTop)();\n\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/filteredChart.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/lineChart.js":
/*!***************************************************!*\
  !*** ./src/scripts/components/chart/lineChart.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChart\": function() { return /* binding */ createChart; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _filteredChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filteredChart */ \"./src/scripts/components/chart/filteredChart.js\");\n\n\nfunction createChart(data, genre) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 700,\n    height: 400,\n    color: \"#007fff\",\n    //seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n\n  const MAIN = document.getElementById('main');\n  MAIN.style.backgroundColor = \"#e2edf8\";\n  const main = document.createElement('div');\n  main.setAttribute('id', 'white_bg');\n  MAIN.append(main);\n  main.classList.add(\"data\");\n  let h1 = document.createElement(\"h1\");\n  let mainChart = document.createElement(\"div\");\n  h1.innerHTML = `Number of <span>All</span> The Live Games Released per Year`;\n  let p = document.createElement(\"div\");\n  p.innerHTML = `<p> This graph displays the number of games released per year, with the\n  y-axis representing the total number of games and the x-axis\n  representing the year of release. The graph provides a visual\n  representation of the trend of game releases over time and can be used\n  to identify any patterns or changes in the industry.</p>`;\n  mainChart.setAttribute(\"id\", \"chart_all\");\n  document.getElementById(\"main\").appendChild(mainChart);\n  mainChart.appendChild(h1);\n  mainChart.appendChild(p);\n  // description.appendChild(chartDiv);\n  mainChart.appendChild(chart);\n\n  //aside dom\n  let sideInfo = document.createElement(\"div\");\n  sideInfo.classList.add(\"chart_sideInfo\");\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n  <div class=\"selectGoesHere\">\n  <h1>What is the <span>future</span> of the <span>gaming industry</span>??</h1>\n  <p>Gaming is now a bigger industry than movies and sports combined. Revenue for gaming reached $184 billion in 2022, and the number of gamers is expected to grow to 3.6 billion by 2025. It's not just kids either: 38 percent of gamers are between the ages of 18 and 34 years, and 16 percent are older than 55.</p>\n  </div>`;\n  main.appendChild(mainChart);\n  main.appendChild(sideInfo);\n  (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n  const genreForFilter = [];\n  Object.keys(genre).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genre[key].length];\n  });\n  handleFilter(genre);\n  const about_ul = document.createElement(\"ul\");\n  about_ul.classList.add(\"about_ul\");\n  const description_li = document.createElement(\"h4\");\n  description_li.innerHTML = `Category - Total Amount of Games`;\n  about_ul.appendChild(description_li);\n  genresFilter.forEach((arr, i) => {\n    let about_li = document.createElement(\"li\");\n    about_li.innerHTML = `<span class=\"order\">${i + 1}</span> - ${arr[0]} : ${arr[1]}`;\n    about_ul.appendChild(about_li);\n  });\n  sideInfo.appendChild(about_ul);\n\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Category\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n  const filtered = document.getElementById(\"Shooter\");\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      (0,_filteredChart__WEBPACK_IMPORTED_MODULE_1__.filteredChart)(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/lineChart.js\n");

/***/ }),

/***/ "./src/scripts/components/mainPage.js":
/*!********************************************!*\
  !*** ./src/scripts/components/mainPage.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleDataPage\": function() { return /* binding */ handleDataPage; },\n/* harmony export */   \"handlePage\": function() { return /* binding */ handlePage; },\n/* harmony export */   \"renderMainPage\": function() { return /* binding */ renderMainPage; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\nconst renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Level Up Your</h1>\n        <h1> <span>Gaming</span> Knowledge</h1>\n        <h1>Search, Discover and <span>Play</span></h1>\n\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Get the <span>Edge</span></h1>\n        <h1>with Our Comprehensive</h1>\n        <h1> Gaming<span> Data</span> Analysis</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n  scrollToTop();\n};\nfunction handlePage(allData) {\n  \"handlepage\";\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    \"button\";\n    main.innerHTML = \"\";\n    main.style.backgroundColor = \"#0a1929\";\n    main.classList.add(\"card_page\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n      scrollToTop();\n      const button = document.getElementById(game.id);\n      button.addEventListener(\"click\", event => {\n        /// now it needs to fetch the data based on the id\n        fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n            \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n          }\n        }).then(res => res.json()).then(data => {\n          main.innerHTML = \"\";\n          const detail_section = document.createElement(\"div\");\n          detail_section.classList.add(\"d_main\");\n          main.style.backgroundColor = \"#132f4c\";\n          const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n          detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n     <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n          main.appendChild(detail_section);\n          scrollToTop();\n        }).catch(err => console.error(\"error:\" + err));\n      });\n    });\n  });\n}\nfunction handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  const main = document.getElementById(\"main\");\n  main.classList.remove(\"card_page\");\n  dataButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    \"databutton\";\n    // handleFilter(data)\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n    main.classList.add(\"card_page\");\n    // createMultiChart(dispatchGenre(data));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/mainPage.js\n");

/***/ }),

/***/ "./src/scripts/components/modal.js":
/*!*****************************************!*\
  !*** ./src/scripts/components/modal.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderPopup\": function() { return /* binding */ renderPopup; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navbar */ \"./src/scripts/components/navbar.js\");\n\nfunction renderPopup() {\n  const popup = document.getElementById(\"popup\");\n  (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n  popup.classList.add(\"p_show\");\n  popup.innerHTML = `\n    <div class=\"introduction\">\n      <button ><i id=\"b_close\" class=\"fa-solid fa-square-xmark\"></i></button>\n  <div>\n<h1 class=\"welcome\">Welcome to Whale Gaming 🐳</h1>\n\n <p>Our website offers information and data visualization based on the MMOBomb API.</p>\n</div>\n\n<div>\n<h2>Navigation</h2>\n<p>To navigate to different pages, you can use the <span>navbar</span> at the top of the page.</p>\n</div>\n\n<div>\n<h2>Search</h2>\n<p>To search for a specific game, use the <span>search bar</span> at the top of the main page.</p>\n</div>\n\n<div>\n<h2>Game Details</h2>\n<p>To view the details of a specific game, <span>click</span> on its <span>card</span>. This will take you to the game's detail page, where you can read about its description and more.</p>\n</div>\n\n<div>\n<h2>Data Visualization</h2>\n<p>To view the data visualization, navigate to the \"Data Visualization\" page using the <span>navbar (statistics) </span> or from main page by <span>clicking</span> <span>explore</span> button.</p>\n</div>\n\n<div>\n<h2></h2>\n<p>That's it! Now you should be able to explore new games and data on Whale Gaming. Happy gaming!</p>\n</div>\n\n\n</div>\n\n\n    `;\n  const closeButton = document.getElementById(\"b_close\");\n  closeButton.addEventListener(\"click\", event => {\n    if (event.target == closeButton) {\n      popup.style.display = \"none\";\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21vZGFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBRWhDLFNBQVNDLFdBQVdBLENBQUEsRUFBRztFQUM1QixNQUFNQyxLQUFLLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE9BQU8sQ0FBQztFQUNoREosb0RBQVcsRUFBRTtFQUNYRSxLQUFLLENBQUNHLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsQ0FBQztFQUU3QkosS0FBSyxDQUFDSyxTQUFTLEdBQUk7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0VBRUwsTUFBTUMsV0FBVyxHQUFHTCxRQUFRLENBQUNDLGNBQWMsQ0FBQyxTQUFTLENBQUM7RUFDaERJLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFFL0MsSUFBSUEsS0FBSyxDQUFDQyxNQUFNLElBQUlILFdBQVcsRUFBRTtNQUMvQk4sS0FBSyxDQUFDVSxLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO0lBQzlCO0VBQ0YsQ0FBQyxDQUFDO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbW9kYWwuanM/OTljYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY3JvbGxUb1RvcCB9IGZyb20gXCIuL25hdmJhclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyUG9wdXAoKSB7XG4gIGNvbnN0IHBvcHVwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwb3B1cFwiKTtcbnNjcm9sbFRvVG9wKClcbiAgcG9wdXAuY2xhc3NMaXN0LmFkZChcInBfc2hvd1wiKTtcblxuICBwb3B1cC5pbm5lckhUTUwgPSBgXG4gICAgPGRpdiBjbGFzcz1cImludHJvZHVjdGlvblwiPlxuICAgICAgPGJ1dHRvbiA+PGkgaWQ9XCJiX2Nsb3NlXCIgY2xhc3M9XCJmYS1zb2xpZCBmYS1zcXVhcmUteG1hcmtcIj48L2k+PC9idXR0b24+XG4gIDxkaXY+XG48aDEgY2xhc3M9XCJ3ZWxjb21lXCI+V2VsY29tZSB0byBXaGFsZSBHYW1pbmcg8J+QszwvaDE+XG5cbiA8cD5PdXIgd2Vic2l0ZSBvZmZlcnMgaW5mb3JtYXRpb24gYW5kIGRhdGEgdmlzdWFsaXphdGlvbiBiYXNlZCBvbiB0aGUgTU1PQm9tYiBBUEkuPC9wPlxuPC9kaXY+XG5cbjxkaXY+XG48aDI+TmF2aWdhdGlvbjwvaDI+XG48cD5UbyBuYXZpZ2F0ZSB0byBkaWZmZXJlbnQgcGFnZXMsIHlvdSBjYW4gdXNlIHRoZSA8c3Bhbj5uYXZiYXI8L3NwYW4+IGF0IHRoZSB0b3Agb2YgdGhlIHBhZ2UuPC9wPlxuPC9kaXY+XG5cbjxkaXY+XG48aDI+U2VhcmNoPC9oMj5cbjxwPlRvIHNlYXJjaCBmb3IgYSBzcGVjaWZpYyBnYW1lLCB1c2UgdGhlIDxzcGFuPnNlYXJjaCBiYXI8L3NwYW4+IGF0IHRoZSB0b3Agb2YgdGhlIG1haW4gcGFnZS48L3A+XG48L2Rpdj5cblxuPGRpdj5cbjxoMj5HYW1lIERldGFpbHM8L2gyPlxuPHA+VG8gdmlldyB0aGUgZGV0YWlscyBvZiBhIHNwZWNpZmljIGdhbWUsIDxzcGFuPmNsaWNrPC9zcGFuPiBvbiBpdHMgPHNwYW4+Y2FyZDwvc3Bhbj4uIFRoaXMgd2lsbCB0YWtlIHlvdSB0byB0aGUgZ2FtZSdzIGRldGFpbCBwYWdlLCB3aGVyZSB5b3UgY2FuIHJlYWQgYWJvdXQgaXRzIGRlc2NyaXB0aW9uIGFuZCBtb3JlLjwvcD5cbjwvZGl2PlxuXG48ZGl2PlxuPGgyPkRhdGEgVmlzdWFsaXphdGlvbjwvaDI+XG48cD5UbyB2aWV3IHRoZSBkYXRhIHZpc3VhbGl6YXRpb24sIG5hdmlnYXRlIHRvIHRoZSBcIkRhdGEgVmlzdWFsaXphdGlvblwiIHBhZ2UgdXNpbmcgdGhlIDxzcGFuPm5hdmJhciAoc3RhdGlzdGljcykgPC9zcGFuPiBvciBmcm9tIG1haW4gcGFnZSBieSA8c3Bhbj5jbGlja2luZzwvc3Bhbj4gPHNwYW4+ZXhwbG9yZTwvc3Bhbj4gYnV0dG9uLjwvcD5cbjwvZGl2PlxuXG48ZGl2PlxuPGgyPjwvaDI+XG48cD5UaGF0J3MgaXQhIE5vdyB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gZXhwbG9yZSBuZXcgZ2FtZXMgYW5kIGRhdGEgb24gV2hhbGUgR2FtaW5nLiBIYXBweSBnYW1pbmchPC9wPlxuPC9kaXY+XG5cblxuPC9kaXY+XG5cblxuICAgIGA7XG5cbmNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiX2Nsb3NlXCIpO1xuICAgICAgY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXG4gICAgICAgIGlmIChldmVudC50YXJnZXQgPT0gY2xvc2VCdXR0b24pIHtcbiAgICAgICAgICBwb3B1cC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIH1cbiAgICAgIH0pO1xufVxuXG4iXSwibmFtZXMiOlsic2Nyb2xsVG9Ub3AiLCJyZW5kZXJQb3B1cCIsInBvcHVwIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVySFRNTCIsImNsb3NlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGFyZ2V0Iiwic3R5bGUiLCJkaXNwbGF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/modal.js\n");

/***/ }),

/***/ "./src/scripts/components/navbar.js":
/*!******************************************!*\
  !*** ./src/scripts/components/navbar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleNavbarClick\": function() { return /* binding */ handleNavbarClick; },\n/* harmony export */   \"renderNavbar\": function() { return /* binding */ renderNavbar; },\n/* harmony export */   \"scrollToTop\": function() { return /* binding */ scrollToTop; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n}\nconst renderNavbar = () => {\n  const navBar = document.getElementById(\"menu\");\n  navBar.innerHTML = `\n    <li id=\"home\"><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\">Home</a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"stat_menu\">Statistics</li>\n    <ul class=\"onlinePresence\">\n       <li id=\"profile_menu\"><a href=\"https://github.com/useNavigate\"><i class=\"fa-brands fa-github\"></i></a>\n       <a href=\"https://www.linkedin.com/in/sara-ryu-798165261/\">\n       <i\n            class=\"fa-brands fa-linkedin\"></i></a>\n       </li>\n</ul>\n    `;\n};\nfunction handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\");\n  statMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n  });\n  gameMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.style.backgroundColor = \"#0a1929\";\n    main.innerHTML = \"\";\n    main.classList.add(\"cards\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      main.classList.add(\"card_page\");\n      //rendering cards\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n      scrollToTop();\n      const button = document.getElementById(game.id);\n      button.addEventListener(\"click\", event => {\n        /// now it needs to fetch the data based on the id\n        fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n            \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n          }\n        }).then(res => res.json()).then(data => {\n          main.innerHTML = \"\";\n          const detail_section = document.createElement(\"div\");\n          detail_section.classList.add(\"d_main\");\n          main.style.backgroundColor = \"#132f4c\";\n          const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n          detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n          main.appendChild(detail_section);\n          scrollToTop();\n        }).catch(err => console.error(\"error:\" + err));\n      });\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0lBQ0osQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvbmF2YmFyLmpzP2I0Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2hhcnQgfSBmcm9tIFwiLi9jaGFydC9saW5lQ2hhcnRcIjtcbmV4cG9ydCBmdW5jdGlvbiBzY3JvbGxUb1RvcCgpIHtcbiAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiAwLCBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KTtcbn1cbmV4cG9ydCBjb25zdCByZW5kZXJOYXZiYXIgPSAoKSA9PiB7XG4gIGNvbnN0IG5hdkJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudVwiKTtcbiAgbmF2QmFyLmlubmVySFRNTCA9IGBcbiAgICA8bGkgaWQ9XCJob21lXCI+PGEgaHJlZj1cImh0dHBzOi8vdXNlbmF2aWdhdGUuZ2l0aHViLmlvL1doYWxlX0dhbWluZ19KYXZhc2NyaXB0X1Byb2plY3QvXCI+SG9tZTwvYT48L2xpPlxuICAgIDxsaSBpZD1cImdhbWVfbWVudVwiPkdhbWVzPC9saT5cbiAgICA8bGkgaWQ9XCJzdGF0X21lbnVcIj5TdGF0aXN0aWNzPC9saT5cbiAgICA8dWwgY2xhc3M9XCJvbmxpbmVQcmVzZW5jZVwiPlxuICAgICAgIDxsaSBpZD1cInByb2ZpbGVfbWVudVwiPjxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdXNlTmF2aWdhdGVcIj48aSBjbGFzcz1cImZhLWJyYW5kcyBmYS1naXRodWJcIj48L2k+PC9hPlxuICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vc2FyYS1yeXUtNzk4MTY1MjYxL1wiPlxuICAgICAgIDxpXG4gICAgICAgICAgICBjbGFzcz1cImZhLWJyYW5kcyBmYS1saW5rZWRpblwiPjwvaT48L2E+XG4gICAgICAgPC9saT5cbjwvdWw+XG4gICAgYDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVOYXZiYXJDbGljayhhbGxEYXRhLCBkYXRhKSB7XG4gIGNvbnN0IGdhbWVNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNnYW1lX21lbnVcIik7XG4gIGNvbnN0IHN0YXRNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzdGF0X21lbnVcIik7XG4gIHN0YXRNZW51LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICBjcmVhdGVDaGFydChhbGxEYXRhLCBkYXRhKTtcbiAgfSk7XG5cbiAgZ2FtZU1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgbWFpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiMwYTE5MjlcIjtcbiAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgbWFpbi5jbGFzc0xpc3QuYWRkKFwiY2FyZHNcIik7XG4gICAgYWxsRGF0YS5mb3JFYWNoKChnYW1lKSA9PiB7XG4gICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIG1haW4uY2xhc3NMaXN0LmFkZChcImNhcmRfcGFnZVwiKTtcbiAgICAgIC8vcmVuZGVyaW5nIGNhcmRzXG4gICAgICBjYXJkLmlubmVySFRNTCA9IGBcbjxkaXYgY2xhc3M9XCJjYXJkXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7Z2FtZS50aHVtYm5haWx9Jyk7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7XCI+XG4gICAgICA8dWwgIGNsYXNzPVwiY2FyZF9pbmZvXCI+XG4gICAgICA8bGk+PGgxIGlkID1cImdhbWVfdGl0bGVcIj4ke2dhbWUudGl0bGV9PC9oMT48L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZ2VucmVcIj4ke2dhbWUuZ2VucmV9PC9saT5cblxuICAgICAgPGJ1dHRvbiBpZD1cIiR7Z2FtZS5pZH1cIiBjbGFzcz1cIm1vcmVcIj5MZWFybiBNb3JlPC9idXR0b24+XG4gICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgICAgbWFpbi5hcHBlbmRDaGlsZChjYXJkKTtcbiAgICAgIHNjcm9sbFRvVG9wKCk7XG4gICAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChnYW1lLmlkKTtcbiAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG5cbiAgICAgICAgLy8vIG5vdyBpdCBuZWVkcyB0byBmZXRjaCB0aGUgZGF0YSBiYXNlZCBvbiB0aGUgaWRcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vbW1vLWdhbWVzLnAucmFwaWRhcGkuY29tL2dhbWU/aWQ9JHtldmVudC50YXJnZXQuaWR9YCwge1xuICAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIlgtUmFwaWRBUEktS2V5XCI6XG4gICAgICAgICAgICAgIFwiNWJhYWU2ZGE3YW1zaDZkNTYzY2JmMTFhYzJhMHAxZDZkNTZqc240ODg1M2FiNTBkNjdcIixcbiAgICAgICAgICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IFwibW1vLWdhbWVzLnAucmFwaWRhcGkuY29tXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgICAgICAudGhlbigocmVzKSA9PiByZXMuanNvbigpKVxuICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG5cbiAgICAgICAgICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIGNvbnN0IGRldGFpbF9zZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGRldGFpbF9zZWN0aW9uLmNsYXNzTGlzdC5hZGQoXCJkX21haW5cIik7XG4gICAgICAgICAgICBtYWluLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiIzEzMmY0Y1wiO1xuICAgICAgICAgICBjb25zdCBpbWFnZSA9XG4gICAgICAgICAgICAgZGF0YS5zY3JlZW5zaG90cy5sZW5ndGggIT09IDBcbiAgICAgICAgICAgICAgID8gW2RhdGEuc2NyZWVuc2hvdHNbMF0uaW1hZ2VdXG4gICAgICAgICAgICAgICA6IFtcbiAgICAgICAgICAgICAgICAgICBcImh0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS82NDB4MzYwP3RleHQ9Tm8raW1hZ2UrYXZhaWxhYmxlXCIsXG4gICAgICAgICAgICAgICAgIF07XG5cbiAgICAgICAgICAgIGRldGFpbF9zZWN0aW9uLmlubmVySFRNTCA9IGBcblxuICA8ZGl2IGNsYXNzPVwiZF9waWN0dXJlc1wiPlxuICA8aDE+JHtkYXRhLnRpdGxlfTwvaDE+XG4gICA8ZGl2IGNsYXNzPVwiZF90aHVtYm5haWxcIiAgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7ZGF0YS50aHVtYm5haWx9Jyk7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7XCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiZF9pbmZvcm1hdGlvblwiPlxuXG4gICAgICA8dWwgY2xhc3M9XCJkX3N1YlwiPlxuICAgICAgICA8bGk+PGg0PlRpdGxlPC9oND48L2xpPlxuICAgICAgICA8bGk+JHtkYXRhLnRpdGxlfTwvbGk+XG4gICAgICAgIDxsaT48aDQ+UmVsZWFzZSBEYXRlPC9oND48L2xpPlxuICAgICAgICA8bGk+JHtkYXRhLnJlbGVhc2VfZGF0ZX08L2xpPlxuICAgICAgICA8bGk+PGg0PkRldmVsb3BlcjwvaDQ+PC9saT5cbiAgICAgICAgPGxpPiR7ZGF0YS5kZXZlbG9wZXJ9PC9saT5cbiAgICAgICAgPGxpPjxoND5HZW5yZTwvaDQ+PC9saT5cbiAgICAgICAgPGxpPiR7ZGF0YS5nZW5yZX08L2xpPlxuICAgICAgICA8bGk+PGg0PlB1Ymxpc2hlcjwvaDQ+PC9saT5cbiAgICAgICAgPGxpPiR7ZGF0YS5wdWJsaXNoZXJ9PC9saT5cbiAgICAgICAgPGxpPjxoND5QbGF0Zm9ybTwvaDQ+PC9saT5cbiAgICAgICAgPGxpPiR7ZGF0YS5wbGF0Zm9ybX08L2xpPlxuICAgICAgPC91bD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJkX2RldGFpbHNcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJkX3NjcmVlbnNob3RcIj5cblxuICAgIDxpbWcgc3JjPVwiJHtpbWFnZVswXX1cIiBhbHQ9XCIke2RhdGEudGl0bGV9IHNjcmVlbnNob3RcIj5cblxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cImRfYmFyXCI+XG4gICA8aDE+RGVzY3JpcHRpb248L2gxPlxuICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImRfZGVzY3JpcHRpb25cIj4ke2RhdGEuZGVzY3JpcHRpb259ICAgPGEgaWQ9XCJwbGF5XCIgaHJlZj0ke2RhdGEuZ2FtZV91cmx9PlBsYXkgTm93PC9hPiA8L2Rpdj5cblxuXG5cbiAgPC9kaXY+XG5cbiAgICAgICAgICAgIGA7XG4gICAgICAgICAgICBtYWluLmFwcGVuZENoaWxkKGRldGFpbF9zZWN0aW9uKTtcbiAgICAgICAgICAgIHNjcm9sbFRvVG9wKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihcImVycm9yOlwiICsgZXJyKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2hhcnQiLCJzY3JvbGxUb1RvcCIsIndpbmRvdyIsInNjcm9sbFRvIiwidG9wIiwiYmVoYXZpb3IiLCJyZW5kZXJOYXZiYXIiLCJuYXZCYXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwiaGFuZGxlTmF2YmFyQ2xpY2siLCJhbGxEYXRhIiwiZGF0YSIsImdhbWVNZW51IiwicXVlcnlTZWxlY3RvciIsInN0YXRNZW51IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJtYWluIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjbGFzc0xpc3QiLCJhZGQiLCJmb3JFYWNoIiwiZ2FtZSIsImNhcmQiLCJjcmVhdGVFbGVtZW50IiwidGh1bWJuYWlsIiwidGl0bGUiLCJnZW5yZSIsImlkIiwiYXBwZW5kQ2hpbGQiLCJidXR0b24iLCJmZXRjaCIsInRhcmdldCIsIm1ldGhvZCIsImhlYWRlcnMiLCJ0aGVuIiwicmVzIiwianNvbiIsImRldGFpbF9zZWN0aW9uIiwiaW1hZ2UiLCJzY3JlZW5zaG90cyIsImxlbmd0aCIsInJlbGVhc2VfZGF0ZSIsImRldmVsb3BlciIsInB1Ymxpc2hlciIsInBsYXRmb3JtIiwiZGVzY3JpcHRpb24iLCJnYW1lX3VybCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/navbar.js\n");

/***/ }),

/***/ "./src/scripts/components/search.js":
/*!******************************************!*\
  !*** ./src/scripts/components/search.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSearch\": function() { return /* binding */ handleSearch; },\n/* harmony export */   \"renderSearchBar\": function() { return /* binding */ renderSearchBar; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navbar */ \"./src/scripts/components/navbar.js\");\n\n_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop;\nconst renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement(\"li\");\n  // search.classList.add('search')\n  search.setAttribute(\"id\", \"search\");\n  menu.appendChild(search);\n  search.innerHTML = `\n <input id=\"searchInput\" type=\"text\" placeholder='🔍Search...'>\n `;\n};\nfunction handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", event => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else if (searchTerm === \"\") {\n      main.innerHTML = \"\";\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = `<h1 style=\"color:white;\">Please Type Something to Search!</h1>`;\n    } else if (searchTerm.length < 3) {\n      main.innerHTML = \"\";\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = `<h1 style=\"color:white;\">Search Keywords Need To Be Longer Than 3 Characters</h1>`;\n    } else {\n      main.style.backgroundColor = \"#132f4c\";\n      main.innerHTML = \"\";\n      main.innerHTML = `<img src=\"https://cdn.discordapp.com/attachments/952591530626023464/1085403940591501342/404.png\" width=\"600px\">`;\n    }\n  });\n}\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach(game => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    // if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      let id = game.id;\n\n      // (game);\n\n      //       const card = document.createElement(\"div\");\n      //       card.innerHTML = `\n      // <div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      //       <ul class=\"card_info\">\n      //       <li><h1 id =\"game_title\">${game.title}</h1></li>\n      //       <li class=\"genre\">${game.genre}</li>\n      //       <li class=\"description\">${game.short_description}</li>\n      //       </ul>\n      //       </div>\n      //       `;\n      fetch(`https://mmo-games.p.rapidapi.com/game?id=${id}`, {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n          \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n        }\n      }).then(res => res.json()).then(data => {\n        main.innerHTML = \"\";\n        const detail_section = document.createElement(\"div\");\n        detail_section.classList.add(\"d_main\");\n        const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n        detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n        main.appendChild(detail_section);\n        main.style.backgroundColor = \"#132f4c\";\n        (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n      });\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/search.js\n");

/***/ }),

/***/ "./src/scripts/components/subNavbar.js":
/*!*********************************************!*\
  !*** ./src/scripts/components/subNavbar.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSubNavbar\": function() { return /* binding */ handleSubNavbar; }\n/* harmony export */ });\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./navbar */ \"./src/scripts/components/navbar.js\");\n\nconst handleSubNavbar = genres => {\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n  const submenu = document.querySelector(\"#submenu\");\n  genreForFilter.forEach(genre => {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `${genre}`;\n    li.setAttribute(\"id\", genre);\n    submenu.appendChild(li);\n    li.addEventListener(\"click\", event => {\n      event.preventDefault();\n      main.style.backgroundColor = \"#0a1929\";\n      main.innerHTML = \"\";\n      main.classList.add(\"cards\");\n      let games = genres[event.target.id];\n      games.forEach(game => {\n        const card = document.createElement(\"div\");\n        main.classList.add(\"card_page\");\n        //rendering cards\n        card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul  class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n\n      <button id=\"${game.id}\" class=\"more\">Learn More</button>\n      </ul>\n      </div>\n      `;\n        main.appendChild(card);\n        (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n        //buttons\n        const button = document.getElementById(game.id);\n        button.addEventListener(\"click\", event => {\n          /// now it needs to fetch the data based on the id\n          fetch(`https://mmo-games.p.rapidapi.com/game?id=${event.target.id}`, {\n            method: \"GET\",\n            headers: {\n              \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n              \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n            }\n          }).then(res => res.json()).then(data => {\n            main.innerHTML = \"\";\n            const detail_section = document.createElement(\"div\");\n            detail_section.classList.add(\"d_main\");\n            main.style.backgroundColor = \"#132f4c\";\n            const image = data.screenshots.length !== 0 ? [data.screenshots[0].image] : [\"https://via.placeholder.com/640x360?text=No+image+available\"];\n            detail_section.innerHTML = `\n\n  <div class=\"d_pictures\">\n  <h1>${data.title}</h1>\n   <div class=\"d_thumbnail\"  style=\"background-image: url('${data.thumbnail}'); background-size: cover;\"></div>\n      <div class=\"d_information\">\n\n      <ul class=\"d_sub\">\n        <li><h4>Title</h4></li>\n        <li>${data.title}</li>\n        <li><h4>Release Date</h4></li>\n        <li>${data.release_date}</li>\n        <li><h4>Developer</h4></li>\n        <li>${data.developer}</li>\n        <li><h4>Genre</h4></li>\n        <li>${data.genre}</li>\n        <li><h4>Publisher</h4></li>\n        <li>${data.publisher}</li>\n        <li><h4>Platform</h4></li>\n        <li>${data.platform}</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"d_details\">\n      <div class=\"d_screenshot\">\n\n    <img src=\"${image[0]}\" alt=\"${data.title} screenshot\">\n    </div>\n\n    <div class=\"d_bar\">\n   <h1>Description</h1>\n   </div>\n    <div class=\"d_description\">${data.description}   <a id=\"play\" href=${data.game_url}>Play Now</a> </div>\n\n\n\n  </div>\n\n            `;\n            main.appendChild(detail_section);\n            (0,_navbar__WEBPACK_IMPORTED_MODULE_0__.scrollToTop)();\n          }).catch(err => console.error(\"error:\" + err));\n        });\n      });\n    });\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/components/subNavbar.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;