/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/api */ \"./src/scripts/api.js\");\n/* harmony import */ var _scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/components/navbar */ \"./src/scripts/components/navbar.js\");\n/* harmony import */ var _scripts_components_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/components/search */ \"./src/scripts/components/search.js\");\n/* harmony import */ var _scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/components/mainPage */ \"./src/scripts/components/mainPage.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.querySelector(\"#main\");\n  \"Hello world!\";\n  (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.renderNavbar)();\n  (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.renderSearchBar)();\n  (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.renderMainPage)();\n  (0,_scripts_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    // handleFilter(allData.gamesByGenre)\n    (0,_scripts_components_search__WEBPACK_IMPORTED_MODULE_2__.handleSearch)(allData.allData, main);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handlePage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_mainPage__WEBPACK_IMPORTED_MODULE_3__.handleDataPage)(allData.allData, allData.gamesByGenre);\n    (0,_scripts_components_navbar__WEBPACK_IMPORTED_MODULE_1__.handleNavbarClick)(allData.allData, allData.gamesByGenre);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDc0M7QUFDRjtBQUNiO0FBQ0o7QUFDSTtBQUkvRFEsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBQ2xELE1BQU1DLElBQUksR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzNDLGNBQWM7RUFDZlYsd0VBQVksRUFBRTtFQUNkRSwyRUFBZSxFQUFFO0VBQ2pCRSw0RUFBYyxFQUFFO0VBR2hCTCxxREFBTyxFQUFFLENBQUNZLElBQUksQ0FBRUMsT0FBTyxJQUFLO0lBQzFCO0lBQ0FULHdFQUFZLENBQUNTLE9BQU8sQ0FBQ0EsT0FBTyxFQUFFSCxJQUFJLENBQUM7SUFDbkNKLHdFQUFVLENBQUNPLE9BQU8sQ0FBQ0EsT0FBTyxFQUFDQSxPQUFPLENBQUNDLFlBQVksQ0FBQztJQUNoRFAsNEVBQWMsQ0FBQ00sT0FBTyxDQUFDQSxPQUFPLEVBQUNBLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDO0lBQ3BEWiw2RUFBaUIsQ0FBQ1csT0FBTyxDQUFDQSxPQUFPLEVBQUNBLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDO0VBSXpELENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRGF0YSB9IGZyb20gXCIuL3NjcmlwdHMvYXBpXCI7XG5pbXBvcnQgeyByZW5kZXJOYXZiYXIsIGhhbmRsZU5hdmJhckNsaWNrIH0gZnJvbSBcIi4vc2NyaXB0cy9jb21wb25lbnRzL25hdmJhclwiO1xuaW1wb3J0IHsgcmVuZGVyU2VhcmNoQmFyLCBoYW5kbGVTZWFyY2ggfSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvc2VhcmNoXCI7XG5pbXBvcnQgeyByZW5kZXJNYWluUGFnZSB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9tYWluUGFnZVwiO1xuaW1wb3J0IHsgaGFuZGxlUGFnZSB9IGZyb20gXCIuL3NjcmlwdHMvY29tcG9uZW50cy9tYWluUGFnZVwiO1xuaW1wb3J0IHsgaGFuZGxlRGF0YVBhZ2UgfSBmcm9tIFwiLi9zY3JpcHRzL2NvbXBvbmVudHMvbWFpblBhZ2VcIjtcblxuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpblwiKTtcbiAgKFwiSGVsbG8gd29ybGQhXCIpO1xuICByZW5kZXJOYXZiYXIoKTtcbiAgcmVuZGVyU2VhcmNoQmFyKCk7XG4gIHJlbmRlck1haW5QYWdlKClcblxuXG4gIHVzZURhdGEoKS50aGVuKChhbGxEYXRhKSA9PiB7XG4gICAgLy8gaGFuZGxlRmlsdGVyKGFsbERhdGEuZ2FtZXNCeUdlbnJlKVxuICAgIGhhbmRsZVNlYXJjaChhbGxEYXRhLmFsbERhdGEsIG1haW4pO1xuICAgIGhhbmRsZVBhZ2UoYWxsRGF0YS5hbGxEYXRhLGFsbERhdGEuZ2FtZXNCeUdlbnJlKVxuICAgIGhhbmRsZURhdGFQYWdlKGFsbERhdGEuYWxsRGF0YSxhbGxEYXRhLmdhbWVzQnlHZW5yZSlcbiAgICBoYW5kbGVOYXZiYXJDbGljayhhbGxEYXRhLmFsbERhdGEsYWxsRGF0YS5nYW1lc0J5R2VucmUpXG5cblxuXG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOlsidXNlRGF0YSIsInJlbmRlck5hdmJhciIsImhhbmRsZU5hdmJhckNsaWNrIiwicmVuZGVyU2VhcmNoQmFyIiwiaGFuZGxlU2VhcmNoIiwicmVuZGVyTWFpblBhZ2UiLCJoYW5kbGVQYWdlIiwiaGFuZGxlRGF0YVBhZ2UiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtYWluIiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJhbGxEYXRhIiwiZ2FtZXNCeUdlbnJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllData\": function() { return /* binding */ getAllData; },\n/* harmony export */   \"useData\": function() { return /* binding */ useData; }\n/* harmony export */ });\nconst games = `https://mmo-games.p.rapidapi.com/games`;\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"X-RapidAPI-Key\": \"5baae6da7amsh6d563cbf11ac2a0p1d6d56jsn48853ab50d67\",\n    \"X-RapidAPI-Host\": \"mmo-games.p.rapidapi.com\"\n  }\n};\nlet allData = null;\nlet gamesByGenre = null;\n// let gamesByPlatform = null;\n// let gamesByPublisher = null;\nlet gamesByReleaseDate = null;\nasync function getAllData(url, options) {\n  try {\n    const response = await fetch(url, options);\n    const games = await response.json();\n    allData = games;\n    gamesByReleaseDate = {};\n    for (const game of allData) {\n      const release_date = game.release_date;\n      if (!gamesByReleaseDate[release_date]) {\n        gamesByReleaseDate[release_date] = [];\n      }\n      gamesByReleaseDate[release_date].push(game);\n    }\n    gamesByGenre = {};\n    for (const game of allData) {\n      const genre = game.genre;\n      if (!gamesByGenre[genre]) {\n        gamesByGenre[genre] = [];\n      }\n      gamesByGenre[genre].push(game);\n    }\n    return {\n      allData,\n      gamesByReleaseDate,\n      gamesByGenre\n    }; // it actually needs to return the promise value that has these data i want\n  } catch (err) {\n    console.error(\"error:\" + err);\n  }\n}\n\n/*\n  this function returns data so i don't have to fetch every single time\n  this will only fetch if data is not there also it helps me to get out from call back\n  & chain hell that i was stuck for long time... 😭\n\n  and exporting this because exporting allData and gamesByGenre are useless... it still going to be undefined and its 'promise value'\n  so its better to export this function that actually returns the data i need\n*/\nasync function useData() {\n  if (!allData || !gamesByReleaseDate || !gamesByGenre) {\n    /* this is way to get out from call back hell and also we do not need to fetch EVERY SINGLE TIME*/\n    await getAllData(games, options);\n  }\n  const data = {\n    allData,\n    gamesByReleaseDate,\n    gamesByGenre\n  };\n  return data;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLLEdBQUksd0NBQXVDO0FBQ3RELE1BQU1DLE9BQU8sR0FBRztFQUNkQyxNQUFNLEVBQUUsS0FBSztFQUNiQyxPQUFPLEVBQUU7SUFDUCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDQyxNQUFNLEVBQUUsa0JBQWtCO0lBQzFCLGdCQUFnQixFQUFFLG9EQUFvRDtJQUN0RSxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUM7QUFFRCxJQUFJQyxPQUFPLEdBQUcsSUFBSTtBQUNsQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtBQUN2QjtBQUNBO0FBQ0EsSUFBSUMsa0JBQWtCLEdBQUcsSUFBSTtBQUd0QixlQUFlQyxVQUFVQSxDQUFDQyxHQUFHLEVBQUVSLE9BQU8sRUFBRTtFQUM3QyxJQUFJO0lBQ0YsTUFBTVMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsR0FBRyxFQUFFUixPQUFPLENBQUM7SUFDMUMsTUFBTUQsS0FBSyxHQUFHLE1BQU1VLFFBQVEsQ0FBQ0UsSUFBSSxFQUFFO0lBQ25DUCxPQUFPLEdBQUdMLEtBQUs7SUFDZk8sa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLEtBQUssTUFBTU0sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVMsWUFBWSxHQUFHRCxJQUFJLENBQUNDLFlBQVk7TUFDdEMsSUFBSSxDQUFDUCxrQkFBa0IsQ0FBQ08sWUFBWSxDQUFDLEVBQUU7UUFDckNQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsR0FBRyxFQUFFO01BQ3ZDO01BQ0FQLGtCQUFrQixDQUFDTyxZQUFZLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDN0M7SUFFQVAsWUFBWSxHQUFDLENBQUMsQ0FBQztJQUVmLEtBQUssTUFBTU8sSUFBSSxJQUFJUixPQUFPLEVBQUU7TUFDMUIsTUFBTVcsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7TUFDeEIsSUFBSSxDQUFDVixZQUFZLENBQUNVLEtBQUssQ0FBQyxFQUFFO1FBQ3hCVixZQUFZLENBQUNVLEtBQUssQ0FBQyxHQUFHLEVBQUU7TUFDMUI7TUFDQVYsWUFBWSxDQUFDVSxLQUFLLENBQUMsQ0FBQ0QsSUFBSSxDQUFDRixJQUFJLENBQUM7SUFDaEM7SUFFQSxPQUFPO01BQUVSLE9BQU87TUFBRUUsa0JBQWtCO01BQUVEO0lBQWEsQ0FBQyxDQUFDLENBQUM7RUFDeEQsQ0FBQyxDQUFDLE9BQU9XLEdBQUcsRUFBRTtJQUNaQyxPQUFPLENBQUNDLEtBQUssQ0FBQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQztFQUMvQjtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxlQUFlRyxPQUFPQSxDQUFBLEVBQUc7RUFFOUIsSUFBSSxDQUFDZixPQUFPLElBQUksQ0FBQ0Usa0JBQWtCLElBQUksQ0FBQ0QsWUFBWSxFQUFFO0lBQ3BEO0lBQ0EsTUFBTUUsVUFBVSxDQUFDUixLQUFLLEVBQUVDLE9BQU8sQ0FBQztFQUNsQztFQUVBLE1BQU1vQixJQUFJLEdBQUc7SUFDWGhCLE9BQU87SUFDUEUsa0JBQWtCO0lBQ3RCRDtFQUNFLENBQUM7RUFDRCxPQUFPZSxJQUFJO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2FwaS5qcz9hMzk3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdhbWVzID0gYGh0dHBzOi8vbW1vLWdhbWVzLnAucmFwaWRhcGkuY29tL2dhbWVzYDtcbmNvbnN0IG9wdGlvbnMgPSB7XG4gIG1ldGhvZDogXCJHRVRcIixcbiAgaGVhZGVyczoge1xuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgXCJYLVJhcGlkQVBJLUtleVwiOiBcIjViYWFlNmRhN2Ftc2g2ZDU2M2NiZjExYWMyYTBwMWQ2ZDU2anNuNDg4NTNhYjUwZDY3XCIsXG4gICAgXCJYLVJhcGlkQVBJLUhvc3RcIjogXCJtbW8tZ2FtZXMucC5yYXBpZGFwaS5jb21cIixcbiAgfSxcbn07XG5cbmxldCBhbGxEYXRhID0gbnVsbDtcbmxldCBnYW1lc0J5R2VucmUgPSBudWxsO1xuLy8gbGV0IGdhbWVzQnlQbGF0Zm9ybSA9IG51bGw7XG4vLyBsZXQgZ2FtZXNCeVB1Ymxpc2hlciA9IG51bGw7XG5sZXQgZ2FtZXNCeVJlbGVhc2VEYXRlID0gbnVsbDtcblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsRGF0YSh1cmwsIG9wdGlvbnMpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgb3B0aW9ucyk7XG4gICAgY29uc3QgZ2FtZXMgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgYWxsRGF0YSA9IGdhbWVzO1xuICAgIGdhbWVzQnlSZWxlYXNlRGF0ZSA9IHt9O1xuICAgIGZvciAoY29uc3QgZ2FtZSBvZiBhbGxEYXRhKSB7XG4gICAgICBjb25zdCByZWxlYXNlX2RhdGUgPSBnYW1lLnJlbGVhc2VfZGF0ZTtcbiAgICAgIGlmICghZ2FtZXNCeVJlbGVhc2VEYXRlW3JlbGVhc2VfZGF0ZV0pIHtcbiAgICAgICAgZ2FtZXNCeVJlbGVhc2VEYXRlW3JlbGVhc2VfZGF0ZV0gPSBbXTtcbiAgICAgIH1cbiAgICAgIGdhbWVzQnlSZWxlYXNlRGF0ZVtyZWxlYXNlX2RhdGVdLnB1c2goZ2FtZSk7XG4gICAgfVxuXG4gICAgZ2FtZXNCeUdlbnJlPXt9XG5cbiAgICBmb3IgKGNvbnN0IGdhbWUgb2YgYWxsRGF0YSkge1xuICAgICAgY29uc3QgZ2VucmUgPSBnYW1lLmdlbnJlO1xuICAgICAgaWYgKCFnYW1lc0J5R2VucmVbZ2VucmVdKSB7XG4gICAgICAgIGdhbWVzQnlHZW5yZVtnZW5yZV0gPSBbXTtcbiAgICAgIH1cbiAgICAgIGdhbWVzQnlHZW5yZVtnZW5yZV0ucHVzaChnYW1lKTtcbiAgICB9XG5cbiAgICByZXR1cm4geyBhbGxEYXRhLCBnYW1lc0J5UmVsZWFzZURhdGUsIGdhbWVzQnlHZW5yZSB9OyAvLyBpdCBhY3R1YWxseSBuZWVkcyB0byByZXR1cm4gdGhlIHByb21pc2UgdmFsdWUgdGhhdCBoYXMgdGhlc2UgZGF0YSBpIHdhbnRcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihcImVycm9yOlwiICsgZXJyKTtcbiAgfVxufVxuXG4vKlxuICB0aGlzIGZ1bmN0aW9uIHJldHVybnMgZGF0YSBzbyBpIGRvbid0IGhhdmUgdG8gZmV0Y2ggZXZlcnkgc2luZ2xlIHRpbWVcbiAgdGhpcyB3aWxsIG9ubHkgZmV0Y2ggaWYgZGF0YSBpcyBub3QgdGhlcmUgYWxzbyBpdCBoZWxwcyBtZSB0byBnZXQgb3V0IGZyb20gY2FsbCBiYWNrXG4gICYgY2hhaW4gaGVsbCB0aGF0IGkgd2FzIHN0dWNrIGZvciBsb25nIHRpbWUuLi4g8J+YrVxuXG4gIGFuZCBleHBvcnRpbmcgdGhpcyBiZWNhdXNlIGV4cG9ydGluZyBhbGxEYXRhIGFuZCBnYW1lc0J5R2VucmUgYXJlIHVzZWxlc3MuLi4gaXQgc3RpbGwgZ29pbmcgdG8gYmUgdW5kZWZpbmVkIGFuZCBpdHMgJ3Byb21pc2UgdmFsdWUnXG4gIHNvIGl0cyBiZXR0ZXIgdG8gZXhwb3J0IHRoaXMgZnVuY3Rpb24gdGhhdCBhY3R1YWxseSByZXR1cm5zIHRoZSBkYXRhIGkgbmVlZFxuKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1c2VEYXRhKCkge1xuXG4gIGlmICghYWxsRGF0YSB8fCAhZ2FtZXNCeVJlbGVhc2VEYXRlIHx8ICFnYW1lc0J5R2VucmUpIHtcbiAgICAvKiB0aGlzIGlzIHdheSB0byBnZXQgb3V0IGZyb20gY2FsbCBiYWNrIGhlbGwgYW5kIGFsc28gd2UgZG8gbm90IG5lZWQgdG8gZmV0Y2ggRVZFUlkgU0lOR0xFIFRJTUUqL1xuICAgIGF3YWl0IGdldEFsbERhdGEoZ2FtZXMsIG9wdGlvbnMpO1xuICB9XG5cbiAgY29uc3QgZGF0YSA9IHtcbiAgICBhbGxEYXRhLFxuICAgIGdhbWVzQnlSZWxlYXNlRGF0ZSxcbmdhbWVzQnlHZW5yZVxuICB9O1xuICByZXR1cm4gZGF0YTtcbn1cblxuXG5cbiJdLCJuYW1lcyI6WyJnYW1lcyIsIm9wdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0IiwiYWxsRGF0YSIsImdhbWVzQnlHZW5yZSIsImdhbWVzQnlSZWxlYXNlRGF0ZSIsImdldEFsbERhdGEiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwianNvbiIsImdhbWUiLCJyZWxlYXNlX2RhdGUiLCJwdXNoIiwiZ2VucmUiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJ1c2VEYXRhIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/api.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/filteredChart.js":
/*!*******************************************************!*\
  !*** ./src/scripts/components/chart/filteredChart.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filteredChart\": function() { return /* binding */ filteredChart; }\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api */ \"./src/scripts/api.js\");\n\nfunction filteredChart(title, data) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count,\n      title\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 400,\n    height: 400,\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  let prev = document.getElementById(\"chart_all\");\n  prev.innerHTML = \"\";\n  let h1 = document.createElement(\"h1\");\n  h1.innerHTML = `<h1>Number of The Live ${title} Games Released per Year</h1>`;\n  let p = document.createElement(\"p\");\n  p.innerHTML = ` This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.`;\n  prev.appendChild(h1);\n  prev.appendChild(p);\n  prev.appendChild(chart);\n  (0,_api__WEBPACK_IMPORTED_MODULE_0__.useData)().then(allData => {\n    handleFilter(allData.gamesByGenre);\n  });\n  const about = {\n    Shooter: \"Shooter video games or shooters are a subgenre of action video games where the focus is almost entirely on the defeat of the character's enemies using the weapons given to the player.\",\n    MMORPG: \"(Massively Multiplayer Online Role-Playing Game) is a genre of online game that focuses more on traditional RPG elements, such as character development, questing, and story progression. Players typically create and control their own character in a persistent virtual world and interact with other players to complete quests, explore the world, and engage in player versus player combat. Examples of MMORPGs include World of Warcraft, Final Fantasy XIV, and Guild Wars 2.\",\n    MMOARPG: \"(Massively Multiplayer Online Action Role-Playing Game) is a genre of online game that blends action-oriented gameplay with role-playing elements. Players typically control a single character in a virtual world and engage in real-time combat against enemies, completing quests, and gaining experience points to level up their characters. Examples of MMOARPGs include Diablo, Path of Exile, and Torchlight.\",\n    ARPG: \"(Action Role-Playing Game): A video game genre that combines elements of traditional role-playing games with real-time action combat. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Diablo series, Path of Exile.\",\n    BattleRoyale: \"A genre of online multiplayer video games in which a large number of players (typically 100) fight to be the last person or team standing. Players start with minimal equipment and must scavenge for weapons and items while avoiding a constantly shrinking play area. Example: Fortnite, PUBG.\",\n    Strategy: \"A video game genre that emphasizes tactical and strategic decision-making, resource management, and long-term planning. Players control armies or civilizations, build and manage infrastructure, and engage in combat against opponents. Example: Civilization series, Age of Empires.\",\n    Fighting: \"A genre of video games in which players compete against each other in hand-to-hand combat using a variety of martial arts moves and special attacks. Example: Street Fighter, Mortal Kombat.\",\n    CardGame: \"A genre of video games that involve collectible cards as the primary gameplay element. Players build decks of cards with different abilities and strengths, and then use them to battle against opponents. Example: Hearthstone, Magic: The Gathering Arena.\",\n    ActionRPG: \"A genre of role-playing games that emphasizes real-time combat and fast-paced action. Players control a character in a fantasy world, battling enemies and gaining experience points to level up and acquire new skills and equipment. Example: Dark Souls, Kingdoms of Amalur.\",\n    Racing: \"A video game genre that simulates racing vehicles, either on land, sea, or air. Players compete against each other or against the clock to complete courses or races, trying to get the fastest time or cross the finish line first. Example: Forza Horizon, Need for Speed.\",\n    MOBA: \"(Multiplayer Online Battle Arena): A genre of online multiplayer video games in which players control a single character in a team-based battle against opponents. The goal is to destroy the opposing team's base while protecting their own. Example: League of Legends, Dota 2.\",\n    Sports: \"A video game genre that simulates real-world sports, such as soccer, football, basketball, or tennis. Players control individual athletes or teams, competing against each other to win matches or championships. Example: FIFA, NBA 2K.\",\n    MMOFPS: \"(Massively Multiplayer Online First-Person Shooter): A genre of online multiplayer video games that involve shooting and combat from a first-person perspective in a persistent virtual world. Players engage in battles against other players or non-player characters to gain experience points and advance their characters. Example: Destiny, Warframe.\",\n    MMO: \"(Massively Multiplayer Online): A genre of online multiplayer video games that support a large number of players in a shared virtual world. Players can interact with each other and engage in various activities such as completing quests, exploring the world, or battling enemies. Example: World of Warcraft, Guild Wars 2.\",\n    Social: \"A video game genre that emphasizes social interaction between players. Players can create and customize their avatars, chat with other players, participate in activities, and build relationships. Example: Second Life, The Sims.\",\n    Fantasy: \"sA video game genre that features elements of mythology, magic, and fictional creatures. Players can explore and interact with a virtual world filled with fantastical locations and characters. Example: The Elder Scrolls series, Final Fantasy series.\"\n  };\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  console.log(title);\n  sideInfo.innerHTML = \"\";\n  sideInfo.innerHTML = `\n<div>\n  <h1>what is <span>${title}</span>?</h1>\n  <p>${about[title.split(\" \").join(\"\")]}</p>\n</div>`;\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Options\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n  const filtered = document.getElementById(\"Shooter\");\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      filteredChart(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2NoYXJ0L2ZpbHRlcmVkQ2hhcnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFHN0IsU0FBU0MsYUFBYUEsQ0FBQ0MsS0FBSyxFQUFDQyxJQUFJLEVBQUU7RUFDeEM7RUFDQSxNQUFNQyxLQUFLLEdBQUdELElBQUksQ0FDZkUsTUFBTSxDQUFFQyxDQUFDLElBQUtBLENBQUMsQ0FBQ0MsWUFBWSxLQUFLLE1BQU0sQ0FBQyxDQUFDO0VBQUEsQ0FDekNDLEdBQUcsQ0FBRUYsQ0FBQyxJQUFLO0lBQ1YsTUFBTUcsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0wsQ0FBQyxDQUFDQyxZQUFZLENBQUMsQ0FBQztJQUFBLEVBQ3BDLElBQUlHLElBQUksQ0FBQ0osQ0FBQyxDQUFDQyxZQUFZLENBQUMsQ0FBQ0ssV0FBVyxFQUFFLEdBQ3RDLElBQUk7SUFDUixPQUFPO01BQUVDLFlBQVksRUFBRUo7SUFBSyxDQUFDO0VBQy9CLENBQUMsQ0FBQzs7RUFFSjtFQUNBLE1BQU1LLE1BQU0sR0FBR1YsS0FBSyxDQUFDVyxNQUFNLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEtBQUs7SUFDekMsSUFBSUEsSUFBSSxDQUFDSixZQUFZLEtBQUssSUFBSSxFQUFFO01BQzlCLElBQUksQ0FBQ0csR0FBRyxDQUFDQyxJQUFJLENBQUNKLFlBQVksQ0FBQyxFQUFFO1FBQzNCRyxHQUFHLENBQUNDLElBQUksQ0FBQ0osWUFBWSxDQUFDLEdBQUcsQ0FBQztNQUM1QjtNQUNBRyxHQUFHLENBQUNDLElBQUksQ0FBQ0osWUFBWSxDQUFDLEVBQUU7SUFDMUI7SUFDQSxPQUFPRyxHQUFHO0VBQ1osQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDOztFQUVOO0VBQ0EsTUFBTUUsS0FBSyxHQUFHQyxTQUFTO0VBQ3JCO0VBQ0E7RUFDQUMsTUFBTSxDQUFDQyxPQUFPLENBQUNQLE1BQU0sQ0FBQyxDQUFDTixHQUFHLENBQUNjLElBQUE7SUFB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QTtJQUNDakIsTUFBTSxDQUFDaUIsY0FBYyxDQUFDO0VBQ3pCLENBQUMsQ0FBQzs7RUFFRjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvY2hhcnQvZmlsdGVyZWRDaGFydC5qcz9kODUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZURhdGEgfSBmcm9tIFwiLi4vLi4vYXBpXCI7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlcmVkQ2hhcnQodGl0bGUsZGF0YSkge1xuICAvLyBFeHRyYWN0IHRoZSByZWxlYXNlIHllYXIgZnJvbSBlYWNoIGdhbWUgYW5kIGNyZWF0ZSBhbiBhcnJheSBvZiBvYmplY3RzXG4gIGNvbnN0IGdhbWVzID0gZGF0YVxuICAgIC5maWx0ZXIoKGQpID0+IGQucmVsZWFzZV9kYXRlICE9PSBcIjAwMDBcIikgLy8gZXhjbHVkZSBnYW1lcyB3aXRoIHJlbGVhc2UgeWVhciBvZiBcIjAwMDBcIlxuICAgIC5tYXAoKGQpID0+IHtcbiAgICAgIGNvbnN0IHllYXIgPSBEYXRlLnBhcnNlKGQucmVsZWFzZV9kYXRlKSAvL2lmIGl0cyBub3QgcGFyc2FibGUgdGhhdCBtZWFucyBpdHMgMDAwMCBvbmVcbiAgICAgICAgPyBuZXcgRGF0ZShkLnJlbGVhc2VfZGF0ZSkuZ2V0RnVsbFllYXIoKVxuICAgICAgICA6IG51bGw7XG4gICAgICByZXR1cm4geyByZWxlYXNlX3llYXI6IHllYXIgfTtcbiAgICB9KTtcblxuICAvLyBDb3VudCB0aGUgbnVtYmVyIG9mIGdhbWVzIHJlbGVhc2VkIGluIGVhY2ggeWVhclxuICBjb25zdCB0b3RhbHMgPSBnYW1lcy5yZWR1Y2UoKGFjYywgZ2FtZSkgPT4ge1xuICAgIGlmIChnYW1lLnJlbGVhc2VfeWVhciAhPT0gbnVsbCkge1xuICAgICAgaWYgKCFhY2NbZ2FtZS5yZWxlYXNlX3llYXJdKSB7XG4gICAgICAgIGFjY1tnYW1lLnJlbGVhc2VfeWVhcl0gPSAwO1xuICAgICAgfVxuICAgICAgYWNjW2dhbWUucmVsZWFzZV95ZWFyXSsrO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgLy8gQ3JlYXRlIGEgbGluZSBjaGFydCB1c2luZyBEM1xuICBjb25zdCBjaGFydCA9IExpbmVDaGFydChcbiAgICAvL2NvbnZlcnRzIHRoZSB0b3RhbHMgb2JqZWN0IGludG8gYW4gYXJyYXkgb2Yga2V5LXZhbHVlIHBhaXJzIGJlY2F1c2UgaSBmZXRjaGVkIHRoZSBhcGkgYW5kIHJlc3BvbnNlLmpzb24oKVxuICAgIC8vIG5lZWRzIHRvIGNvbnZlcnQgdGhpcyBiZWNhdXNlIGQzIG9ubHkgdGFrZXMgY3ZzIGRhdGEgd2hpY2ggaXMgc2FtZSBhcyB0ZXh0L2pzb25cbiAgICBPYmplY3QuZW50cmllcyh0b3RhbHMpLm1hcCgoW3llYXIsIGNvdW50LCB0aXRsZV0pID0+ICh7XG4gICAgICB5ZWFyOiBuZXcgRGF0ZSh5ZWFyLCAwKSxcbiAgICAgIGNvdW50LFxuICAgICAgdGl0bGUsXG4gICAgfSkpLFxuICAgIHtcbiAgICAgIHg6IChkKSA9PiBkLnllYXIsXG4gICAgICB5OiAoZCkgPT4gZC5jb3VudCxcbiAgICAgIHo6IChkKSA9PiBkLnRpdGxlLFxuICAgICAgeUxhYmVsOiBcIk51bWJlciBvZiBnYW1lc1wiLFxuICAgICAgeExhYmVsOiBcIlJlbGVhc2VkIFllYXJcIixcbiAgICAgIHdpZHRoOiA0MDAsXG4gICAgICBoZWlnaHQ6IDQwMCxcbiAgICAgIC8vIGNvbG9yOiBcInJlZFwiLCBzZWVtcyBsaWtlIHRoaXMgbGluZSBjYW4gb3ZlcndyaXRlcyB0aGUgY29sb3JzXG4gICAgICAvLyBzcGVjaWZ5IHRoZSB0aWNrIGZvcm1hdCBmb3IgdGhlIHgtYXhpc1xuICAgICAgeEF4aXNGb3JtYXQ6IGQzLnRpbWVGb3JtYXQoXCIlWVwiKSxcbiAgICB9XG4gICk7XG5cbiAgLy8gQXBwZW5kIHRoZSBjaGFydCB0byB0aGUgRE9NXG5sZXQgcHJldiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhcnRfYWxsXCIpXG5wcmV2LmlubmVySFRNTD1cIlwiXG5sZXQgaDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG5cblxuXG4gIGgxLmlubmVySFRNTCA9IGA8aDE+TnVtYmVyIG9mIFRoZSBMaXZlICR7dGl0bGV9IEdhbWVzIFJlbGVhc2VkIHBlciBZZWFyPC9oMT5gO1xuXG4gIGxldCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHAuaW5uZXJIVE1MID0gYCBUaGlzIGdyYXBoIGRpc3BsYXlzIHRoZSBudW1iZXIgb2YgZ2FtZXMgcmVsZWFzZWQgcGVyIHllYXIsIHdpdGggdGhlXG4gICAgICAgIHktYXhpcyByZXByZXNlbnRpbmcgdGhlIHRvdGFsIG51bWJlciBvZiBnYW1lcyBhbmQgdGhlIHgtYXhpc1xuICAgICAgICByZXByZXNlbnRpbmcgdGhlIHllYXIgb2YgcmVsZWFzZS4gVGhlIGdyYXBoIHByb3ZpZGVzIGEgdmlzdWFsXG4gICAgICAgIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB0cmVuZCBvZiBnYW1lIHJlbGVhc2VzIG92ZXIgdGltZSBhbmQgY2FuIGJlIHVzZWRcbiAgICAgICAgdG8gaWRlbnRpZnkgYW55IHBhdHRlcm5zIG9yIGNoYW5nZXMgaW4gdGhlIGluZHVzdHJ5LmA7XG5cbnByZXYuYXBwZW5kQ2hpbGQoaDEpXG5wcmV2LmFwcGVuZENoaWxkKHApXG5wcmV2LmFwcGVuZENoaWxkKGNoYXJ0KVxuXG51c2VEYXRhKCkudGhlbigoYWxsRGF0YSk9PntcbiAgaGFuZGxlRmlsdGVyKGFsbERhdGEuZ2FtZXNCeUdlbnJlKTtcblxufSlcblxuXG5jb25zdCBhYm91dCA9IHtcbiAgU2hvb3RlcjpcbiAgICBcIlNob290ZXIgdmlkZW8gZ2FtZXMgb3Igc2hvb3RlcnMgYXJlIGEgc3ViZ2VucmUgb2YgYWN0aW9uIHZpZGVvIGdhbWVzIHdoZXJlIHRoZSBmb2N1cyBpcyBhbG1vc3QgZW50aXJlbHkgb24gdGhlIGRlZmVhdCBvZiB0aGUgY2hhcmFjdGVyJ3MgZW5lbWllcyB1c2luZyB0aGUgd2VhcG9ucyBnaXZlbiB0byB0aGUgcGxheWVyLlwiLFxuICBNTU9SUEc6XG4gICAgXCIoTWFzc2l2ZWx5IE11bHRpcGxheWVyIE9ubGluZSBSb2xlLVBsYXlpbmcgR2FtZSkgaXMgYSBnZW5yZSBvZiBvbmxpbmUgZ2FtZSB0aGF0IGZvY3VzZXMgbW9yZSBvbiB0cmFkaXRpb25hbCBSUEcgZWxlbWVudHMsIHN1Y2ggYXMgY2hhcmFjdGVyIGRldmVsb3BtZW50LCBxdWVzdGluZywgYW5kIHN0b3J5IHByb2dyZXNzaW9uLiBQbGF5ZXJzIHR5cGljYWxseSBjcmVhdGUgYW5kIGNvbnRyb2wgdGhlaXIgb3duIGNoYXJhY3RlciBpbiBhIHBlcnNpc3RlbnQgdmlydHVhbCB3b3JsZCBhbmQgaW50ZXJhY3Qgd2l0aCBvdGhlciBwbGF5ZXJzIHRvIGNvbXBsZXRlIHF1ZXN0cywgZXhwbG9yZSB0aGUgd29ybGQsIGFuZCBlbmdhZ2UgaW4gcGxheWVyIHZlcnN1cyBwbGF5ZXIgY29tYmF0LiBFeGFtcGxlcyBvZiBNTU9SUEdzIGluY2x1ZGUgV29ybGQgb2YgV2FyY3JhZnQsIEZpbmFsIEZhbnRhc3kgWElWLCBhbmQgR3VpbGQgV2FycyAyLlwiLFxuICBNTU9BUlBHOlxuICAgIFwiKE1hc3NpdmVseSBNdWx0aXBsYXllciBPbmxpbmUgQWN0aW9uIFJvbGUtUGxheWluZyBHYW1lKSBpcyBhIGdlbnJlIG9mIG9ubGluZSBnYW1lIHRoYXQgYmxlbmRzIGFjdGlvbi1vcmllbnRlZCBnYW1lcGxheSB3aXRoIHJvbGUtcGxheWluZyBlbGVtZW50cy4gUGxheWVycyB0eXBpY2FsbHkgY29udHJvbCBhIHNpbmdsZSBjaGFyYWN0ZXIgaW4gYSB2aXJ0dWFsIHdvcmxkIGFuZCBlbmdhZ2UgaW4gcmVhbC10aW1lIGNvbWJhdCBhZ2FpbnN0IGVuZW1pZXMsIGNvbXBsZXRpbmcgcXVlc3RzLCBhbmQgZ2FpbmluZyBleHBlcmllbmNlIHBvaW50cyB0byBsZXZlbCB1cCB0aGVpciBjaGFyYWN0ZXJzLiBFeGFtcGxlcyBvZiBNTU9BUlBHcyBpbmNsdWRlIERpYWJsbywgUGF0aCBvZiBFeGlsZSwgYW5kIFRvcmNobGlnaHQuXCIsXG4gIEFSUEc6IFwiKEFjdGlvbiBSb2xlLVBsYXlpbmcgR2FtZSk6IEEgdmlkZW8gZ2FtZSBnZW5yZSB0aGF0IGNvbWJpbmVzIGVsZW1lbnRzIG9mIHRyYWRpdGlvbmFsIHJvbGUtcGxheWluZyBnYW1lcyB3aXRoIHJlYWwtdGltZSBhY3Rpb24gY29tYmF0LiBQbGF5ZXJzIGNvbnRyb2wgYSBjaGFyYWN0ZXIgaW4gYSBmYW50YXN5IHdvcmxkLCBiYXR0bGluZyBlbmVtaWVzIGFuZCBnYWluaW5nIGV4cGVyaWVuY2UgcG9pbnRzIHRvIGxldmVsIHVwIGFuZCBhY3F1aXJlIG5ldyBza2lsbHMgYW5kIGVxdWlwbWVudC4gRXhhbXBsZTogRGlhYmxvIHNlcmllcywgUGF0aCBvZiBFeGlsZS5cIixcbiAgQmF0dGxlUm95YWxlOlxuICAgIFwiQSBnZW5yZSBvZiBvbmxpbmUgbXVsdGlwbGF5ZXIgdmlkZW8gZ2FtZXMgaW4gd2hpY2ggYSBsYXJnZSBudW1iZXIgb2YgcGxheWVycyAodHlwaWNhbGx5IDEwMCkgZmlnaHQgdG8gYmUgdGhlIGxhc3QgcGVyc29uIG9yIHRlYW0gc3RhbmRpbmcuIFBsYXllcnMgc3RhcnQgd2l0aCBtaW5pbWFsIGVxdWlwbWVudCBhbmQgbXVzdCBzY2F2ZW5nZSBmb3Igd2VhcG9ucyBhbmQgaXRlbXMgd2hpbGUgYXZvaWRpbmcgYSBjb25zdGFudGx5IHNocmlua2luZyBwbGF5IGFyZWEuIEV4YW1wbGU6IEZvcnRuaXRlLCBQVUJHLlwiLFxuICBTdHJhdGVneTpcbiAgICBcIkEgdmlkZW8gZ2FtZSBnZW5yZSB0aGF0IGVtcGhhc2l6ZXMgdGFjdGljYWwgYW5kIHN0cmF0ZWdpYyBkZWNpc2lvbi1tYWtpbmcsIHJlc291cmNlIG1hbmFnZW1lbnQsIGFuZCBsb25nLXRlcm0gcGxhbm5pbmcuIFBsYXllcnMgY29udHJvbCBhcm1pZXMgb3IgY2l2aWxpemF0aW9ucywgYnVpbGQgYW5kIG1hbmFnZSBpbmZyYXN0cnVjdHVyZSwgYW5kIGVuZ2FnZSBpbiBjb21iYXQgYWdhaW5zdCBvcHBvbmVudHMuIEV4YW1wbGU6IENpdmlsaXphdGlvbiBzZXJpZXMsIEFnZSBvZiBFbXBpcmVzLlwiLFxuICBGaWdodGluZzpcbiAgICBcIkEgZ2VucmUgb2YgdmlkZW8gZ2FtZXMgaW4gd2hpY2ggcGxheWVycyBjb21wZXRlIGFnYWluc3QgZWFjaCBvdGhlciBpbiBoYW5kLXRvLWhhbmQgY29tYmF0IHVzaW5nIGEgdmFyaWV0eSBvZiBtYXJ0aWFsIGFydHMgbW92ZXMgYW5kIHNwZWNpYWwgYXR0YWNrcy4gRXhhbXBsZTogU3RyZWV0IEZpZ2h0ZXIsIE1vcnRhbCBLb21iYXQuXCIsXG4gIENhcmRHYW1lOlxuICAgIFwiQSBnZW5yZSBvZiB2aWRlbyBnYW1lcyB0aGF0IGludm9sdmUgY29sbGVjdGlibGUgY2FyZHMgYXMgdGhlIHByaW1hcnkgZ2FtZXBsYXkgZWxlbWVudC4gUGxheWVycyBidWlsZCBkZWNrcyBvZiBjYXJkcyB3aXRoIGRpZmZlcmVudCBhYmlsaXRpZXMgYW5kIHN0cmVuZ3RocywgYW5kIHRoZW4gdXNlIHRoZW0gdG8gYmF0dGxlIGFnYWluc3Qgb3Bwb25lbnRzLiBFeGFtcGxlOiBIZWFydGhzdG9uZSwgTWFnaWM6IFRoZSBHYXRoZXJpbmcgQXJlbmEuXCIsXG4gIEFjdGlvblJQRzpcbiAgICBcIkEgZ2VucmUgb2Ygcm9sZS1wbGF5aW5nIGdhbWVzIHRoYXQgZW1waGFzaXplcyByZWFsLXRpbWUgY29tYmF0IGFuZCBmYXN0LXBhY2VkIGFjdGlvbi4gUGxheWVycyBjb250cm9sIGEgY2hhcmFjdGVyIGluIGEgZmFudGFzeSB3b3JsZCwgYmF0dGxpbmcgZW5lbWllcyBhbmQgZ2FpbmluZyBleHBlcmllbmNlIHBvaW50cyB0byBsZXZlbCB1cCBhbmQgYWNxdWlyZSBuZXcgc2tpbGxzIGFuZCBlcXVpcG1lbnQuIEV4YW1wbGU6IERhcmsgU291bHMsIEtpbmdkb21zIG9mIEFtYWx1ci5cIixcbiAgUmFjaW5nOlxuICAgIFwiQSB2aWRlbyBnYW1lIGdlbnJlIHRoYXQgc2ltdWxhdGVzIHJhY2luZyB2ZWhpY2xlcywgZWl0aGVyIG9uIGxhbmQsIHNlYSwgb3IgYWlyLiBQbGF5ZXJzIGNvbXBldGUgYWdhaW5zdCBlYWNoIG90aGVyIG9yIGFnYWluc3QgdGhlIGNsb2NrIHRvIGNvbXBsZXRlIGNvdXJzZXMgb3IgcmFjZXMsIHRyeWluZyB0byBnZXQgdGhlIGZhc3Rlc3QgdGltZSBvciBjcm9zcyB0aGUgZmluaXNoIGxpbmUgZmlyc3QuIEV4YW1wbGU6IEZvcnphIEhvcml6b24sIE5lZWQgZm9yIFNwZWVkLlwiLFxuICBNT0JBOiBcIihNdWx0aXBsYXllciBPbmxpbmUgQmF0dGxlIEFyZW5hKTogQSBnZW5yZSBvZiBvbmxpbmUgbXVsdGlwbGF5ZXIgdmlkZW8gZ2FtZXMgaW4gd2hpY2ggcGxheWVycyBjb250cm9sIGEgc2luZ2xlIGNoYXJhY3RlciBpbiBhIHRlYW0tYmFzZWQgYmF0dGxlIGFnYWluc3Qgb3Bwb25lbnRzLiBUaGUgZ29hbCBpcyB0byBkZXN0cm95IHRoZSBvcHBvc2luZyB0ZWFtJ3MgYmFzZSB3aGlsZSBwcm90ZWN0aW5nIHRoZWlyIG93bi4gRXhhbXBsZTogTGVhZ3VlIG9mIExlZ2VuZHMsIERvdGEgMi5cIixcbiAgU3BvcnRzOlxuICAgIFwiQSB2aWRlbyBnYW1lIGdlbnJlIHRoYXQgc2ltdWxhdGVzIHJlYWwtd29ybGQgc3BvcnRzLCBzdWNoIGFzIHNvY2NlciwgZm9vdGJhbGwsIGJhc2tldGJhbGwsIG9yIHRlbm5pcy4gUGxheWVycyBjb250cm9sIGluZGl2aWR1YWwgYXRobGV0ZXMgb3IgdGVhbXMsIGNvbXBldGluZyBhZ2FpbnN0IGVhY2ggb3RoZXIgdG8gd2luIG1hdGNoZXMgb3IgY2hhbXBpb25zaGlwcy4gRXhhbXBsZTogRklGQSwgTkJBIDJLLlwiLFxuICBNTU9GUFM6XG4gICAgXCIoTWFzc2l2ZWx5IE11bHRpcGxheWVyIE9ubGluZSBGaXJzdC1QZXJzb24gU2hvb3Rlcik6IEEgZ2VucmUgb2Ygb25saW5lIG11bHRpcGxheWVyIHZpZGVvIGdhbWVzIHRoYXQgaW52b2x2ZSBzaG9vdGluZyBhbmQgY29tYmF0IGZyb20gYSBmaXJzdC1wZXJzb24gcGVyc3BlY3RpdmUgaW4gYSBwZXJzaXN0ZW50IHZpcnR1YWwgd29ybGQuIFBsYXllcnMgZW5nYWdlIGluIGJhdHRsZXMgYWdhaW5zdCBvdGhlciBwbGF5ZXJzIG9yIG5vbi1wbGF5ZXIgY2hhcmFjdGVycyB0byBnYWluIGV4cGVyaWVuY2UgcG9pbnRzIGFuZCBhZHZhbmNlIHRoZWlyIGNoYXJhY3RlcnMuIEV4YW1wbGU6IERlc3RpbnksIFdhcmZyYW1lLlwiLFxuICBNTU86IFwiKE1hc3NpdmVseSBNdWx0aXBsYXllciBPbmxpbmUpOiBBIGdlbnJlIG9mIG9ubGluZSBtdWx0aXBsYXllciB2aWRlbyBnYW1lcyB0aGF0IHN1cHBvcnQgYSBsYXJnZSBudW1iZXIgb2YgcGxheWVycyBpbiBhIHNoYXJlZCB2aXJ0dWFsIHdvcmxkLiBQbGF5ZXJzIGNhbiBpbnRlcmFjdCB3aXRoIGVhY2ggb3RoZXIgYW5kIGVuZ2FnZSBpbiB2YXJpb3VzIGFjdGl2aXRpZXMgc3VjaCBhcyBjb21wbGV0aW5nIHF1ZXN0cywgZXhwbG9yaW5nIHRoZSB3b3JsZCwgb3IgYmF0dGxpbmcgZW5lbWllcy4gRXhhbXBsZTogV29ybGQgb2YgV2FyY3JhZnQsIEd1aWxkIFdhcnMgMi5cIixcbiAgU29jaWFsOlxuICAgIFwiQSB2aWRlbyBnYW1lIGdlbnJlIHRoYXQgZW1waGFzaXplcyBzb2NpYWwgaW50ZXJhY3Rpb24gYmV0d2VlbiBwbGF5ZXJzLiBQbGF5ZXJzIGNhbiBjcmVhdGUgYW5kIGN1c3RvbWl6ZSB0aGVpciBhdmF0YXJzLCBjaGF0IHdpdGggb3RoZXIgcGxheWVycywgcGFydGljaXBhdGUgaW4gYWN0aXZpdGllcywgYW5kIGJ1aWxkIHJlbGF0aW9uc2hpcHMuIEV4YW1wbGU6IFNlY29uZCBMaWZlLCBUaGUgU2ltcy5cIixcbiAgRmFudGFzeTpcbiAgICBcInNBIHZpZGVvIGdhbWUgZ2VucmUgdGhhdCBmZWF0dXJlcyBlbGVtZW50cyBvZiBteXRob2xvZ3ksIG1hZ2ljLCBhbmQgZmljdGlvbmFsIGNyZWF0dXJlcy4gUGxheWVycyBjYW4gZXhwbG9yZSBhbmQgaW50ZXJhY3Qgd2l0aCBhIHZpcnR1YWwgd29ybGQgZmlsbGVkIHdpdGggZmFudGFzdGljYWwgbG9jYXRpb25zIGFuZCBjaGFyYWN0ZXJzLiBFeGFtcGxlOiBUaGUgRWxkZXIgU2Nyb2xscyBzZXJpZXMsIEZpbmFsIEZhbnRhc3kgc2VyaWVzLlwiLFxufTtcbmNvbnN0IHNpZGVJbmZvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGFydF9zaWRlSW5mb1wiKTtcblxuY29uc29sZS5sb2codGl0bGUpXG5zaWRlSW5mby5pbm5lckhUTUw9XCJcIlxuc2lkZUluZm8uaW5uZXJIVE1MID0gYFxuPGRpdj5cbiAgPGgxPndoYXQgaXMgPHNwYW4+JHt0aXRsZX08L3NwYW4+PzwvaDE+XG4gIDxwPiR7YWJvdXRbdGl0bGUuc3BsaXQoXCIgXCIpLmpvaW4oXCJcIildfTwvcD5cbjwvZGl2PmA7XG4gIC8vIENvcHlyaWdodCAyMDIxIE9ic2VydmFibGUsIEluYy5cbiAgLy8gUmVsZWFzZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICAvLyBodHRwczovL29ic2VydmFibGVocS5jb20vQGQzL211bHRpLWxpbmUtY2hhcnRcblxuICBmdW5jdGlvbiBMaW5lQ2hhcnQoXG4gICAgZGF0YSxcbiAgICB7XG4gICAgICB4ID0gKFt4XSkgPT4geCwgLy8gZ2l2ZW4gZCBpbiBkYXRhLCByZXR1cm5zIHRoZSAodGVtcG9yYWwpIHgtdmFsdWVcbiAgICAgIHkgPSAoWywgeV0pID0+IHksIC8vIGdpdmVuIGQgaW4gZGF0YSwgcmV0dXJucyB0aGUgKHF1YW50aXRhdGl2ZSkgeS12YWx1ZVxuICAgICAgLy8geiA9IChbel0pID0+IHosIHRoaXMgaXMgbm90IHdvcmtpbmdcbiAgICAgIHRpdGxlLCAvLyBnaXZlbiBkIGluIGRhdGEsIHJldHVybnMgdGhlIHRpdGxlIHRleHRcbiAgICAgIGRlZmluZWQsIC8vIGZvciBnYXBzIGluIGRhdGFcbiAgICAgIGN1cnZlID0gZDMuY3VydmVMaW5lYXIsIC8vIG1ldGhvZCBvZiBpbnRlcnBvbGF0aW9uIGJldHdlZW4gcG9pbnRzXG4gICAgICBtYXJnaW5Ub3AgPSAyMCwgLy8gdG9wIG1hcmdpbiwgaW4gcGl4ZWxzXG4gICAgICBtYXJnaW5SaWdodCA9IDMwLCAvLyByaWdodCBtYXJnaW4sIGluIHBpeGVsc1xuICAgICAgbWFyZ2luQm90dG9tID0gMzAsIC8vIGJvdHRvbSBtYXJnaW4sIGluIHBpeGVsc1xuICAgICAgbWFyZ2luTGVmdCA9IDQwLCAvLyBsZWZ0IG1hcmdpbiwgaW4gcGl4ZWxzXG4gICAgICB3aWR0aCA9IDY0MCwgLy8gb3V0ZXIgd2lkdGgsIGluIHBpeGVsc1xuICAgICAgaGVpZ2h0ID0gNDAwLCAvLyBvdXRlciBoZWlnaHQsIGluIHBpeGVsc1xuICAgICAgeFR5cGUgPSBkMy5zY2FsZVV0YywgLy8gdHlwZSBvZiB4LXNjYWxlXG4gICAgICB4RG9tYWluLCAvLyBbeG1pbiwgeG1heF1cbiAgICAgIHhSYW5nZSA9IFttYXJnaW5MZWZ0LCB3aWR0aCAtIG1hcmdpblJpZ2h0XSwgLy8gW2xlZnQsIHJpZ2h0XVxuICAgICAgeVR5cGUgPSBkMy5zY2FsZUxpbmVhciwgLy8gdHlwZSBvZiB5LXNjYWxlXG4gICAgICB5RG9tYWluLCAvLyBbeW1pbiwgeW1heF1cbiAgICAgIHlSYW5nZSA9IFtoZWlnaHQgLSBtYXJnaW5Cb3R0b20sIG1hcmdpblRvcF0sIC8vIFtib3R0b20sIHRvcF1cbiAgICAgIGNvbG9yID0gXCJjdXJyZW50Q29sb3JcIiwgLy8gc3Ryb2tlIGNvbG9yIG9mIGxpbmVcbiAgICAgIHN0cm9rZVdpZHRoID0gMS41LCAvLyBzdHJva2Ugd2lkdGggb2YgbGluZSwgaW4gcGl4ZWxzXG4gICAgICBzdHJva2VMaW5lam9pbiA9IFwicm91bmRcIiwgLy8gc3Ryb2tlIGxpbmUgam9pbiBvZiBsaW5lXG4gICAgICBzdHJva2VMaW5lY2FwID0gXCJyb3VuZFwiLCAvLyBzdHJva2UgbGluZSBjYXAgb2YgbGluZVxuICAgICAgeUZvcm1hdCwgLy8gYSBmb3JtYXQgc3BlY2lmaWVyIHN0cmluZyBmb3IgdGhlIHktYXhpc1xuICAgICAgeUxhYmVsLCAvLyBhIGxhYmVsIGZvciB0aGUgeS1heGlzXG4gICAgfSA9IHt9XG4gICkge1xuICAgIC8vIENvbXB1dGUgdmFsdWVzLlxuICAgIGNvbnN0IFggPSBkMy5tYXAoZGF0YSwgeCk7XG4gICAgY29uc3QgWSA9IGQzLm1hcChkYXRhLCB5KTtcbiAgICBjb25zdCBPID0gZDMubWFwKGRhdGEsIChkKSA9PiBkKTtcbiAgICBjb25zdCBJID0gZDMubWFwKGRhdGEsIChfLCBpKSA9PiBpKTtcblxuICAgIC8vIENvbXB1dGUgd2hpY2ggZGF0YSBwb2ludHMgYXJlIGNvbnNpZGVyZWQgZGVmaW5lZC5cbiAgICBpZiAoZGVmaW5lZCA9PT0gdW5kZWZpbmVkKSBkZWZpbmVkID0gKGQsIGkpID0+ICFpc05hTihYW2ldKSAmJiAhaXNOYU4oWVtpXSk7XG4gICAgY29uc3QgRCA9IGQzLm1hcChkYXRhLCBkZWZpbmVkKTtcblxuICAgIC8vIENvbXB1dGUgZGVmYXVsdCBkb21haW5zLlxuICAgIGlmICh4RG9tYWluID09PSB1bmRlZmluZWQpIHhEb21haW4gPSBkMy5leHRlbnQoWCk7XG4gICAgaWYgKHlEb21haW4gPT09IHVuZGVmaW5lZCkgeURvbWFpbiA9IFswLCBkMy5tYXgoWSldO1xuXG4gICAgLy8gQ29uc3RydWN0IHNjYWxlcyBhbmQgYXhlcy5cbiAgICBjb25zdCB4U2NhbGUgPSB4VHlwZSh4RG9tYWluLCB4UmFuZ2UpO1xuICAgIGNvbnN0IHlTY2FsZSA9IHlUeXBlKHlEb21haW4sIHlSYW5nZSk7XG4gICAgLy8gY29uc3QgeEF4aXMgPSBkMy5heGlzQm90dG9tKHhTY2FsZSkudGlja3Mod2lkdGggLyA4MCkudGlja1NpemVPdXRlcigwKTtcbiAgICBjb25zdCB4QXhpcyA9IGQzXG4gICAgICAuYXhpc0JvdHRvbSh4U2NhbGUpXG4gICAgICAudGlja3Mod2lkdGggLyA4MClcbiAgICAgIC50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoXCIlWVwiKSlcbiAgICAgIC50aWNrU2l6ZU91dGVyKDApO1xuICAgIGNvbnN0IHlBeGlzID0gZDMuYXhpc0xlZnQoeVNjYWxlKS50aWNrcyhoZWlnaHQgLyA0MCwgeUZvcm1hdCk7XG5cbiAgICAvLyBDb21wdXRlIHRpdGxlcy5cbiAgICBpZiAodGl0bGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgZm9ybWF0RGF0ZSA9IHhTY2FsZS50aWNrRm9ybWF0KG51bGwsIFwiJWIgJS1kLCAlWVwiKTtcbiAgICAgIGNvbnN0IGZvcm1hdFZhbHVlID0geVNjYWxlLnRpY2tGb3JtYXQoMTAwLCB5Rm9ybWF0KTtcbiAgICAgIHRpdGxlID0gKGkpID0+IGAke2Zvcm1hdERhdGUoWFtpXSl9XFxuJHtmb3JtYXRWYWx1ZShZW2ldKX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBPID0gZDMubWFwKGRhdGEsIChkKSA9PiBkKTtcbiAgICAgIGNvbnN0IFQgPSB0aXRsZTtcbiAgICAgIHRpdGxlID0gKGkpID0+IFQoT1tpXSwgaSwgZGF0YSk7XG4gICAgfVxuXG4gICAgLy8gQ29uc3RydWN0IGEgbGluZSBnZW5lcmF0b3IuXG4gICAgY29uc3QgbGluZSA9IGQzXG4gICAgICAubGluZSgpXG4gICAgICAuZGVmaW5lZCgoaSkgPT4gRFtpXSlcbiAgICAgIC5jdXJ2ZShjdXJ2ZSlcbiAgICAgIC54KChpKSA9PiB4U2NhbGUoWFtpXSkpXG4gICAgICAueSgoaSkgPT4geVNjYWxlKFlbaV0pKTtcblxuICAgIGNvbnN0IHN2ZyA9IGQzXG4gICAgICAuY3JlYXRlKFwic3ZnXCIpXG4gICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoKVxuICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgaGVpZ2h0KVxuICAgICAgLmF0dHIoXCJ2aWV3Qm94XCIsIFswLCAwLCB3aWR0aCwgaGVpZ2h0XSlcbiAgICAgIC5hdHRyKFwic3R5bGVcIiwgXCJtYXgtd2lkdGg6IDEwMCU7IGhlaWdodDogYXV0bzsgaGVpZ2h0OiBpbnRyaW5zaWM7XCIpXG4gICAgICAuYXR0cihcImZvbnQtZmFtaWx5XCIsIFwic2Fucy1zZXJpZlwiKVxuICAgICAgLmF0dHIoXCJmb250LXNpemVcIiwgMTApXG4gICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJ0cmFuc3BhcmVudFwiKVxuICAgICAgLnN0eWxlKFwib3ZlcmZsb3dcIiwgXCJ2aXNpYmxlXCIpXG4gICAgICAub24oXCJwb2ludGVyZW50ZXIgcG9pbnRlcm1vdmVcIiwgcG9pbnRlcm1vdmVkKVxuICAgICAgLm9uKFwicG9pbnRlcmxlYXZlXCIsIHBvaW50ZXJsZWZ0KVxuICAgICAgLm9uKFwidG91Y2hzdGFydFwiLCAoZXZlbnQpID0+IGV2ZW50LnByZXZlbnREZWZhdWx0KCkpO1xuXG4gICAgc3ZnXG4gICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgwLCR7aGVpZ2h0IC0gbWFyZ2luQm90dG9tfSlgKVxuICAgICAgLmNhbGwoeEF4aXMpO1xuXG4gICAgc3ZnXG4gICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke21hcmdpbkxlZnR9LDApYClcbiAgICAgIC5jYWxsKHlBeGlzKVxuICAgICAgLmNhbGwoKGcpID0+IGcuc2VsZWN0KFwiLmRvbWFpblwiKS5yZW1vdmUoKSlcbiAgICAgIC5jYWxsKChnKSA9PlxuICAgICAgICBnXG4gICAgICAgICAgLnNlbGVjdEFsbChcIi50aWNrIGxpbmVcIilcbiAgICAgICAgICAuY2xvbmUoKVxuICAgICAgICAgIC5hdHRyKFwieDJcIiwgd2lkdGggLSBtYXJnaW5MZWZ0IC0gbWFyZ2luUmlnaHQpXG4gICAgICAgICAgLmF0dHIoXCJzdHJva2Utb3BhY2l0eVwiLCAwLjEpXG4gICAgICApXG4gICAgICAuY2FsbCgoZykgPT5cbiAgICAgICAgZ1xuICAgICAgICAgIC5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgICAgICAgLmF0dHIoXCJ4XCIsIC1tYXJnaW5MZWZ0KVxuICAgICAgICAgIC5hdHRyKFwieVwiLCAxMClcbiAgICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJjdXJyZW50Q29sb3JcIilcbiAgICAgICAgICAuYXR0cihcInRleHQtYW5jaG9yXCIsIFwic3RhcnRcIilcbiAgICAgICAgICAudGV4dCh5TGFiZWwpXG4gICAgICApO1xuXG4gICAgc3ZnXG4gICAgICAuYXBwZW5kKFwicGF0aFwiKVxuICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgLmF0dHIoXCJzdHJva2VcIiwgY29sb3IpXG4gICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCBzdHJva2VXaWR0aClcbiAgICAgIC5hdHRyKFwic3Ryb2tlLWxpbmVqb2luXCIsIHN0cm9rZUxpbmVqb2luKVxuICAgICAgLmF0dHIoXCJzdHJva2UtbGluZWNhcFwiLCBzdHJva2VMaW5lY2FwKVxuICAgICAgLmF0dHIoXCJkXCIsIGxpbmUoSSkpO1xuXG4gICAgY29uc3QgdG9vbHRpcCA9IHN2Zy5hcHBlbmQoXCJnXCIpLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpO1xuXG4gICAgZnVuY3Rpb24gcG9pbnRlcm1vdmVkKGV2ZW50KSB7XG4gICAgICBjb25zdCBpID0gZDMuYmlzZWN0Q2VudGVyKFgsIHhTY2FsZS5pbnZlcnQoZDMucG9pbnRlcihldmVudClbMF0pKTtcbiAgICAgIHRvb2x0aXAuc3R5bGUoXCJkaXNwbGF5XCIsIG51bGwpO1xuICAgICAgdG9vbHRpcC5hdHRyKFwidHJhbnNmb3JtXCIsIGB0cmFuc2xhdGUoJHt4U2NhbGUoWFtpXSl9LCR7eVNjYWxlKFlbaV0pfSlgKTtcblxuICAgICAgY29uc3QgcGF0aCA9IHRvb2x0aXBcbiAgICAgICAgLnNlbGVjdEFsbChcInBhdGhcIilcbiAgICAgICAgLmRhdGEoWyxdKVxuICAgICAgICAuam9pbihcInBhdGhcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwid2hpdGVcIilcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgXCJibGFja1wiKTtcblxuICAgICAgY29uc3QgdGV4dCA9IHRvb2x0aXBcbiAgICAgICAgLnNlbGVjdEFsbChcInRleHRcIilcbiAgICAgICAgLmRhdGEoWyxdKVxuICAgICAgICAuam9pbihcInRleHRcIilcbiAgICAgICAgLmNhbGwoKHRleHQpID0+XG4gICAgICAgICAgdGV4dFxuICAgICAgICAgICAgLnNlbGVjdEFsbChcInRzcGFuXCIpXG4gICAgICAgICAgICAuZGF0YShgJHt0aXRsZShpKX1gLnNwbGl0KC9cXG4vKSlcbiAgICAgICAgICAgIC5qb2luKFwidHNwYW5cIilcbiAgICAgICAgICAgIC5hdHRyKFwieFwiLCAwKVxuICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIChfLCBpKSA9PiBgJHtpICogMS4xfWVtYClcbiAgICAgICAgICAgIC5hdHRyKFwiZm9udC13ZWlnaHRcIiwgKF8sIGkpID0+IChpID8gbnVsbCA6IFwiYm9sZFwiKSlcbiAgICAgICAgICAgIC50ZXh0KChkKSA9PiBkKVxuICAgICAgICApO1xuXG4gICAgICBjb25zdCB7IHgsIHksIHdpZHRoOiB3LCBoZWlnaHQ6IGggfSA9IHRleHQubm9kZSgpLmdldEJCb3goKTtcbiAgICAgIHRleHQuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7LXcgLyAyfSwkezE1IC0geX0pYCk7XG4gICAgICBwYXRoLmF0dHIoXG4gICAgICAgIFwiZFwiLFxuICAgICAgICBgTSR7LXcgLyAyIC0gMTB9LDVILTVsNSwtNWw1LDVIJHt3IC8gMiArIDEwfXYke2ggKyAyMH1oLSR7dyArIDIwfXpgXG4gICAgICApO1xuICAgICAgc3ZnLnByb3BlcnR5KFwidmFsdWVcIiwgT1tpXSkuZGlzcGF0Y2goXCJpbnB1dFwiLCB7IGJ1YmJsZXM6IHRydWUgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9pbnRlcmxlZnQoKSB7XG4gICAgICB0b29sdGlwLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XG4gICAgICBzdmcubm9kZSgpLnZhbHVlID0gbnVsbDtcbiAgICAgIHN2Zy5kaXNwYXRjaChcImlucHV0XCIsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihzdmcubm9kZSgpLCB7IHZhbHVlOiBudWxsIH0pO1xuICB9XG59XG5cblxuXG5cblxuIGNvbnN0IGhhbmRsZUZpbHRlciA9IChnZW5yZXMpID0+IHtcbiAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW5cIik7XG4gICBjb25zdCBnZW5yZVNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICBnZW5yZVNlbGVjdC5jbGFzc0xpc3QuYWRkKFwiZ2VucmVfc2VsZWN0XCIpO1xuXG4gICBjb25zdCBzaWRlSW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhcnRfc2lkZUluZm9cIik7XG4gICBzaWRlSW5mby5hcHBlbmRDaGlsZChnZW5yZVNlbGVjdCk7XG5cbiAgIGNvbnN0IHNlbGVjdE9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICBzZWxlY3RPcHRpb24uc2V0QXR0cmlidXRlKFwibGFiZWxcIiwgXCJTZWxlY3QgT3B0aW9uc1wiKTtcbiAgIHNlbGVjdE9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIm5vY2FwXCIpO1xuICAgc2VsZWN0T3B0aW9uLnNlbGVjdGVkID0gdHJ1ZTtcbiAgIHNlbGVjdE9wdGlvbi5kaXNhYmxlZCA9IHRydWU7XG4gICBnZW5yZVNlbGVjdC5hcHBlbmRDaGlsZChzZWxlY3RPcHRpb24pO1xuXG4gICAoXCJjb21pbmcgZnJvbSBsaW5lYXJDaGFydFwiKTtcbiAgIC8vZ2V0dGluZyBuYW1lIG9mIGdlbnJlcyBmb3IgZmlsdGVyaW5nXG4gICBjb25zdCBnZW5yZUZvckZpbHRlciA9IFtdO1xuXG4gICBPYmplY3Qua2V5cyhnZW5yZXMpLmZvckVhY2goKGtleXMpID0+IHtcbiAgICAgaWYgKGtleXMgIT09IFwiIE1NT1JQR1wiKSB7XG4gICAgICAgZ2VucmVGb3JGaWx0ZXIucHVzaChrZXlzKTtcbiAgICAgfVxuICAgfSk7XG5cbiAgIC8vZ2V0IHRoZSBwZXJjZW50YWdlIG9mIGVhY2ggZ2VucmVcbiAgIGNvbnN0IGdlbnJlc0ZpbHRlciA9IGdlbnJlRm9yRmlsdGVyLm1hcCgoa2V5KSA9PiB7XG4gICAgIHJldHVybiBba2V5LCBnZW5yZXNba2V5XS5sZW5ndGhdO1xuICAgfSk7XG5cbiAgIC8vIChnZW5yZXNGaWx0ZXIpO1xuXG4gICAvL2Fzc2lnbmluZyBrZXlzIHRvIHVsXG4gICBnZW5yZXNGaWx0ZXIuZm9yRWFjaCgoa2V5LCBpKSA9PiB7XG4gICAgIGNvbnN0IGdlbnJlTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgIGdlbnJlTGlzdC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtrZXlbMF19YCk7XG4gICAgIGdlbnJlTGlzdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgJHtrZXlbMF19YCk7XG4gICAgIChrZXlbMV0pO1xuXG4gICAgIGdlbnJlTGlzdC5pbm5lckhUTUwgPSBgJHtrZXlbMF19YDtcblxuICAgICBnZW5yZVNlbGVjdC5hcHBlbmRDaGlsZChnZW5yZUxpc3QpO1xuICAgfSk7XG5cbiAgIGNvbnN0IGZpbHRlcmVkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTaG9vdGVyXCIpO1xuICAgLy8gKGZpbHRlcmVkKVxuICAgbGV0IHNlbGVjdGVkT3B0aW9uID0gXCJub2NhcFwiO1xuXG4gICBnZW5yZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICBpZiAoZXZlbnQudGFyZ2V0LnZhbHVlICE9PSBzZWxlY3RlZE9wdGlvbikge1xuICAgICAgIChldmVudC50YXJnZXQudmFsdWUpO1xuICAgICAgIHNlbGVjdGVkT3B0aW9uID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgICAgIC8vY3JlYXRpbmdDaGFydFxuICAgICAgIGZpbHRlcmVkQ2hhcnQoc2VsZWN0ZWRPcHRpb24sIGdlbnJlc1tzZWxlY3RlZE9wdGlvbl0pO1xuICAgICB9XG5cbiAgICAgLy9vbWcgZmluYWxseSBnb3QgaXRcbiAgICAgKGdlbnJlc1tzZWxlY3RlZE9wdGlvbl0pO1xuICAgfSk7XG5cbiAgIC8vIHJldHVybiBnZW5yZXNbc2VsZWN0ZWRPcHRpb25dXG4gfTtcbiJdLCJuYW1lcyI6WyJ1c2VEYXRhIiwiZmlsdGVyZWRDaGFydCIsInRpdGxlIiwiZGF0YSIsImdhbWVzIiwiZmlsdGVyIiwiZCIsInJlbGVhc2VfZGF0ZSIsIm1hcCIsInllYXIiLCJEYXRlIiwicGFyc2UiLCJnZXRGdWxsWWVhciIsInJlbGVhc2VfeWVhciIsInRvdGFscyIsInJlZHVjZSIsImFjYyIsImdhbWUiLCJjaGFydCIsIkxpbmVDaGFydCIsIk9iamVjdCIsImVudHJpZXMiLCJfcmVmIiwiY291bnQiLCJ4IiwieSIsInoiLCJ5TGFiZWwiLCJ4TGFiZWwiLCJ3aWR0aCIsImhlaWdodCIsInhBeGlzRm9ybWF0IiwiZDMiLCJ0aW1lRm9ybWF0IiwicHJldiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJoMSIsImNyZWF0ZUVsZW1lbnQiLCJwIiwiYXBwZW5kQ2hpbGQiLCJ0aGVuIiwiYWxsRGF0YSIsImhhbmRsZUZpbHRlciIsImdhbWVzQnlHZW5yZSIsImFib3V0IiwiU2hvb3RlciIsIk1NT1JQRyIsIk1NT0FSUEciLCJBUlBHIiwiQmF0dGxlUm95YWxlIiwiU3RyYXRlZ3kiLCJGaWdodGluZyIsIkNhcmRHYW1lIiwiQWN0aW9uUlBHIiwiUmFjaW5nIiwiTU9CQSIsIlNwb3J0cyIsIk1NT0ZQUyIsIk1NTyIsIlNvY2lhbCIsIkZhbnRhc3kiLCJzaWRlSW5mbyIsInF1ZXJ5U2VsZWN0b3IiLCJjb25zb2xlIiwibG9nIiwic3BsaXQiLCJqb2luIiwiX3JlZjIiLCJfcmVmMyIsImRlZmluZWQiLCJjdXJ2ZSIsImN1cnZlTGluZWFyIiwibWFyZ2luVG9wIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW5MZWZ0IiwieFR5cGUiLCJzY2FsZVV0YyIsInhEb21haW4iLCJ4UmFuZ2UiLCJ5VHlwZSIsInNjYWxlTGluZWFyIiwieURvbWFpbiIsInlSYW5nZSIsImNvbG9yIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lam9pbiIsInN0cm9rZUxpbmVjYXAiLCJ5Rm9ybWF0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiWCIsIlkiLCJPIiwiSSIsIl8iLCJpIiwiaXNOYU4iLCJEIiwiZXh0ZW50IiwibWF4IiwieFNjYWxlIiwieVNjYWxlIiwieEF4aXMiLCJheGlzQm90dG9tIiwidGlja3MiLCJ0aWNrRm9ybWF0IiwidGlja1NpemVPdXRlciIsInlBeGlzIiwiYXhpc0xlZnQiLCJmb3JtYXREYXRlIiwiZm9ybWF0VmFsdWUiLCJUIiwibGluZSIsInN2ZyIsImNyZWF0ZSIsImF0dHIiLCJzdHlsZSIsIm9uIiwicG9pbnRlcm1vdmVkIiwicG9pbnRlcmxlZnQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiYXBwZW5kIiwiY2FsbCIsImciLCJzZWxlY3QiLCJyZW1vdmUiLCJzZWxlY3RBbGwiLCJjbG9uZSIsInRleHQiLCJ0b29sdGlwIiwiYmlzZWN0Q2VudGVyIiwiaW52ZXJ0IiwicG9pbnRlciIsInBhdGgiLCJ3IiwiaCIsIm5vZGUiLCJnZXRCQm94IiwicHJvcGVydHkiLCJkaXNwYXRjaCIsImJ1YmJsZXMiLCJ2YWx1ZSIsImFzc2lnbiIsImdlbnJlcyIsIm1haW4iLCJnZW5yZVNlbGVjdCIsImNsYXNzTGlzdCIsImFkZCIsInNlbGVjdE9wdGlvbiIsInNldEF0dHJpYnV0ZSIsInNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnZW5yZUZvckZpbHRlciIsImtleXMiLCJmb3JFYWNoIiwicHVzaCIsImdlbnJlc0ZpbHRlciIsImtleSIsImdlbnJlTGlzdCIsImZpbHRlcmVkIiwic2VsZWN0ZWRPcHRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/filteredChart.js\n");

/***/ }),

/***/ "./src/scripts/components/chart/lineChart.js":
/*!***************************************************!*\
  !*** ./src/scripts/components/chart/lineChart.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChart\": function() { return /* binding */ createChart; }\n/* harmony export */ });\n/* harmony import */ var _filteredChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filteredChart */ \"./src/scripts/components/chart/filteredChart.js\");\n\nfunction createChart(data, genre) {\n  // Extract the release year from each game and create an array of objects\n  const games = data.filter(d => d.release_date !== \"0000\") // exclude games with release year of \"0000\"\n  .map(d => {\n    const year = Date.parse(d.release_date) //if its not parsable that means its 0000 one\n    ? new Date(d.release_date).getFullYear() : null;\n    return {\n      release_year: year\n    };\n  });\n\n  // Count the number of games released in each year\n  const totals = games.reduce((acc, game) => {\n    if (game.release_year !== null) {\n      if (!acc[game.release_year]) {\n        acc[game.release_year] = 0;\n      }\n      acc[game.release_year]++;\n    }\n    return acc;\n  }, {});\n\n  // Create a line chart using D3\n  const chart = LineChart(\n  //converts the totals object into an array of key-value pairs because i fetched the api and response.json()\n  // needs to convert this because d3 only takes cvs data which is same as text/json\n  Object.entries(totals).map(_ref => {\n    let [year, count, title] = _ref;\n    return {\n      year: new Date(year, 0),\n      count,\n      title\n    };\n  }), {\n    x: d => d.year,\n    y: d => d.count,\n    z: d => d.title,\n    yLabel: \"Number of games\",\n    xLabel: \"Released Year\",\n    width: 400,\n    height: 400,\n    // color: \"red\", seems like this line can overwrites the colors\n    // specify the tick format for the x-axis\n    xAxisFormat: d3.timeFormat(\"%Y\")\n  });\n\n  // Append the chart to the DOM\n  const main = document.getElementById('main');\n  let h1 = document.createElement(\"h1\");\n  let mainChart = document.createElement(\"div\");\n  h1.innerHTML = `<h1>Number of All The Live Games Released per Year</h1>`;\n  let p = document.createElement(\"p\");\n  p.innerHTML = ` This graph displays the number of games released per year, with the\n        y-axis representing the total number of games and the x-axis\n        representing the year of release. The graph provides a visual\n        representation of the trend of game releases over time and can be used\n        to identify any patterns or changes in the industry.`;\n  mainChart.setAttribute(\"id\", \"chart_all\");\n  document.getElementById(\"main\").appendChild(mainChart);\n  mainChart.appendChild(h1);\n  mainChart.appendChild(p);\n  // description.appendChild(chartDiv);\n  mainChart.appendChild(chart);\n\n  //aside dom\n  let sideInfo = document.createElement(\"div\");\n  sideInfo.classList.add(\"chart_sideInfo\");\n  let about_p = document.createElement(\"p\");\n  sideInfo.innerHTML = `<h1>What is the future of the gaming industry?</h1>`;\n  about_p.innerHTML = \"Gaming is now a bigger industry than movies and sports combined. Revenue for gaming reached $184 billion in 2022, and the number of gamers is expected to grow to 3.6 billion by 2025. It's not just kids either: 38 percent of gamers are between the ages of 18 and 34 years, and 16 percent are older than 55.\";\n  main.appendChild(sideInfo);\n  sideInfo.appendChild(about_p);\n  handleFilter(genre);\n  // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/multi-line-chart\n\n  function LineChart(data) {\n    let {\n      x = _ref2 => {\n        let [x] = _ref2;\n        return x;\n      },\n      // given d in data, returns the (temporal) x-value\n      y = _ref3 => {\n        let [, y] = _ref3;\n        return y;\n      },\n      // given d in data, returns the (quantitative) y-value\n      // z = ([z]) => z, this is not working\n      title,\n      // given d in data, returns the title text\n      defined,\n      // for gaps in data\n      curve = d3.curveLinear,\n      // method of interpolation between points\n      marginTop = 20,\n      // top margin, in pixels\n      marginRight = 30,\n      // right margin, in pixels\n      marginBottom = 30,\n      // bottom margin, in pixels\n      marginLeft = 40,\n      // left margin, in pixels\n      width = 640,\n      // outer width, in pixels\n      height = 400,\n      // outer height, in pixels\n      xType = d3.scaleUtc,\n      // type of x-scale\n      xDomain,\n      // [xmin, xmax]\n      xRange = [marginLeft, width - marginRight],\n      // [left, right]\n      yType = d3.scaleLinear,\n      // type of y-scale\n      yDomain,\n      // [ymin, ymax]\n      yRange = [height - marginBottom, marginTop],\n      // [bottom, top]\n      color = \"currentColor\",\n      // stroke color of line\n      strokeWidth = 1.5,\n      // stroke width of line, in pixels\n      strokeLinejoin = \"round\",\n      // stroke line join of line\n      strokeLinecap = \"round\",\n      // stroke line cap of line\n      yFormat,\n      // a format specifier string for the y-axis\n      yLabel // a label for the y-axis\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n    const O = d3.map(data, d => d);\n    const I = d3.map(data, (_, i) => i);\n\n    // Compute which data points are considered defined.\n    if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n    const D = d3.map(data, defined);\n\n    // Compute default domains.\n    if (xDomain === undefined) xDomain = d3.extent(X);\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n\n    // Construct scales and axes.\n    const xScale = xType(xDomain, xRange);\n    const yScale = yType(yDomain, yRange);\n    // const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n    const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickFormat(d3.timeFormat(\"%Y\")).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatDate = xScale.tickFormat(null, \"%b %-d, %Y\");\n      const formatValue = yScale.tickFormat(100, yFormat);\n      title = i => `${formatDate(X[i])}\\n${formatValue(Y[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n      title = i => T(O[i], i, data);\n    }\n\n    // Construct a line generator.\n    const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n    const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).style(\"-webkit-tap-highlight-color\", \"transparent\").style(\"overflow\", \"visible\").on(\"pointerenter pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n    svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(yLabel));\n    svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-linecap\", strokeLinecap).attr(\"d\", line(I));\n    const tooltip = svg.append(\"g\").style(\"pointer-events\", \"none\");\n    function pointermoved(event) {\n      const i = d3.bisectCenter(X, xScale.invert(d3.pointer(event)[0]));\n      tooltip.style(\"display\", null);\n      tooltip.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n      const path = tooltip.selectAll(\"path\").data([,]).join(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\");\n      const text = tooltip.selectAll(\"text\").data([,]).join(\"text\").call(text => text.selectAll(\"tspan\").data(`${title(i)}`.split(/\\n/)).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d));\n      const {\n        x,\n        y,\n        width: w,\n        height: h\n      } = text.node().getBBox();\n      text.attr(\"transform\", `translate(${-w / 2},${15 - y})`);\n      path.attr(\"d\", `M${-w / 2 - 10},5H-5l5,-5l5,5H${w / 2 + 10}v${h + 20}h-${w + 20}z`);\n      svg.property(\"value\", O[i]).dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    function pointerleft() {\n      tooltip.style(\"display\", \"none\");\n      svg.node().value = null;\n      svg.dispatch(\"input\", {\n        bubbles: true\n      });\n    }\n    return Object.assign(svg.node(), {\n      value: null\n    });\n  }\n}\nconst handleFilter = genres => {\n  const main = document.querySelector(\"#main\");\n  const genreSelect = document.createElement(\"select\");\n  genreSelect.classList.add(\"genre_select\");\n  const sideInfo = document.querySelector(\".chart_sideInfo\");\n  sideInfo.appendChild(genreSelect);\n  const selectOption = document.createElement(\"option\");\n  selectOption.setAttribute(\"label\", \"Select Options\");\n  selectOption.setAttribute(\"value\", \"nocap\");\n  selectOption.selected = true;\n  selectOption.disabled = true;\n  genreSelect.appendChild(selectOption);\n  \"coming from linearChart\";\n  //getting name of genres for filtering\n  const genreForFilter = [];\n  Object.keys(genres).forEach(keys => {\n    if (keys !== \" MMORPG\") {\n      genreForFilter.push(keys);\n    }\n  });\n\n  //get the percentage of each genre\n  const genresFilter = genreForFilter.map(key => {\n    return [key, genres[key].length];\n  });\n\n  // (genresFilter);\n\n  //assigning keys to ul\n  genresFilter.forEach((key, i) => {\n    const genreList = document.createElement(\"option\");\n    genreList.setAttribute(\"value\", `${key[0]}`);\n    genreList.setAttribute(\"id\", `${key[0]}`);\n    key[1];\n    genreList.innerHTML = `${key[0]}`;\n    genreSelect.appendChild(genreList);\n  });\n  const filtered = document.getElementById(\"Shooter\");\n  // (filtered)\n  let selectedOption = \"nocap\";\n  genreSelect.addEventListener(\"change\", event => {\n    event.preventDefault();\n    if (event.target.value !== selectedOption) {\n      event.target.value;\n      selectedOption = event.target.value;\n      //creatingChart\n      (0,_filteredChart__WEBPACK_IMPORTED_MODULE_0__.filteredChart)(selectedOption, genres[selectedOption]);\n    }\n\n    //omg finally got it\n    genres[selectedOption];\n  });\n\n  // return genres[selectedOption]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2NoYXJ0L2xpbmVDaGFydC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNnRDtBQUl6QyxTQUFTQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUNDLEtBQUssRUFBRTtFQUN0QztFQUNBLE1BQU1DLEtBQUssR0FBR0YsSUFBSSxDQUNmRyxNQUFNLENBQUVDLENBQUMsSUFBS0EsQ0FBQyxDQUFDQyxZQUFZLEtBQUssTUFBTSxDQUFDLENBQUM7RUFBQSxDQUN6Q0MsR0FBRyxDQUFFRixDQUFDLElBQUs7SUFDVixNQUFNRyxJQUFJLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDTCxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQUEsRUFDcEMsSUFBSUcsSUFBSSxDQUFDSixDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDSyxXQUFXLEVBQUUsR0FDdEMsSUFBSTtJQUNSLE9BQU87TUFBRUMsWUFBWSxFQUFFSjtJQUFLLENBQUM7RUFDL0IsQ0FBQyxDQUFDOztFQUVKO0VBQ0EsTUFBTUssTUFBTSxHQUFHVixLQUFLLENBQUNXLE1BQU0sQ0FBQyxDQUFDQyxHQUFHLEVBQUVDLElBQUksS0FBSztJQUN6QyxJQUFJQSxJQUFJLENBQUNKLFlBQVksS0FBSyxJQUFJLEVBQUU7TUFDOUIsSUFBSSxDQUFDRyxHQUFHLENBQUNDLElBQUksQ0FBQ0osWUFBWSxDQUFDLEVBQUU7UUFDM0JHLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDSixZQUFZLENBQUMsR0FBRyxDQUFDO01BQzVCO01BQ0FHLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDSixZQUFZLENBQUMsRUFBRTtJQUMxQjtJQUNBLE9BQU9HLEdBQUc7RUFDWixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7O0VBRU47RUFDQSxNQUFNRSxLQUFLLEdBQUdDLFNBQVM7RUFDckI7RUFDQTtFQUNBQyxNQUFNLENBQUNDLE9BQU8sQ0FBQ1AsTUFBTSxDQUFDLENBQUNOLEdBQUcsQ0FBQ2MsSUFBQTtJQUFBLElB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QUcsR0FBRW1HLEdBQUcsQ0FBQyxDQUFDLENBQUUsRUFBQyxDQUFDO0lBQ3hDQSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBRVBDLFNBQVMsQ0FBQ3RHLFNBQVMsR0FBSSxHQUFFcUcsR0FBRyxDQUFDLENBQUMsQ0FBRSxFQUFDO0lBRWpDVCxXQUFXLENBQUN6RixXQUFXLENBQUNtRyxTQUFTLENBQUM7RUFDcEMsQ0FBQyxDQUFDO0VBRUYsTUFBTUMsUUFBUSxHQUFHNUcsUUFBUSxDQUFDQyxjQUFjLENBQUMsU0FBUyxDQUFDO0VBQ25EO0VBQ0EsSUFBSTRHLGNBQWMsR0FBRyxPQUFPO0VBRTVCWixXQUFXLENBQUNhLGdCQUFnQixDQUFDLFFBQVEsRUFBR3pDLEtBQUssSUFBSztJQUNoREEsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEIsSUFBSUQsS0FBSyxDQUFDMEMsTUFBTSxDQUFDbEIsS0FBSyxLQUFLZ0IsY0FBYyxFQUFFO01BQ3hDeEMsS0FBSyxDQUFDMEMsTUFBTSxDQUFDbEIsS0FBSztNQUNuQmdCLGNBQWMsR0FBR3hDLEtBQUssQ0FBQzBDLE1BQU0sQ0FBQ2xCLEtBQUs7TUFDbkM7TUFDQWpJLDZEQUFhLENBQUNpSixjQUFjLEVBQUVkLE1BQU0sQ0FBQ2MsY0FBYyxDQUFDLENBQUM7SUFDdkQ7O0lBRUE7SUFDQ2QsTUFBTSxDQUFDYyxjQUFjLENBQUM7RUFDekIsQ0FBQyxDQUFDOztFQUVGO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9jaGFydC9saW5lQ2hhcnQuanM/MjYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGZpbHRlcmVkQ2hhcnQgfSBmcm9tIFwiLi9maWx0ZXJlZENoYXJ0XCI7XG5cblxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2hhcnQoZGF0YSxnZW5yZSkge1xuICAvLyBFeHRyYWN0IHRoZSByZWxlYXNlIHllYXIgZnJvbSBlYWNoIGdhbWUgYW5kIGNyZWF0ZSBhbiBhcnJheSBvZiBvYmplY3RzXG4gIGNvbnN0IGdhbWVzID0gZGF0YVxuICAgIC5maWx0ZXIoKGQpID0+IGQucmVsZWFzZV9kYXRlICE9PSBcIjAwMDBcIikgLy8gZXhjbHVkZSBnYW1lcyB3aXRoIHJlbGVhc2UgeWVhciBvZiBcIjAwMDBcIlxuICAgIC5tYXAoKGQpID0+IHtcbiAgICAgIGNvbnN0IHllYXIgPSBEYXRlLnBhcnNlKGQucmVsZWFzZV9kYXRlKSAvL2lmIGl0cyBub3QgcGFyc2FibGUgdGhhdCBtZWFucyBpdHMgMDAwMCBvbmVcbiAgICAgICAgPyBuZXcgRGF0ZShkLnJlbGVhc2VfZGF0ZSkuZ2V0RnVsbFllYXIoKVxuICAgICAgICA6IG51bGw7XG4gICAgICByZXR1cm4geyByZWxlYXNlX3llYXI6IHllYXIgfTtcbiAgICB9KTtcblxuICAvLyBDb3VudCB0aGUgbnVtYmVyIG9mIGdhbWVzIHJlbGVhc2VkIGluIGVhY2ggeWVhclxuICBjb25zdCB0b3RhbHMgPSBnYW1lcy5yZWR1Y2UoKGFjYywgZ2FtZSkgPT4ge1xuICAgIGlmIChnYW1lLnJlbGVhc2VfeWVhciAhPT0gbnVsbCkge1xuICAgICAgaWYgKCFhY2NbZ2FtZS5yZWxlYXNlX3llYXJdKSB7XG4gICAgICAgIGFjY1tnYW1lLnJlbGVhc2VfeWVhcl0gPSAwO1xuICAgICAgfVxuICAgICAgYWNjW2dhbWUucmVsZWFzZV95ZWFyXSsrO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgLy8gQ3JlYXRlIGEgbGluZSBjaGFydCB1c2luZyBEM1xuICBjb25zdCBjaGFydCA9IExpbmVDaGFydChcbiAgICAvL2NvbnZlcnRzIHRoZSB0b3RhbHMgb2JqZWN0IGludG8gYW4gYXJyYXkgb2Yga2V5LXZhbHVlIHBhaXJzIGJlY2F1c2UgaSBmZXRjaGVkIHRoZSBhcGkgYW5kIHJlc3BvbnNlLmpzb24oKVxuICAgIC8vIG5lZWRzIHRvIGNvbnZlcnQgdGhpcyBiZWNhdXNlIGQzIG9ubHkgdGFrZXMgY3ZzIGRhdGEgd2hpY2ggaXMgc2FtZSBhcyB0ZXh0L2pzb25cbiAgICBPYmplY3QuZW50cmllcyh0b3RhbHMpLm1hcCgoW3llYXIsIGNvdW50LCB0aXRsZV0pID0+ICh7XG4gICAgICB5ZWFyOiBuZXcgRGF0ZSh5ZWFyLCAwKSxcbiAgICAgIGNvdW50LFxuICAgICAgdGl0bGUsXG4gICAgfSkpLFxuICAgIHtcbiAgICAgIHg6IChkKSA9PiBkLnllYXIsXG4gICAgICB5OiAoZCkgPT4gZC5jb3VudCxcbiAgICAgIHo6IChkKSA9PiBkLnRpdGxlLFxuICAgICAgeUxhYmVsOiBcIk51bWJlciBvZiBnYW1lc1wiLFxuICAgICAgeExhYmVsOiBcIlJlbGVhc2VkIFllYXJcIixcbiAgICAgIHdpZHRoOiA0MDAsXG4gICAgICBoZWlnaHQ6IDQwMCxcbiAgICAgIC8vIGNvbG9yOiBcInJlZFwiLCBzZWVtcyBsaWtlIHRoaXMgbGluZSBjYW4gb3ZlcndyaXRlcyB0aGUgY29sb3JzXG4gICAgICAvLyBzcGVjaWZ5IHRoZSB0aWNrIGZvcm1hdCBmb3IgdGhlIHgtYXhpc1xuICAgICAgeEF4aXNGb3JtYXQ6IGQzLnRpbWVGb3JtYXQoXCIlWVwiKSxcbiAgICB9XG4gICk7XG5cbiAgLy8gQXBwZW5kIHRoZSBjaGFydCB0byB0aGUgRE9NXG5jb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKVxuICBsZXQgaDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gIGxldCBtYWluQ2hhcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGgxLmlubmVySFRNTCA9IGA8aDE+TnVtYmVyIG9mIEFsbCBUaGUgTGl2ZSBHYW1lcyBSZWxlYXNlZCBwZXIgWWVhcjwvaDE+YDtcblxuICBsZXQgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBwLmlubmVySFRNTCA9IGAgVGhpcyBncmFwaCBkaXNwbGF5cyB0aGUgbnVtYmVyIG9mIGdhbWVzIHJlbGVhc2VkIHBlciB5ZWFyLCB3aXRoIHRoZVxuICAgICAgICB5LWF4aXMgcmVwcmVzZW50aW5nIHRoZSB0b3RhbCBudW1iZXIgb2YgZ2FtZXMgYW5kIHRoZSB4LWF4aXNcbiAgICAgICAgcmVwcmVzZW50aW5nIHRoZSB5ZWFyIG9mIHJlbGVhc2UuIFRoZSBncmFwaCBwcm92aWRlcyBhIHZpc3VhbFxuICAgICAgICByZXByZXNlbnRhdGlvbiBvZiB0aGUgdHJlbmQgb2YgZ2FtZSByZWxlYXNlcyBvdmVyIHRpbWUgYW5kIGNhbiBiZSB1c2VkXG4gICAgICAgIHRvIGlkZW50aWZ5IGFueSBwYXR0ZXJucyBvciBjaGFuZ2VzIGluIHRoZSBpbmR1c3RyeS5gO1xuXG4gIG1haW5DaGFydC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImNoYXJ0X2FsbFwiKTtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIikuYXBwZW5kQ2hpbGQobWFpbkNoYXJ0KTtcbiAgbWFpbkNoYXJ0LmFwcGVuZENoaWxkKGgxKTtcbiAgbWFpbkNoYXJ0LmFwcGVuZENoaWxkKHApO1xuICAvLyBkZXNjcmlwdGlvbi5hcHBlbmRDaGlsZChjaGFydERpdik7XG4gICBtYWluQ2hhcnQuYXBwZW5kQ2hpbGQoY2hhcnQpO1xuXG4gIC8vYXNpZGUgZG9tXG5sZXQgc2lkZUluZm8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG5zaWRlSW5mby5jbGFzc0xpc3QuYWRkKFwiY2hhcnRfc2lkZUluZm9cIilcbiBsZXQgYWJvdXRfcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuc2lkZUluZm8uaW5uZXJIVE1MID0gYDxoMT5XaGF0IGlzIHRoZSBmdXR1cmUgb2YgdGhlIGdhbWluZyBpbmR1c3RyeT88L2gxPmA7XG5hYm91dF9wLmlubmVySFRNTCA9XG4gIFwiR2FtaW5nIGlzIG5vdyBhIGJpZ2dlciBpbmR1c3RyeSB0aGFuIG1vdmllcyBhbmQgc3BvcnRzIGNvbWJpbmVkLiBSZXZlbnVlIGZvciBnYW1pbmcgcmVhY2hlZCAkMTg0IGJpbGxpb24gaW4gMjAyMiwgYW5kIHRoZSBudW1iZXIgb2YgZ2FtZXJzIGlzIGV4cGVjdGVkIHRvIGdyb3cgdG8gMy42IGJpbGxpb24gYnkgMjAyNS4gSXQncyBub3QganVzdCBraWRzIGVpdGhlcjogMzggcGVyY2VudCBvZiBnYW1lcnMgYXJlIGJldHdlZW4gdGhlIGFnZXMgb2YgMTggYW5kIDM0IHllYXJzLCBhbmQgMTYgcGVyY2VudCBhcmUgb2xkZXIgdGhhbiA1NS5cIjtcbm1haW4uYXBwZW5kQ2hpbGQoc2lkZUluZm8pXG5zaWRlSW5mby5hcHBlbmRDaGlsZChhYm91dF9wKVxuXG5cbmhhbmRsZUZpbHRlcihnZW5yZSlcbiAgLy8gQ29weXJpZ2h0IDIwMjEgT2JzZXJ2YWJsZSwgSW5jLlxuICAvLyBSZWxlYXNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gIC8vIGh0dHBzOi8vb2JzZXJ2YWJsZWhxLmNvbS9AZDMvbXVsdGktbGluZS1jaGFydFxuXG4gIGZ1bmN0aW9uIExpbmVDaGFydChcbiAgICBkYXRhLFxuICAgIHtcbiAgICAgIHggPSAoW3hdKSA9PiB4LCAvLyBnaXZlbiBkIGluIGRhdGEsIHJldHVybnMgdGhlICh0ZW1wb3JhbCkgeC12YWx1ZVxuICAgICAgeSA9IChbLCB5XSkgPT4geSwgLy8gZ2l2ZW4gZCBpbiBkYXRhLCByZXR1cm5zIHRoZSAocXVhbnRpdGF0aXZlKSB5LXZhbHVlXG4gICAgICAvLyB6ID0gKFt6XSkgPT4geiwgdGhpcyBpcyBub3Qgd29ya2luZ1xuICAgICAgdGl0bGUsIC8vIGdpdmVuIGQgaW4gZGF0YSwgcmV0dXJucyB0aGUgdGl0bGUgdGV4dFxuICAgICAgZGVmaW5lZCwgLy8gZm9yIGdhcHMgaW4gZGF0YVxuICAgICAgY3VydmUgPSBkMy5jdXJ2ZUxpbmVhciwgLy8gbWV0aG9kIG9mIGludGVycG9sYXRpb24gYmV0d2VlbiBwb2ludHNcbiAgICAgIG1hcmdpblRvcCA9IDIwLCAvLyB0b3AgbWFyZ2luLCBpbiBwaXhlbHNcbiAgICAgIG1hcmdpblJpZ2h0ID0gMzAsIC8vIHJpZ2h0IG1hcmdpbiwgaW4gcGl4ZWxzXG4gICAgICBtYXJnaW5Cb3R0b20gPSAzMCwgLy8gYm90dG9tIG1hcmdpbiwgaW4gcGl4ZWxzXG4gICAgICBtYXJnaW5MZWZ0ID0gNDAsIC8vIGxlZnQgbWFyZ2luLCBpbiBwaXhlbHNcbiAgICAgIHdpZHRoID0gNjQwLCAvLyBvdXRlciB3aWR0aCwgaW4gcGl4ZWxzXG4gICAgICBoZWlnaHQgPSA0MDAsIC8vIG91dGVyIGhlaWdodCwgaW4gcGl4ZWxzXG4gICAgICB4VHlwZSA9IGQzLnNjYWxlVXRjLCAvLyB0eXBlIG9mIHgtc2NhbGVcbiAgICAgIHhEb21haW4sIC8vIFt4bWluLCB4bWF4XVxuICAgICAgeFJhbmdlID0gW21hcmdpbkxlZnQsIHdpZHRoIC0gbWFyZ2luUmlnaHRdLCAvLyBbbGVmdCwgcmlnaHRdXG4gICAgICB5VHlwZSA9IGQzLnNjYWxlTGluZWFyLCAvLyB0eXBlIG9mIHktc2NhbGVcbiAgICAgIHlEb21haW4sIC8vIFt5bWluLCB5bWF4XVxuICAgICAgeVJhbmdlID0gW2hlaWdodCAtIG1hcmdpbkJvdHRvbSwgbWFyZ2luVG9wXSwgLy8gW2JvdHRvbSwgdG9wXVxuICAgICAgY29sb3IgPSBcImN1cnJlbnRDb2xvclwiLCAvLyBzdHJva2UgY29sb3Igb2YgbGluZVxuICAgICAgc3Ryb2tlV2lkdGggPSAxLjUsIC8vIHN0cm9rZSB3aWR0aCBvZiBsaW5lLCBpbiBwaXhlbHNcbiAgICAgIHN0cm9rZUxpbmVqb2luID0gXCJyb3VuZFwiLCAvLyBzdHJva2UgbGluZSBqb2luIG9mIGxpbmVcbiAgICAgIHN0cm9rZUxpbmVjYXAgPSBcInJvdW5kXCIsIC8vIHN0cm9rZSBsaW5lIGNhcCBvZiBsaW5lXG4gICAgICB5Rm9ybWF0LCAvLyBhIGZvcm1hdCBzcGVjaWZpZXIgc3RyaW5nIGZvciB0aGUgeS1heGlzXG4gICAgICB5TGFiZWwsIC8vIGEgbGFiZWwgZm9yIHRoZSB5LWF4aXNcbiAgICB9ID0ge31cbiAgKSB7XG4gICAgLy8gQ29tcHV0ZSB2YWx1ZXMuXG4gICAgY29uc3QgWCA9IGQzLm1hcChkYXRhLCB4KTtcbiAgICBjb25zdCBZID0gZDMubWFwKGRhdGEsIHkpO1xuICAgIGNvbnN0IE8gPSBkMy5tYXAoZGF0YSwgKGQpID0+IGQpO1xuICAgIGNvbnN0IEkgPSBkMy5tYXAoZGF0YSwgKF8sIGkpID0+IGkpO1xuXG4gICAgLy8gQ29tcHV0ZSB3aGljaCBkYXRhIHBvaW50cyBhcmUgY29uc2lkZXJlZCBkZWZpbmVkLlxuICAgIGlmIChkZWZpbmVkID09PSB1bmRlZmluZWQpIGRlZmluZWQgPSAoZCwgaSkgPT4gIWlzTmFOKFhbaV0pICYmICFpc05hTihZW2ldKTtcbiAgICBjb25zdCBEID0gZDMubWFwKGRhdGEsIGRlZmluZWQpO1xuXG4gICAgLy8gQ29tcHV0ZSBkZWZhdWx0IGRvbWFpbnMuXG4gICAgaWYgKHhEb21haW4gPT09IHVuZGVmaW5lZCkgeERvbWFpbiA9IGQzLmV4dGVudChYKTtcbiAgICBpZiAoeURvbWFpbiA9PT0gdW5kZWZpbmVkKSB5RG9tYWluID0gWzAsIGQzLm1heChZKV07XG5cbiAgICAvLyBDb25zdHJ1Y3Qgc2NhbGVzIGFuZCBheGVzLlxuICAgIGNvbnN0IHhTY2FsZSA9IHhUeXBlKHhEb21haW4sIHhSYW5nZSk7XG4gICAgY29uc3QgeVNjYWxlID0geVR5cGUoeURvbWFpbiwgeVJhbmdlKTtcbiAgICAvLyBjb25zdCB4QXhpcyA9IGQzLmF4aXNCb3R0b20oeFNjYWxlKS50aWNrcyh3aWR0aCAvIDgwKS50aWNrU2l6ZU91dGVyKDApO1xuICAgIGNvbnN0IHhBeGlzID0gZDNcbiAgICAgIC5heGlzQm90dG9tKHhTY2FsZSlcbiAgICAgIC50aWNrcyh3aWR0aCAvIDgwKVxuICAgICAgLnRpY2tGb3JtYXQoZDMudGltZUZvcm1hdChcIiVZXCIpKVxuICAgICAgLnRpY2tTaXplT3V0ZXIoMCk7XG4gICAgY29uc3QgeUF4aXMgPSBkMy5heGlzTGVmdCh5U2NhbGUpLnRpY2tzKGhlaWdodCAvIDQwLCB5Rm9ybWF0KTtcblxuICAgIC8vIENvbXB1dGUgdGl0bGVzLlxuICAgIGlmICh0aXRsZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBmb3JtYXREYXRlID0geFNjYWxlLnRpY2tGb3JtYXQobnVsbCwgXCIlYiAlLWQsICVZXCIpO1xuICAgICAgY29uc3QgZm9ybWF0VmFsdWUgPSB5U2NhbGUudGlja0Zvcm1hdCgxMDAsIHlGb3JtYXQpO1xuICAgICAgdGl0bGUgPSAoaSkgPT4gYCR7Zm9ybWF0RGF0ZShYW2ldKX1cXG4ke2Zvcm1hdFZhbHVlKFlbaV0pfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IE8gPSBkMy5tYXAoZGF0YSwgKGQpID0+IGQpO1xuICAgICAgY29uc3QgVCA9IHRpdGxlO1xuICAgICAgdGl0bGUgPSAoaSkgPT4gVChPW2ldLCBpLCBkYXRhKTtcbiAgICB9XG5cbiAgICAvLyBDb25zdHJ1Y3QgYSBsaW5lIGdlbmVyYXRvci5cbiAgICBjb25zdCBsaW5lID0gZDNcbiAgICAgIC5saW5lKClcbiAgICAgIC5kZWZpbmVkKChpKSA9PiBEW2ldKVxuICAgICAgLmN1cnZlKGN1cnZlKVxuICAgICAgLngoKGkpID0+IHhTY2FsZShYW2ldKSlcbiAgICAgIC55KChpKSA9PiB5U2NhbGUoWVtpXSkpO1xuXG4gICAgY29uc3Qgc3ZnID0gZDNcbiAgICAgIC5jcmVhdGUoXCJzdmdcIilcbiAgICAgIC5hdHRyKFwid2lkdGhcIiwgd2lkdGgpXG4gICAgICAuYXR0cihcImhlaWdodFwiLCBoZWlnaHQpXG4gICAgICAuYXR0cihcInZpZXdCb3hcIiwgWzAsIDAsIHdpZHRoLCBoZWlnaHRdKVxuICAgICAgLmF0dHIoXCJzdHlsZVwiLCBcIm1heC13aWR0aDogMTAwJTsgaGVpZ2h0OiBhdXRvOyBoZWlnaHQ6IGludHJpbnNpYztcIilcbiAgICAgIC5hdHRyKFwiZm9udC1mYW1pbHlcIiwgXCJzYW5zLXNlcmlmXCIpXG4gICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCAxMClcbiAgICAgIC5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLCBcInRyYW5zcGFyZW50XCIpXG4gICAgICAuc3R5bGUoXCJvdmVyZmxvd1wiLCBcInZpc2libGVcIilcbiAgICAgIC5vbihcInBvaW50ZXJlbnRlciBwb2ludGVybW92ZVwiLCBwb2ludGVybW92ZWQpXG4gICAgICAub24oXCJwb2ludGVybGVhdmVcIiwgcG9pbnRlcmxlZnQpXG4gICAgICAub24oXCJ0b3VjaHN0YXJ0XCIsIChldmVudCkgPT4gZXZlbnQucHJldmVudERlZmF1bHQoKSk7XG5cbiAgICBzdmdcbiAgICAgIC5hcHBlbmQoXCJnXCIpXG4gICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKDAsJHtoZWlnaHQgLSBtYXJnaW5Cb3R0b219KWApXG4gICAgICAuY2FsbCh4QXhpcyk7XG5cbiAgICBzdmdcbiAgICAgIC5hcHBlbmQoXCJnXCIpXG4gICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7bWFyZ2luTGVmdH0sMClgKVxuICAgICAgLmNhbGwoeUF4aXMpXG4gICAgICAuY2FsbCgoZykgPT4gZy5zZWxlY3QoXCIuZG9tYWluXCIpLnJlbW92ZSgpKVxuICAgICAgLmNhbGwoKGcpID0+XG4gICAgICAgIGdcbiAgICAgICAgICAuc2VsZWN0QWxsKFwiLnRpY2sgbGluZVwiKVxuICAgICAgICAgIC5jbG9uZSgpXG4gICAgICAgICAgLmF0dHIoXCJ4MlwiLCB3aWR0aCAtIG1hcmdpbkxlZnQgLSBtYXJnaW5SaWdodClcbiAgICAgICAgICAuYXR0cihcInN0cm9rZS1vcGFjaXR5XCIsIDAuMSlcbiAgICAgIClcbiAgICAgIC5jYWxsKChnKSA9PlxuICAgICAgICBnXG4gICAgICAgICAgLmFwcGVuZChcInRleHRcIilcbiAgICAgICAgICAuYXR0cihcInhcIiwgLW1hcmdpbkxlZnQpXG4gICAgICAgICAgLmF0dHIoXCJ5XCIsIDEwKVxuICAgICAgICAgIC5hdHRyKFwiZmlsbFwiLCBcImN1cnJlbnRDb2xvclwiKVxuICAgICAgICAgIC5hdHRyKFwidGV4dC1hbmNob3JcIiwgXCJzdGFydFwiKVxuICAgICAgICAgIC50ZXh0KHlMYWJlbClcbiAgICAgICk7XG5cbiAgICBzdmdcbiAgICAgIC5hcHBlbmQoXCJwYXRoXCIpXG4gICAgICAuYXR0cihcImZpbGxcIiwgXCJub25lXCIpXG4gICAgICAuYXR0cihcInN0cm9rZVwiLCBjb2xvcilcbiAgICAgIC5hdHRyKFwic3Ryb2tlLXdpZHRoXCIsIHN0cm9rZVdpZHRoKVxuICAgICAgLmF0dHIoXCJzdHJva2UtbGluZWpvaW5cIiwgc3Ryb2tlTGluZWpvaW4pXG4gICAgICAuYXR0cihcInN0cm9rZS1saW5lY2FwXCIsIHN0cm9rZUxpbmVjYXApXG4gICAgICAuYXR0cihcImRcIiwgbGluZShJKSk7XG5cbiAgICBjb25zdCB0b29sdGlwID0gc3ZnLmFwcGVuZChcImdcIikuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBcIm5vbmVcIik7XG5cbiAgICBmdW5jdGlvbiBwb2ludGVybW92ZWQoZXZlbnQpIHtcbiAgICAgIGNvbnN0IGkgPSBkMy5iaXNlY3RDZW50ZXIoWCwgeFNjYWxlLmludmVydChkMy5wb2ludGVyKGV2ZW50KVswXSkpO1xuICAgICAgdG9vbHRpcC5zdHlsZShcImRpc3BsYXlcIiwgbnVsbCk7XG4gICAgICB0b29sdGlwLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke3hTY2FsZShYW2ldKX0sJHt5U2NhbGUoWVtpXSl9KWApO1xuXG4gICAgICBjb25zdCBwYXRoID0gdG9vbHRpcFxuICAgICAgICAuc2VsZWN0QWxsKFwicGF0aFwiKVxuICAgICAgICAuZGF0YShbLF0pXG4gICAgICAgIC5qb2luKFwicGF0aFwiKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJ3aGl0ZVwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcImJsYWNrXCIpO1xuXG4gICAgICBjb25zdCB0ZXh0ID0gdG9vbHRpcFxuICAgICAgICAuc2VsZWN0QWxsKFwidGV4dFwiKVxuICAgICAgICAuZGF0YShbLF0pXG4gICAgICAgIC5qb2luKFwidGV4dFwiKVxuICAgICAgICAuY2FsbCgodGV4dCkgPT5cbiAgICAgICAgICB0ZXh0XG4gICAgICAgICAgICAuc2VsZWN0QWxsKFwidHNwYW5cIilcbiAgICAgICAgICAgIC5kYXRhKGAke3RpdGxlKGkpfWAuc3BsaXQoL1xcbi8pKVxuICAgICAgICAgICAgLmpvaW4oXCJ0c3BhblwiKVxuICAgICAgICAgICAgLmF0dHIoXCJ4XCIsIDApXG4gICAgICAgICAgICAuYXR0cihcInlcIiwgKF8sIGkpID0+IGAke2kgKiAxLjF9ZW1gKVxuICAgICAgICAgICAgLmF0dHIoXCJmb250LXdlaWdodFwiLCAoXywgaSkgPT4gKGkgPyBudWxsIDogXCJib2xkXCIpKVxuICAgICAgICAgICAgLnRleHQoKGQpID0+IGQpXG4gICAgICAgICk7XG5cbiAgICAgIGNvbnN0IHsgeCwgeSwgd2lkdGg6IHcsIGhlaWdodDogaCB9ID0gdGV4dC5ub2RlKCkuZ2V0QkJveCgpO1xuICAgICAgdGV4dC5hdHRyKFwidHJhbnNmb3JtXCIsIGB0cmFuc2xhdGUoJHstdyAvIDJ9LCR7MTUgLSB5fSlgKTtcbiAgICAgIHBhdGguYXR0cihcbiAgICAgICAgXCJkXCIsXG4gICAgICAgIGBNJHstdyAvIDIgLSAxMH0sNUgtNWw1LC01bDUsNUgke3cgLyAyICsgMTB9diR7aCArIDIwfWgtJHt3ICsgMjB9emBcbiAgICAgICk7XG4gICAgICBzdmcucHJvcGVydHkoXCJ2YWx1ZVwiLCBPW2ldKS5kaXNwYXRjaChcImlucHV0XCIsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2ludGVybGVmdCgpIHtcbiAgICAgIHRvb2x0aXAuc3R5bGUoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcbiAgICAgIHN2Zy5ub2RlKCkudmFsdWUgPSBudWxsO1xuICAgICAgc3ZnLmRpc3BhdGNoKFwiaW5wdXRcIiwgeyBidWJibGVzOiB0cnVlIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHN2Zy5ub2RlKCksIHsgdmFsdWU6IG51bGwgfSk7XG4gIH1cbn1cblxuXG5cblxuIGNvbnN0IGhhbmRsZUZpbHRlciA9IChnZW5yZXMpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpblwiKTtcbiAgY29uc3QgZ2VucmVTZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuICBnZW5yZVNlbGVjdC5jbGFzc0xpc3QuYWRkKFwiZ2VucmVfc2VsZWN0XCIpO1xuXG4gIGNvbnN0IHNpZGVJbmZvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGFydF9zaWRlSW5mb1wiKTtcbiAgc2lkZUluZm8uYXBwZW5kQ2hpbGQoZ2VucmVTZWxlY3QpO1xuXG4gIGNvbnN0IHNlbGVjdE9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gIHNlbGVjdE9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJsYWJlbFwiLCBcIlNlbGVjdCBPcHRpb25zXCIpO1xuICBzZWxlY3RPcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJub2NhcFwiKTtcbiAgc2VsZWN0T3B0aW9uLnNlbGVjdGVkID0gdHJ1ZTtcbiAgc2VsZWN0T3B0aW9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgZ2VucmVTZWxlY3QuYXBwZW5kQ2hpbGQoc2VsZWN0T3B0aW9uKTtcblxuICAoXCJjb21pbmcgZnJvbSBsaW5lYXJDaGFydFwiKTtcbiAgLy9nZXR0aW5nIG5hbWUgb2YgZ2VucmVzIGZvciBmaWx0ZXJpbmdcbiAgY29uc3QgZ2VucmVGb3JGaWx0ZXIgPSBbXTtcblxuICBPYmplY3Qua2V5cyhnZW5yZXMpLmZvckVhY2goKGtleXMpID0+IHtcbiAgICBpZiAoa2V5cyAhPT0gXCIgTU1PUlBHXCIpIHtcbiAgICAgIGdlbnJlRm9yRmlsdGVyLnB1c2goa2V5cyk7XG4gICAgfVxuICB9KTtcblxuICAvL2dldCB0aGUgcGVyY2VudGFnZSBvZiBlYWNoIGdlbnJlXG4gIGNvbnN0IGdlbnJlc0ZpbHRlciA9IGdlbnJlRm9yRmlsdGVyLm1hcCgoa2V5KSA9PiB7XG4gICAgcmV0dXJuIFtrZXksIGdlbnJlc1trZXldLmxlbmd0aF07XG4gIH0pO1xuXG4gIC8vIChnZW5yZXNGaWx0ZXIpO1xuXG4gIC8vYXNzaWduaW5nIGtleXMgdG8gdWxcbiAgZ2VucmVzRmlsdGVyLmZvckVhY2goKGtleSwgaSkgPT4ge1xuICAgIGNvbnN0IGdlbnJlTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgZ2VucmVMaXN0LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2tleVswXX1gKTtcbiAgICBnZW5yZUxpc3Quc2V0QXR0cmlidXRlKFwiaWRcIiwgYCR7a2V5WzBdfWApO1xuICAgIChrZXlbMV0pO1xuXG4gICAgZ2VucmVMaXN0LmlubmVySFRNTCA9IGAke2tleVswXX1gO1xuXG4gICAgZ2VucmVTZWxlY3QuYXBwZW5kQ2hpbGQoZ2VucmVMaXN0KTtcbiAgfSk7XG5cbiAgY29uc3QgZmlsdGVyZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNob290ZXJcIik7XG4gIC8vIChmaWx0ZXJlZClcbiAgbGV0IHNlbGVjdGVkT3B0aW9uID0gXCJub2NhcFwiO1xuXG4gIGdlbnJlU2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoZXZlbnQudGFyZ2V0LnZhbHVlICE9PSBzZWxlY3RlZE9wdGlvbikge1xuICAgICAgKGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgICBzZWxlY3RlZE9wdGlvbiA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICAgIC8vY3JlYXRpbmdDaGFydFxuICAgICAgZmlsdGVyZWRDaGFydChzZWxlY3RlZE9wdGlvbiwgZ2VucmVzW3NlbGVjdGVkT3B0aW9uXSk7XG4gICAgfVxuXG4gICAgLy9vbWcgZmluYWxseSBnb3QgaXRcbiAgICAoZ2VucmVzW3NlbGVjdGVkT3B0aW9uXSk7XG4gIH0pO1xuXG4gIC8vIHJldHVybiBnZW5yZXNbc2VsZWN0ZWRPcHRpb25dXG59O1xuXG4iXSwibmFtZXMiOlsiZmlsdGVyZWRDaGFydCIsImNyZWF0ZUNoYXJ0IiwiZGF0YSIsImdlbnJlIiwiZ2FtZXMiLCJmaWx0ZXIiLCJkIiwicmVsZWFzZV9kYXRlIiwibWFwIiwieWVhciIsIkRhdGUiLCJwYXJzZSIsImdldEZ1bGxZZWFyIiwicmVsZWFzZV95ZWFyIiwidG90YWxzIiwicmVkdWNlIiwiYWNjIiwiZ2FtZSIsImNoYXJ0IiwiTGluZUNoYXJ0IiwiT2JqZWN0IiwiZW50cmllcyIsIl9yZWYiLCJjb3VudCIsInRpdGxlIiwieCIsInkiLCJ6IiwieUxhYmVsIiwieExhYmVsIiwid2lkdGgiLCJoZWlnaHQiLCJ4QXhpc0Zvcm1hdCIsImQzIiwidGltZUZvcm1hdCIsIm1haW4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaDEiLCJjcmVhdGVFbGVtZW50IiwibWFpbkNoYXJ0IiwiaW5uZXJIVE1MIiwicCIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwic2lkZUluZm8iLCJjbGFzc0xpc3QiLCJhZGQiLCJhYm91dF9wIiwiaGFuZGxlRmlsdGVyIiwiX3JlZjIiLCJfcmVmMyIsImRlZmluZWQiLCJjdXJ2ZSIsImN1cnZlTGluZWFyIiwibWFyZ2luVG9wIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW5MZWZ0IiwieFR5cGUiLCJzY2FsZVV0YyIsInhEb21haW4iLCJ4UmFuZ2UiLCJ5VHlwZSIsInNjYWxlTGluZWFyIiwieURvbWFpbiIsInlSYW5nZSIsImNvbG9yIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lam9pbiIsInN0cm9rZUxpbmVjYXAiLCJ5Rm9ybWF0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiWCIsIlkiLCJPIiwiSSIsIl8iLCJpIiwiaXNOYU4iLCJEIiwiZXh0ZW50IiwibWF4IiwieFNjYWxlIiwieVNjYWxlIiwieEF4aXMiLCJheGlzQm90dG9tIiwidGlja3MiLCJ0aWNrRm9ybWF0IiwidGlja1NpemVPdXRlciIsInlBeGlzIiwiYXhpc0xlZnQiLCJmb3JtYXREYXRlIiwiZm9ybWF0VmFsdWUiLCJUIiwibGluZSIsInN2ZyIsImNyZWF0ZSIsImF0dHIiLCJzdHlsZSIsIm9uIiwicG9pbnRlcm1vdmVkIiwicG9pbnRlcmxlZnQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiYXBwZW5kIiwiY2FsbCIsImciLCJzZWxlY3QiLCJyZW1vdmUiLCJzZWxlY3RBbGwiLCJjbG9uZSIsInRleHQiLCJ0b29sdGlwIiwiYmlzZWN0Q2VudGVyIiwiaW52ZXJ0IiwicG9pbnRlciIsInBhdGgiLCJqb2luIiwic3BsaXQiLCJ3IiwiaCIsIm5vZGUiLCJnZXRCQm94IiwicHJvcGVydHkiLCJkaXNwYXRjaCIsImJ1YmJsZXMiLCJ2YWx1ZSIsImFzc2lnbiIsImdlbnJlcyIsInF1ZXJ5U2VsZWN0b3IiLCJnZW5yZVNlbGVjdCIsInNlbGVjdE9wdGlvbiIsInNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnZW5yZUZvckZpbHRlciIsImtleXMiLCJmb3JFYWNoIiwicHVzaCIsImdlbnJlc0ZpbHRlciIsImtleSIsImdlbnJlTGlzdCIsImZpbHRlcmVkIiwic2VsZWN0ZWRPcHRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/chart/lineChart.js\n");

/***/ }),

/***/ "./src/scripts/components/mainPage.js":
/*!********************************************!*\
  !*** ./src/scripts/components/mainPage.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleDataPage\": function() { return /* binding */ handleDataPage; },\n/* harmony export */   \"handlePage\": function() { return /* binding */ handlePage; },\n/* harmony export */   \"renderMainPage\": function() { return /* binding */ renderMainPage; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nconst renderMainPage = () => {\n  const main = document.getElementById(\"main\");\n  main.innerHTML = `\n <div class=\"main_page_wrapper\">\n    <div class=\"_page\">\n        <h1>Level Up Your</h1>\n        <h1> <span>Gaming</span> Knowledge</h1>\n        <h1>Search, Discover and <span>Play</span></h1>\n\n        <button id=\"game_button\">Explore</button>\n    </div>\n    <div class=\"_page data\">\n        <h1>Get the <span>Edge</span></h1>\n        <h1>with Our Comprehensive</h1>\n        <h1> Gaming<span> Data</span> Analysis</h1>\n        <button id=\"data_button\">Explore</button>\n    </div>\n</div>\n\n    `;\n};\nfunction handlePage(allData) {\n  'handlepage';\n  const main = document.querySelector(\"#main\");\n  const renderButton = document.querySelector(\"#game_button\");\n  renderButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    \"button\";\n    main.innerHTML = \"\";\n    main.classList.add(\"card_page\");\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}\nfunction handleDataPage(allData, data) {\n  const dataButton = document.querySelector(\"#data_button\");\n  const main = document.getElementById('main');\n  main.classList.remove(\"card_page\");\n  dataButton.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    \"databutton\";\n    // handleFilter(data)\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n\n    // createMultiChart(dispatchGenre(data));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL21haW5QYWdlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0Q7QUFLekMsTUFBTUMsY0FBYyxHQUFHQSxDQUFBLEtBQU07RUFDbEMsTUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDNUNGLElBQUksQ0FBQ0csU0FBUyxHQUFJO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFFTSxTQUFTQyxVQUFVQSxDQUFDQyxPQUFPLEVBQUU7RUFDakMsWUFBWTtFQUViLE1BQU1MLElBQUksR0FBR0MsUUFBUSxDQUFDSyxhQUFhLENBQUMsT0FBTyxDQUFDO0VBQzVDLE1BQU1DLFlBQVksR0FBR04sUUFBUSxDQUFDSyxhQUFhLENBQUMsY0FBYyxDQUFDO0VBQzNEQyxZQUFZLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQ2hEQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUNyQixRQUFRO0lBQ1RWLElBQUksQ0FBQ0csU0FBUyxHQUFHLEVBQUU7SUFDbkJILElBQUksQ0FBQ1csU0FBUyxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO0lBQy9CUCxPQUFPLENBQUNRLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO01BRXhCLE1BQU1DLElBQUksR0FBR2QsUUFBUSxDQUFDZSxhQUFhLENBQUMsS0FBSyxDQUFDO01BQ3ZDRCxJQUFJLENBQUNaLFNBQVMsR0FBSTtBQUMzQixrREFBa0RXLElBQUksQ0FBQ0csU0FBVTtBQUNqRTtBQUNBLGlDQUFpQ0gsSUFBSSxDQUFDSSxLQUFNO0FBQzVDLDBCQUEwQkosSUFBSSxDQUFDSyxLQUFNO0FBQ3JDLGdDQUFnQ0wsSUFBSSxDQUFDTSxpQkFBa0I7QUFDdkQ7QUFDQTtBQUNBLE9BQU87TUFDRHBCLElBQUksQ0FBQ3FCLFdBQVcsQ0FBQ04sSUFBSSxDQUFDO0lBQ3hCLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKO0FBRU8sU0FBU08sY0FBY0EsQ0FBQ2pCLE9BQU8sRUFBRWtCLElBQUksRUFBRTtFQUM1QyxNQUFNQyxVQUFVLEdBQUd2QixRQUFRLENBQUNLLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDekQsTUFBTU4sSUFBSSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDM0NGLElBQUksQ0FBQ1csU0FBUyxDQUFDYyxNQUFNLENBQUMsV0FBVyxDQUFDO0VBQ25DRCxVQUFVLENBQUNoQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUdDLEtBQUssSUFBSztJQUM5Q0EsS0FBSyxDQUFDQyxjQUFjLEVBQUU7SUFDdEJWLElBQUksQ0FBQ0csU0FBUyxHQUFHLEVBQUU7SUFDbEIsWUFBWTtJQUNiO0lBQ0FMLDZEQUFXLENBQUNPLE9BQU8sRUFBQ2tCLElBQUksQ0FBQzs7SUFFekI7RUFDRixDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9tYWluUGFnZS5qcz8zMDNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNoYXJ0IH0gZnJvbSBcIi4vY2hhcnQvbGluZUNoYXJ0XCI7XG5cblxuXG5cbmV4cG9ydCBjb25zdCByZW5kZXJNYWluUGFnZSA9ICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgbWFpbi5pbm5lckhUTUwgPSBgXG4gPGRpdiBjbGFzcz1cIm1haW5fcGFnZV93cmFwcGVyXCI+XG4gICAgPGRpdiBjbGFzcz1cIl9wYWdlXCI+XG4gICAgICAgIDxoMT5MZXZlbCBVcCBZb3VyPC9oMT5cbiAgICAgICAgPGgxPiA8c3Bhbj5HYW1pbmc8L3NwYW4+IEtub3dsZWRnZTwvaDE+XG4gICAgICAgIDxoMT5TZWFyY2gsIERpc2NvdmVyIGFuZCA8c3Bhbj5QbGF5PC9zcGFuPjwvaDE+XG5cbiAgICAgICAgPGJ1dHRvbiBpZD1cImdhbWVfYnV0dG9uXCI+RXhwbG9yZTwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJfcGFnZSBkYXRhXCI+XG4gICAgICAgIDxoMT5HZXQgdGhlIDxzcGFuPkVkZ2U8L3NwYW4+PC9oMT5cbiAgICAgICAgPGgxPndpdGggT3VyIENvbXByZWhlbnNpdmU8L2gxPlxuICAgICAgICA8aDE+IEdhbWluZzxzcGFuPiBEYXRhPC9zcGFuPiBBbmFseXNpczwvaDE+XG4gICAgICAgIDxidXR0b24gaWQ9XCJkYXRhX2J1dHRvblwiPkV4cGxvcmU8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuXG4gICAgYDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVQYWdlKGFsbERhdGEpIHtcbiAgKCdoYW5kbGVwYWdlJylcblxuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluXCIpO1xuICBjb25zdCByZW5kZXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dhbWVfYnV0dG9uXCIpO1xuICByZW5kZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgKFwiYnV0dG9uXCIpO1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICBtYWluLmNsYXNzTGlzdC5hZGQoXCJjYXJkX3BhZ2VcIik7XG4gICAgYWxsRGF0YS5mb3JFYWNoKChnYW1lKSA9PiB7XG5cbiAgICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgY2FyZC5pbm5lckhUTUwgPSBgXG48ZGl2IGNsYXNzPVwiY2FyZFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKCcke2dhbWUudGh1bWJuYWlsfScpOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1wiPlxuICAgICAgPHVsIGNsYXNzPVwiY2FyZF9pbmZvXCI+XG4gICAgICA8bGk+PGgxIGlkID1cImdhbWVfdGl0bGVcIj4ke2dhbWUudGl0bGV9PC9oMT48L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZ2VucmVcIj4ke2dhbWUuZ2VucmV9PC9saT5cbiAgICAgIDxsaSBjbGFzcz1cImRlc2NyaXB0aW9uXCI+JHtnYW1lLnNob3J0X2Rlc2NyaXB0aW9ufTwvbGk+XG4gICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgICAgbWFpbi5hcHBlbmRDaGlsZChjYXJkKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVEYXRhUGFnZShhbGxEYXRhLCBkYXRhKSB7XG4gIGNvbnN0IGRhdGFCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RhdGFfYnV0dG9uXCIpO1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKVxuICAgbWFpbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9wYWdlXCIpO1xuICBkYXRhQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAoXCJkYXRhYnV0dG9uXCIpO1xuICAgIC8vIGhhbmRsZUZpbHRlcihkYXRhKVxuICAgIGNyZWF0ZUNoYXJ0KGFsbERhdGEsZGF0YSk7XG5cbiAgICAvLyBjcmVhdGVNdWx0aUNoYXJ0KGRpc3BhdGNoR2VucmUoZGF0YSkpO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDaGFydCIsInJlbmRlck1haW5QYWdlIiwibWFpbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJoYW5kbGVQYWdlIiwiYWxsRGF0YSIsInF1ZXJ5U2VsZWN0b3IiLCJyZW5kZXJCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImNsYXNzTGlzdCIsImFkZCIsImZvckVhY2giLCJnYW1lIiwiY2FyZCIsImNyZWF0ZUVsZW1lbnQiLCJ0aHVtYm5haWwiLCJ0aXRsZSIsImdlbnJlIiwic2hvcnRfZGVzY3JpcHRpb24iLCJhcHBlbmRDaGlsZCIsImhhbmRsZURhdGFQYWdlIiwiZGF0YSIsImRhdGFCdXR0b24iLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/components/mainPage.js\n");

/***/ }),

/***/ "./src/scripts/components/navbar.js":
/*!******************************************!*\
  !*** ./src/scripts/components/navbar.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleNavbarClick\": function() { return /* binding */ handleNavbarClick; },\n/* harmony export */   \"renderNavbar\": function() { return /* binding */ renderNavbar; }\n/* harmony export */ });\n/* harmony import */ var _chart_lineChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart/lineChart */ \"./src/scripts/components/chart/lineChart.js\");\n\nconst renderNavbar = () => {\n  const navBar = document.getElementById('menu');\n  navBar.innerHTML = `\n    <li><a href=\"https://usenavigate.github.io/Whale_Gaming_Javascript_Project/\"><h1>🐳🐋</h1></a></li>\n    <li id=\"game_menu\">Games</li>\n    <li id=\"profile_menu\">Profile</li>\n    <li id=\"stat_menu\">Statistics</li>\n    `;\n};\nfunction handleNavbarClick(allData, data) {\n  const gameMenu = document.querySelector(\"#game_menu\");\n  const statMenu = document.querySelector(\"#stat_menu\");\n  statMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    // handleFilter(data);\n    (0,_chart_lineChart__WEBPACK_IMPORTED_MODULE_0__.createChart)(allData, data);\n\n    // createMultiChart(dispatchGenre(data));\n  });\n\n  gameMenu.addEventListener(\"click\", event => {\n    event.preventDefault();\n    main.innerHTML = \"\";\n    allData.forEach(game => {\n      const card = document.createElement(\"div\");\n      main.classList.add('card_page');\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.appendChild(card);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL25hdmJhci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFFekMsTUFBTUMsWUFBWSxHQUFHQSxDQUFBLEtBQU07RUFFOUIsTUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxNQUFNLENBQUM7RUFDOUNGLE1BQU0sQ0FBQ0csU0FBUyxHQUFJO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUdMLENBQUM7QUFFTSxTQUFTQyxpQkFBaUJBLENBQUNDLE9BQU8sRUFBRUMsSUFBSSxFQUFFO0VBQy9DLE1BQU1DLFFBQVEsR0FBR04sUUFBUSxDQUFDTyxhQUFhLENBQUMsWUFBWSxDQUFDO0VBQ3JELE1BQU1DLFFBQVEsR0FBR1IsUUFBUSxDQUFDTyxhQUFhLENBQUMsWUFBWSxDQUFDO0VBQ3JEQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBR0MsS0FBSyxJQUFLO0lBQzVDQSxLQUFLLENBQUNDLGNBQWMsRUFBRTtJQUN0QkMsSUFBSSxDQUFDVixTQUFTLEdBQUcsRUFBRTtJQUNuQjtJQUNBTCw2REFBVyxDQUFDTyxPQUFPLEVBQUNDLElBQUksQ0FBQzs7SUFFekI7RUFDRixDQUFDLENBQUM7O0VBRUZDLFFBQVEsQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFDQyxLQUFLLElBQUU7SUFDdkNBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCQyxJQUFJLENBQUNWLFNBQVMsR0FBQyxFQUFFO0lBQ3BCRSxPQUFPLENBQUNTLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO01BQ3hCLE1BQU1DLElBQUksR0FBR2YsUUFBUSxDQUFDZ0IsYUFBYSxDQUFDLEtBQUssQ0FBQztNQUMxQ0osSUFBSSxDQUFDSyxTQUFTLENBQUNDLEdBQUcsQ0FBQyxXQUFXLENBQUM7TUFDL0JILElBQUksQ0FBQ2IsU0FBUyxHQUFJO0FBQ3JCLGtEQUFrRFksSUFBSSxDQUFDSyxTQUFVO0FBQ2pFO0FBQ0EsaUNBQWlDTCxJQUFJLENBQUNNLEtBQU07QUFDNUMsMEJBQTBCTixJQUFJLENBQUNPLEtBQU07QUFDckMsZ0NBQWdDUCxJQUFJLENBQUNRLGlCQUFrQjtBQUN2RDtBQUNBO0FBQ0EsT0FBTztNQUNKVixJQUFJLENBQUNXLFdBQVcsQ0FBQ1IsSUFBSSxDQUFDO0lBQ3hCLENBQUMsQ0FBQztFQUNELENBQUMsQ0FBQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhbGVnYW1pbmcvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL25hdmJhci5qcz9iNGNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNoYXJ0IH0gZnJvbSBcIi4vY2hhcnQvbGluZUNoYXJ0XCI7XG5cbmV4cG9ydCBjb25zdCByZW5kZXJOYXZiYXIgPSAoKSA9PiB7XG5cbiAgICBjb25zdCBuYXZCYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudScpXG4gICAgbmF2QmFyLmlubmVySFRNTCA9IGBcbiAgICA8bGk+PGEgaHJlZj1cImh0dHBzOi8vdXNlbmF2aWdhdGUuZ2l0aHViLmlvL1doYWxlX0dhbWluZ19KYXZhc2NyaXB0X1Byb2plY3QvXCI+PGgxPvCfkLPwn5CLPC9oMT48L2E+PC9saT5cbiAgICA8bGkgaWQ9XCJnYW1lX21lbnVcIj5HYW1lczwvbGk+XG4gICAgPGxpIGlkPVwicHJvZmlsZV9tZW51XCI+UHJvZmlsZTwvbGk+XG4gICAgPGxpIGlkPVwic3RhdF9tZW51XCI+U3RhdGlzdGljczwvbGk+XG4gICAgYDtcblxuXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlTmF2YmFyQ2xpY2soYWxsRGF0YSwgZGF0YSkge1xuICBjb25zdCBnYW1lTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ2FtZV9tZW51XCIpO1xuICBjb25zdCBzdGF0TWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3RhdF9tZW51XCIpXG4gIHN0YXRNZW51LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG1haW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAvLyBoYW5kbGVGaWx0ZXIoZGF0YSk7XG4gICAgY3JlYXRlQ2hhcnQoYWxsRGF0YSxkYXRhKTtcblxuICAgIC8vIGNyZWF0ZU11bHRpQ2hhcnQoZGlzcGF0Y2hHZW5yZShkYXRhKSk7XG4gIH0pO1xuXG4gIGdhbWVNZW51LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgIG1haW4uaW5uZXJIVE1MPVwiXCJcbiBhbGxEYXRhLmZvckVhY2goKGdhbWUpID0+IHtcbiAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgbWFpbi5jbGFzc0xpc3QuYWRkKCdjYXJkX3BhZ2UnKVxuICAgY2FyZC5pbm5lckhUTUwgPSBgXG48ZGl2IGNsYXNzPVwiY2FyZFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTogdXJsKCcke2dhbWUudGh1bWJuYWlsfScpOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1wiPlxuICAgICAgPHVsIGNsYXNzPVwiY2FyZF9pbmZvXCI+XG4gICAgICA8bGk+PGgxIGlkID1cImdhbWVfdGl0bGVcIj4ke2dhbWUudGl0bGV9PC9oMT48L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZ2VucmVcIj4ke2dhbWUuZ2VucmV9PC9saT5cbiAgICAgIDxsaSBjbGFzcz1cImRlc2NyaXB0aW9uXCI+JHtnYW1lLnNob3J0X2Rlc2NyaXB0aW9ufTwvbGk+XG4gICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgbWFpbi5hcHBlbmRDaGlsZChjYXJkKTtcbiB9KVxuICB9KVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNoYXJ0IiwicmVuZGVyTmF2YmFyIiwibmF2QmFyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsImhhbmRsZU5hdmJhckNsaWNrIiwiYWxsRGF0YSIsImRhdGEiLCJnYW1lTWVudSIsInF1ZXJ5U2VsZWN0b3IiLCJzdGF0TWVudSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwibWFpbiIsImZvckVhY2giLCJnYW1lIiwiY2FyZCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0aHVtYm5haWwiLCJ0aXRsZSIsImdlbnJlIiwic2hvcnRfZGVzY3JpcHRpb24iLCJhcHBlbmRDaGlsZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/components/navbar.js\n");

/***/ }),

/***/ "./src/scripts/components/search.js":
/*!******************************************!*\
  !*** ./src/scripts/components/search.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleSearch\": function() { return /* binding */ handleSearch; },\n/* harmony export */   \"renderSearchBar\": function() { return /* binding */ renderSearchBar; }\n/* harmony export */ });\nconst renderSearchBar = () => {\n  const menu = document.getElementById(\"menu\");\n  const search = document.createElement(\"li\");\n  // search.classList.add('search')\n  search.setAttribute(\"id\", \"search\");\n  menu.appendChild(search);\n  search.innerHTML = `\n\n\n  <input id =\"searchInput\" type=\"text\" placeholder=\"search\">\n\n\n\n    `;\n};\nfunction handleSearch(games, main) {\n  const searchInput = document.getElementById(\"searchInput\");\n  searchInput.addEventListener(\"input\", event => {\n    event.preventDefault();\n    const searchTerm = event.target.value;\n    if (searchTerm.length > 3) {\n      getSearchResult(games, searchTerm, main);\n    } else {\n      main.innerHTML = \"\";\n    }\n  });\n}\nfunction getSearchResult(games, searchTerm, main) {\n  games.forEach(game => {\n    const gameTitle = game.title.toLowerCase();\n    const searchInput = searchTerm.toLowerCase();\n    // if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n    if (gameTitle[0] === searchInput[0] && gameTitle.includes(searchInput)) {\n      // (game);\n      main.classList.remove(\"card_page\");\n      const card = document.createElement(\"div\");\n      card.innerHTML = `\n<div class=\"card\" style=\"background-image: url('${game.thumbnail}'); background-size: cover;\">\n      <ul class=\"card_info\">\n      <li><h1 id =\"game_title\">${game.title}</h1></li>\n      <li class=\"genre\">${game.genre}</li>\n      <li class=\"description\">${game.short_description}</li>\n      </ul>\n      </div>\n      `;\n      main.innerHTML = \"\";\n      main.appendChild(card);\n    } //else{\n    //   main.innerHTML = \"\";\n    //   main.innerHTML = \"can't find it \";\n    // }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLGVBQWUsR0FBR0EsQ0FBQSxLQUFNO0VBQ25DLE1BQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsTUFBTSxDQUFDO0VBQzVDLE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsSUFBSSxDQUFDO0VBQzNDO0VBQ0FELE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUM7RUFDbkNMLElBQUksQ0FBQ00sV0FBVyxDQUFDSCxNQUFNLENBQUM7RUFDeEJBLE1BQU0sQ0FBQ0ksU0FBUyxHQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBRU0sU0FBU0MsWUFBWUEsQ0FBQ0MsS0FBSyxFQUFFQyxJQUFJLEVBQUU7RUFDeEMsTUFBTUMsV0FBVyxHQUFHVixRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUM7RUFDMURTLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUs7SUFDL0NBLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RCLE1BQU1DLFVBQVUsR0FBR0YsS0FBSyxDQUFDRyxNQUFNLENBQUNDLEtBQUs7SUFDckMsSUFBSUYsVUFBVSxDQUFDRyxNQUFNLEdBQUcsQ0FBQyxFQUFFO01BQ3pCQyxlQUFlLENBQUNWLEtBQUssRUFBRU0sVUFBVSxFQUFFTCxJQUFJLENBQUM7SUFDMUMsQ0FBQyxNQUFNO01BQ0xBLElBQUksQ0FBQ0gsU0FBUyxHQUFHLEVBQUU7SUFDckI7RUFDRixDQUFDLENBQUM7QUFDSjtBQUVBLFNBQVNZLGVBQWVBLENBQUNWLEtBQUssRUFBRU0sVUFBVSxFQUFFTCxJQUFJLEVBQUU7RUFDaERELEtBQUssQ0FBQ1csT0FBTyxDQUFFQyxJQUFJLElBQUs7SUFDdEIsTUFBTUMsU0FBUyxHQUFHRCxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsV0FBVyxFQUFFO0lBQzFDLE1BQU1iLFdBQVcsR0FBR0ksVUFBVSxDQUFDUyxXQUFXLEVBQUU7SUFDNUM7SUFDSyxJQUFJRixTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUtYLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSVcsU0FBUyxDQUFDRyxRQUFRLENBQUNkLFdBQVcsQ0FBQyxFQUFFO01BQzNFO01BQ0FELElBQUksQ0FBQ2dCLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFdBQVcsQ0FBQztNQUNsQyxNQUFNQyxJQUFJLEdBQUczQixRQUFRLENBQUNHLGFBQWEsQ0FBQyxLQUFLLENBQUM7TUFDMUN3QixJQUFJLENBQUNyQixTQUFTLEdBQUk7QUFDeEIsa0RBQWtEYyxJQUFJLENBQUNRLFNBQVU7QUFDakU7QUFDQSxpQ0FBaUNSLElBQUksQ0FBQ0UsS0FBTTtBQUM1QywwQkFBMEJGLElBQUksQ0FBQ1MsS0FBTTtBQUNyQyxnQ0FBZ0NULElBQUksQ0FBQ1UsaUJBQWtCO0FBQ3ZEO0FBQ0E7QUFDQSxPQUFPO01BQ0RyQixJQUFJLENBQUNILFNBQVMsR0FBRyxFQUFFO01BQ25CRyxJQUFJLENBQUNKLFdBQVcsQ0FBQ3NCLElBQUksQ0FBQztJQUN4QixDQUFDLENBQUM7SUFDRjtJQUNBO0lBQ0E7RUFDRixDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3doYWxlZ2FtaW5nLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9zZWFyY2guanM/M2NkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVuZGVyU2VhcmNoQmFyID0gKCkgPT4ge1xuICBjb25zdCBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51XCIpO1xuICBjb25zdCBzZWFyY2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gIC8vIHNlYXJjaC5jbGFzc0xpc3QuYWRkKCdzZWFyY2gnKVxuICBzZWFyY2guc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWFyY2hcIik7XG4gIG1lbnUuYXBwZW5kQ2hpbGQoc2VhcmNoKTtcbiAgc2VhcmNoLmlubmVySFRNTCA9IGBcblxuXG4gIDxpbnB1dCBpZCA9XCJzZWFyY2hJbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJzZWFyY2hcIj5cblxuXG5cbiAgICBgO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVNlYXJjaChnYW1lcywgbWFpbikge1xuICBjb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoSW5wdXRcIik7XG4gIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHNlYXJjaFRlcm0gPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgaWYgKHNlYXJjaFRlcm0ubGVuZ3RoID4gMykge1xuICAgICAgZ2V0U2VhcmNoUmVzdWx0KGdhbWVzLCBzZWFyY2hUZXJtLCBtYWluKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFNlYXJjaFJlc3VsdChnYW1lcywgc2VhcmNoVGVybSwgbWFpbikge1xuICBnYW1lcy5mb3JFYWNoKChnYW1lKSA9PiB7XG4gICAgY29uc3QgZ2FtZVRpdGxlID0gZ2FtZS50aXRsZS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2VhcmNoVGVybS50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIGlmIChnYW1lVGl0bGVbMF0gPT09IHNlYXJjaElucHV0WzBdICYmIGdhbWVUaXRsZS5pbmNsdWRlcyhzZWFyY2hJbnB1dCkpIHtcbiAgICAgICAgIGlmIChnYW1lVGl0bGVbMF0gPT09IHNlYXJjaElucHV0WzBdICYmIGdhbWVUaXRsZS5pbmNsdWRlcyhzZWFyY2hJbnB1dCkpIHtcbiAgICAgIC8vIChnYW1lKTtcbiAgICAgIG1haW4uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfcGFnZVwiKVxuICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBjYXJkLmlubmVySFRNTCA9IGBcbjxkaXYgY2xhc3M9XCJjYXJkXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7Z2FtZS50aHVtYm5haWx9Jyk7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7XCI+XG4gICAgICA8dWwgY2xhc3M9XCJjYXJkX2luZm9cIj5cbiAgICAgIDxsaT48aDEgaWQgPVwiZ2FtZV90aXRsZVwiPiR7Z2FtZS50aXRsZX08L2gxPjwvbGk+XG4gICAgICA8bGkgY2xhc3M9XCJnZW5yZVwiPiR7Z2FtZS5nZW5yZX08L2xpPlxuICAgICAgPGxpIGNsYXNzPVwiZGVzY3JpcHRpb25cIj4ke2dhbWUuc2hvcnRfZGVzY3JpcHRpb259PC9saT5cbiAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIGA7XG4gICAgICBtYWluLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICBtYWluLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH0gLy9lbHNle1xuICAgIC8vICAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgIC8vICAgbWFpbi5pbm5lckhUTUwgPSBcImNhbid0IGZpbmQgaXQgXCI7XG4gICAgLy8gfVxuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJyZW5kZXJTZWFyY2hCYXIiLCJtZW51IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInNlYXJjaCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsImlubmVySFRNTCIsImhhbmRsZVNlYXJjaCIsImdhbWVzIiwibWFpbiIsInNlYXJjaElucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzZWFyY2hUZXJtIiwidGFyZ2V0IiwidmFsdWUiLCJsZW5ndGgiLCJnZXRTZWFyY2hSZXN1bHQiLCJmb3JFYWNoIiwiZ2FtZSIsImdhbWVUaXRsZSIsInRpdGxlIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImNsYXNzTGlzdCIsInJlbW92ZSIsImNhcmQiLCJ0aHVtYm5haWwiLCJnZW5yZSIsInNob3J0X2Rlc2NyaXB0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/components/search.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFsZWdhbWluZy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;